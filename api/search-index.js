var N=null,E="",T="t",U="u",searchIndex={};
var R=["Global","Memory","AnyRef","FuncRef","hostref","option","callable","functype","global","globaltype","tabletype","memorytype","instance","instancehandle","module","result","features","Attempt to return the underlying type of this external…","Returns the underlying descriptor of this [`ExternType`],…","mutability","valtype","limits","externtype","Attempt to access the underlying value of this `Val`,…","Returns the underlying value of this `Val`, panicking if…","anyref","wasm_externkind_t","wasm_valkind_t","wasm_mutability_t","wasm_memory_pages_t","wasm_table_size_t","wasm_func_callback_t","wasm_func_callback_with_env_t","wasmtime","borrow_mut","try_from","try_into","type_id","borrow","typeid","to_owned","clone_into","wasmtime::wasm","default","importtype","exporttype","wasm_byte_vec_t","wasm_config_t","wasm_engine_t","wasm_store_t","wasm_limits_t","wasm_valtype_t","wasm_valtype_vec_t","wasm_functype_t","wasm_functype_vec_t","wasm_globaltype_t","wasm_globaltype_vec_t","wasm_tabletype_t","wasm_tabletype_vec_t","wasm_memorytype_t","wasm_memorytype_vec_t","wasm_externtype_t","wasm_externtype_vec_t","wasm_importtype_t","wasm_importtype_vec_t","wasm_exporttype_t","wasm_exporttype_vec_t","wasm_ref_t","wasm_val_t","wasm_val_t__bindgen_ty_1","wasm_val_vec_t","wasm_frame_t","wasm_frame_vec_t","wasm_instance_t","wasm_trap_t","wasm_foreign_t","wasm_module_t","wasm_shared_module_t","wasm_func_t","wasm_global_t","wasm_table_t","wasm_memory_t","wasm_extern_t","wasm_extern_vec_t","memory","wasm_byte_t","formatter","finalize","Mutability","ExternType","Instance","FuncType","GlobalType","TableType","MemoryType","ImportType","ExportType","Callable","HostInfo","compilationstrategy","wasmtime_debug","debuginfodata","targetfrontendconfig","modulevmctxinfo","valuelabelsranges","moduleaddressmap","DebugInfoData","WasmFileInfo","ResolvedSymbol","SymbolResolver","code_offset","Our chosen implementation style.","A compilation error occured.","wasmtime_environ","signature","compiledfunction","definedfuncindex","primarymap","jumptableoffsets","for_memory","tunables","for_table","funcindex","table_index","tableindex","definedtableindex","memory_index","memoryindex","definedmemoryindex","globalindex","definedglobalindex","moduletranslation","The offset of the `vmctx` field.","The size of the `current_elements` field.","The offset of the `from` field.","The offset of the `base` field.","The offset of the `tables` array.","The offset of the `memories` array.","The offset of the `globals` array.","Return the offset to the `base` field in…","wasmtime_environ::ir","The type of an SSA value.","seterror","default_call_conv","pointer_width","instructiondata","function","codegenerror","ValueLabelsRanges","functionbodydata","compileerror","equivalent","to_string","wasmtime_environ::settings","wasmtime_environ::isa","wasmtime_environ::entity","wasmtime_environ::wasm","wasmtime_environ::cranelift","serialize","callconv","from_str","argumentpurpose","valuelabel","trapcode","stackslot","stackslotdata","sourceloc","abiparam","stackslots","valueloc","deserialize","index_mut","signatureindex","partial_cmp","ordering","reserved_value","compile_module","moduletranslationstate","targetisa","instructionaddressmap","functionaddressmap","compilation","relocation","relocationtarget","trapinformation","codeoffset","target_config","wasmresult","Get a type with the same number of lanes as this type, but…","Return an object that can display `self` with correct…","Find the index of a presumed unique special-purpose…","Get an iterator over all the stack slot keys.","Return the underlying index value as a `u32`.","pointer_type","pointer_bits","pointer_bytes","Get the default calling convention of this target.","Get the pointer type of this ISA.","Get the width of pointers on this ISA.","pointerwidth","Get the width of pointers on this ISA, in units of bits.","Get the width of pointers on this ISA, in units of bytes.","frontend_config","Get the information needed by frontends producing…","uses_cpu_flags","Does the CPU implement scalar comparisons using a CPU…","uses_complex_addresses","Does the CPU implement multi-register addressing?","Encode an instruction after determining it is legal.","encoding","prologue_epilogue","Compute the stack layout and insert prologue and epilogue…","emit_unwind_info","Emit unwind information for the given function.","boxedslice","values_mut","is_valid","Check if `k` is a valid key in the map.","Get the element at `k` if it exists.","Get the element at `k` if it exists, mutable version.","Is this map completely empty?","Get the total number of entity references created.","Iterate over all the keys in this map.","Iterate over all the values in this map.","Iterate over all the values in this map, mutable edition.","Iterate over all the keys and values in this map.","iter_mut","Iterate over all the keys and values in this map, mutable…","itermut","Returns the last element that was inserted in the map.","from_u32","FunctionAddressMap","InstructionAddressMap","ModuleVmctxInfo","CompiledFunction","Relocation","TrapInformation","MemoryPlan","TableElements","TablePlan","DataInitializer","DataInitializerLocation","FunctionBodyData","ModuleTranslation","VMOffsets","CompileError","RelocationTarget","MemoryStyle","TableStyle","Compilation","BuiltinFunctionIndex","ModuleEnvironment","TargetSharedSignatureIndex","RelocSink","ArgumentPurpose","Signature","StackSlots","Configurable","TargetFrontendConfig","TargetIsa","EntityRef","GlobalInit","TableElementType","SourceLoc","ValueLabel","BoxedSlice","PrimaryMap","DefinedFuncIndex","DefinedGlobalIndex","DefinedMemoryIndex","DefinedTableIndex","FuncIndex","GlobalIndex","MemoryIndex","SignatureIndex","TableIndex","Cranelift","moduledata","exportbinding","ModuleData","ExportBinding","Compiler","wasmtime_jit","wasmtime_jit::ActionOutcome","A wasm translation error occured.","setuperror","linkerror","value_type","unwrap_i32","unwrap_i64","unwrap_f32","unwrap_f64","signatures","compiler","debug_info","unknowninstance","actionerror","compiledmodule","actionoutcome","contexterror","Get the value of an exported global variable from an…","resolver","refcell","vmsharedsignatureindex","gdbjitimageregistration","instantiate","instantiationerror","name_instance","get_instance","lookuperror","builder","call_conv","Arbitrary.","wasmtime_jit::trampoline::ir","wasmtime_jit::trampoline::ir::ExternalName","A function.","stack_slots","encodings","jt_offsets","jumptable","Load 8 bits from memory at `sum(args) + Offset` and…","Load 16 bits from memory at `sum(args) + Offset` and…","Load 32 bits from memory at `sum(args) + Offset` and…","globalvalue","Floating point constant.","Reduce a vector to a scalar boolean.","Add integers with carry in.","Add integers with carry out.","Add integers with carry in and out.","Subtract integers with borrow in.","Subtract integers with borrow out.","Subtract integers with borrow in and out.","entitylist","offset32","memflags","wasmtime_jit::trampoline","Version number of this crate.","wasmtime_jit::trampoline::binemit","externalname","stackslotkind","runtimevalue","reloc_ebb","reloc_external","reloc_constant","constantoffset","Return a reference-counting pointer to a module.","module_ref","Return a reference to a module.","vmcontext","vmcallercheckedanyfunc","codeinfo","relocsink","stackmapsink","verifiererrors","redundant_reload_remover","hashmap","variable","funcref","Append parameters to the given `Ebb` corresponding to the…","Calls libc.memset","functionbuildercontext","create_jump_table","Creates a jump table in the function, to be used by…","jumptabledata","create_stack_slot","Creates a stack slot in the function, to be used by…","import_signature","Adds a signature which can later be used to declare an…","import_function","Declare an external function import.","extfuncdata","create_global_value","Declares a global value accessible to the function.","globalvaluedata","create_heap","Declares a heap accessible to the function.","displayfunction","Return an object that can display this function with…","InstantiationError","ActionError","ActionOutcome","RuntimeValue","CompilationStrategy","ContextError","SetupError","CodeMemory","CompiledModule","Namespace","FunctionBuilder","ExternalName","Function","InstBuilder","StackSlotData","StackSlotKind","InstanceHandle","UnknownInstance","NullResolver","FunctionBuilderContext","NullStackmapSink","TrampolineRelocSink","relocations","artifact","functions","A handle holding an `Instance` of a WebAssembly module.","VMContext","The fields compiled code needs to access to utilize a…","wasmtime_runtime","wasmtime_runtime::Export","Pointer to the containing `VMContext`.","definition","An error while instantiating a module.","Insufficient resources available for execution.","A wasm link error occured.","StartTrap","trapregistry","tableplan","memoryplan","vmfunctionimport","vmglobalimport","vmtableimport","vmmemoryimport","Create a new `InstanceHandle` pointing at a new `Instance`.","imports","from_vmctx","Create a new `InstanceHandle` pointing at the instance…","Return a reference to the vmctx used by compiled wasm code.","vmctx_ptr","Return a raw pointer to the vmctx used by compiled wasm…","vmctx_mut","Return a mutable reference to the vmctx used by compiled…","vmctx_mut_ptr","Return a mutable raw pointer to the vmctx used by compiled…","Lookup an export with the given name.","lookup_immutable","Lookup an export with the given name. This takes an…","lookup_by_declaration","Lookup an export with the given export declaration.","lookup_immutable_by_declaration","Lookup an export with the given export declaration. This…","Return an iterator over the exports of this instance.","host_state","Return a reference to the custom state attached to this…","Return the memory index for the given `VMMemoryDefinition`…","vmmemorydefinition","memory_grow","Grow memory in this instance by the specified amount of…","Return the table index for the given `VMTableDefinition`…","vmtabledefinition","table_grow","Grow table in this instance by the specified amount of…","table_get","Get table element reference.","table_get_mut","Get mutable table element reference.","LinkError","VMCallerCheckedAnyfunc","VMFunctionImport","VMGlobalImport","VMMemoryDefinition","VMMemoryImport","VMTableDefinition","VMTableImport","GdbJitImageRegistration","SignatureRegistry","VMGlobalDefinition","VMSharedSignatureIndex","VMInvokeArgument","TrapRegistrationGuard","VMFunctionBody","Return an instance implementing the \"wasi\" interface.","create_wasi_instance","Creates `wasmtime::Instance` object implementing the…","instantiate_wasi","instantiate_wasi_with_context","is_wasi_module","with_features","WastContext","Returns an iterator over the entries within a directory.","metadata","from_raw_wasi_fd","Constructs a new instance of `Self` from the given raw…","__wasi_fd_t","file_type","filetype","permissions","systemtime","wasi_common","__wasi_errno_t","wasictx","uintptr_t","__wasi_filesize_t","__wasi_filedelta_t","__wasi_whence_t","__wasi_fdflags_t","__wasi_rights_t","__wasi_advice_t","__wasi_lookupflags_t","__wasi_oflags_t","__wasi_dircookie_t","__wasi_timestamp_t","__wasi_fstflags_t","__wasi_exitcode_t","__wasi_signal_t","__wasi_clockid_t","__wasi_riflags_t","__wasi_siflags_t","__wasi_sdflags_t","WasiCtxBuilder","A builder allowing customizable construction of `WasiCtx`…","Builder for a new `WasiCtx`.","Add arguments to the command-line arguments list.","Add an argument to the command-line arguments list.","inherit_args","Inherit the command-line arguments from the host process.","inherit_stdio","Inherit the stdin, stdout, and stderr streams from the…","inherit_env","Inherit the environment variables from the host process.","Add an entry to the environment.","Add entries to the environment.","Provide a File to use as stdin","Provide a File to use as stdout","Provide a File to use as stderr","preopened_dir","Add a preopened directory.","Build a `WasiCtx`, consuming this `WasiCtxBuilder`.","Make a new `WasiCtx` with some default settings.","hostcalls","fd_datasync","fd_pwrite","fd_renumber","fd_fdstat_get","fd_fdstat_set_flags","fd_fdstat_set_rights","fd_advise","fd_allocate","path_create_directory","path_link","path_open","fd_readdir","path_readlink","path_rename","fd_filestat_get","fd_filestat_set_times","fd_filestat_set_size","path_filestat_get","path_filestat_set_times","path_symlink","path_unlink_file","path_remove_directory","fd_prestat_get","fd_prestat_dir_name","proc_exit","proc_raise","args_sizes_get","environ_get","environ_sizes_get","random_get","clock_res_get","clock_time_get","poll_oneoff","sched_yield","sock_recv","sock_send","sock_shutdown","wasi_common::old::snapshot_0","fd_readwrite","Types and constants shared between 32-bit and 64-bit wasi.…","__wasi_dirent_t","__wasi_fdstat_t","fs_filetype","fs_rights_base","fs_rights_inheriting","__wasi_filestat_t","__wasi_event_fd_readwrite_t","__wasi_event_t","userdata","__wasi_subscription_clock_t","precision","__wasi_subscription_fd_readwrite_t","file_descriptor","__wasi_subscription_t","__wasi_event_u_t","__wasi_subscription_u_t","whence_to_str","__wasi_dirnamlen_t","__wasi_inode_t","__wasi_filetype_t","__wasi_device_t","__wasi_linkcount_t","__wasi_userdata_t","__wasi_eventtype_t","__wasi_eventrwflags_t","__wasi_subclockflags_t","__wasi_roflags_t","__wasi_preopentype_t","__WASI_CLOCKID_REALTIME","__WASI_CLOCKID_MONOTONIC","__WASI_CLOCKID_PROCESS_CPUTIME_ID","__WASI_CLOCKID_THREAD_CPUTIME_ID","__WASI_ERRNO_SUCCESS","__WASI_ERRNO_2BIG","__WASI_ERRNO_ACCES","__WASI_ERRNO_ADDRINUSE","__WASI_ERRNO_ADDRNOTAVAIL","__WASI_ERRNO_AFNOSUPPORT","__WASI_ERRNO_AGAIN","__WASI_ERRNO_ALREADY","__WASI_ERRNO_BADF","__WASI_ERRNO_BADMSG","__WASI_ERRNO_BUSY","__WASI_ERRNO_CANCELED","__WASI_ERRNO_CHILD","__WASI_ERRNO_CONNABORTED","__WASI_ERRNO_CONNREFUSED","__WASI_ERRNO_CONNRESET","__WASI_ERRNO_DEADLK","__WASI_ERRNO_DESTADDRREQ","__WASI_ERRNO_DOM","__WASI_ERRNO_DQUOT","__WASI_ERRNO_EXIST","__WASI_ERRNO_FAULT","__WASI_ERRNO_FBIG","__WASI_ERRNO_HOSTUNREACH","__WASI_ERRNO_IDRM","__WASI_ERRNO_ILSEQ","__WASI_ERRNO_INPROGRESS","__WASI_ERRNO_INTR","__WASI_ERRNO_INVAL","__WASI_ERRNO_IO","__WASI_ERRNO_ISCONN","__WASI_ERRNO_ISDIR","__WASI_ERRNO_LOOP","__WASI_ERRNO_MFILE","__WASI_ERRNO_MLINK","__WASI_ERRNO_MSGSIZE","__WASI_ERRNO_MULTIHOP","__WASI_ERRNO_NAMETOOLONG","__WASI_ERRNO_NETDOWN","__WASI_ERRNO_NETRESET","__WASI_ERRNO_NETUNREACH","__WASI_ERRNO_NFILE","__WASI_ERRNO_NOBUFS","__WASI_ERRNO_NODEV","__WASI_ERRNO_NOENT","__WASI_ERRNO_NOEXEC","__WASI_ERRNO_NOLCK","__WASI_ERRNO_NOLINK","__WASI_ERRNO_NOMEM","__WASI_ERRNO_NOMSG","__WASI_ERRNO_NOPROTOOPT","__WASI_ERRNO_NOSPC","__WASI_ERRNO_NOSYS","__WASI_ERRNO_NOTCONN","__WASI_ERRNO_NOTDIR","__WASI_ERRNO_NOTEMPTY","__WASI_ERRNO_NOTRECOVERABLE","__WASI_ERRNO_NOTSOCK","__WASI_ERRNO_NOTSUP","__WASI_ERRNO_NOTTY","__WASI_ERRNO_NXIO","__WASI_ERRNO_OVERFLOW","__WASI_ERRNO_OWNERDEAD","__WASI_ERRNO_PERM","__WASI_ERRNO_PIPE","__WASI_ERRNO_PROTO","__WASI_ERRNO_PROTONOSUPPORT","__WASI_ERRNO_PROTOTYPE","__WASI_ERRNO_RANGE","__WASI_ERRNO_ROFS","__WASI_ERRNO_SPIPE","__WASI_ERRNO_SRCH","__WASI_ERRNO_STALE","__WASI_ERRNO_TIMEDOUT","__WASI_ERRNO_TXTBSY","__WASI_ERRNO_XDEV","__WASI_ERRNO_NOTCAPABLE","__WASI_RIGHTS_FD_DATASYNC","__WASI_RIGHTS_FD_READ","__WASI_RIGHTS_FD_SEEK","__WASI_RIGHTS_FD_FDSTAT_SET_FLAGS","__WASI_RIGHTS_FD_SYNC","__WASI_RIGHTS_FD_TELL","__WASI_RIGHTS_FD_WRITE","__WASI_RIGHTS_FD_ADVISE","__WASI_RIGHTS_FD_ALLOCATE","__WASI_RIGHTS_PATH_CREATE_DIRECTORY","__WASI_RIGHTS_PATH_CREATE_FILE","__WASI_RIGHTS_PATH_LINK_SOURCE","__WASI_RIGHTS_PATH_LINK_TARGET","__WASI_RIGHTS_PATH_OPEN","__WASI_RIGHTS_FD_READDIR","__WASI_RIGHTS_PATH_READLINK","__WASI_RIGHTS_PATH_RENAME_SOURCE","__WASI_RIGHTS_PATH_RENAME_TARGET","__WASI_RIGHTS_PATH_FILESTAT_GET","__WASI_RIGHTS_PATH_FILESTAT_SET_SIZE","__WASI_RIGHTS_PATH_FILESTAT_SET_TIMES","__WASI_RIGHTS_FD_FILESTAT_GET","__WASI_RIGHTS_FD_FILESTAT_SET_SIZE","__WASI_RIGHTS_FD_FILESTAT_SET_TIMES","__WASI_RIGHTS_PATH_SYMLINK","__WASI_RIGHTS_PATH_REMOVE_DIRECTORY","__WASI_RIGHTS_PATH_UNLINK_FILE","__WASI_RIGHTS_POLL_FD_READWRITE","__WASI_RIGHTS_SOCK_SHUTDOWN","__WASI_WHENCE_SET","__WASI_WHENCE_CUR","__WASI_WHENCE_END","__WASI_FILETYPE_UNKNOWN","__WASI_FILETYPE_BLOCK_DEVICE","__WASI_FILETYPE_CHARACTER_DEVICE","__WASI_FILETYPE_DIRECTORY","__WASI_FILETYPE_REGULAR_FILE","__WASI_FILETYPE_SOCKET_DGRAM","__WASI_FILETYPE_SOCKET_STREAM","__WASI_FILETYPE_SYMBOLIC_LINK","__WASI_ADVICE_NORMAL","__WASI_ADVICE_SEQUENTIAL","__WASI_ADVICE_RANDOM","__WASI_ADVICE_WILLNEED","__WASI_ADVICE_DONTNEED","__WASI_ADVICE_NOREUSE","__WASI_FDFLAGS_APPEND","__WASI_FDFLAGS_DSYNC","__WASI_FDFLAGS_NONBLOCK","__WASI_FDFLAGS_RSYNC","__WASI_FDFLAGS_SYNC","__WASI_FSTFLAGS_ATIM","__WASI_FSTFLAGS_ATIM_NOW","__WASI_FSTFLAGS_MTIM","__WASI_FSTFLAGS_MTIM_NOW","__WASI_LOOKUPFLAGS_SYMLINK_FOLLOW","__WASI_OFLAGS_CREAT","__WASI_OFLAGS_DIRECTORY","__WASI_OFLAGS_EXCL","__WASI_OFLAGS_TRUNC","__WASI_EVENTTYPE_CLOCK","__WASI_EVENTTYPE_FD_READ","__WASI_EVENTTYPE_FD_WRITE","__WASI_EVENTRWFLAGS_FD_READWRITE_HANGUP","__WASI_SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME","__WASI_SIGNAL_NONE","__WASI_SIGNAL_HUP","__WASI_SIGNAL_INT","__WASI_SIGNAL_QUIT","__WASI_SIGNAL_ILL","__WASI_SIGNAL_TRAP","__WASI_SIGNAL_ABRT","__WASI_SIGNAL_BUS","__WASI_SIGNAL_FPE","__WASI_SIGNAL_KILL","__WASI_SIGNAL_USR1","__WASI_SIGNAL_SEGV","__WASI_SIGNAL_USR2","__WASI_SIGNAL_PIPE","__WASI_SIGNAL_ALRM","__WASI_SIGNAL_TERM","__WASI_SIGNAL_CHLD","__WASI_SIGNAL_CONT","__WASI_SIGNAL_STOP","__WASI_SIGNAL_TSTP","__WASI_SIGNAL_TTIN","__WASI_SIGNAL_TTOU","__WASI_SIGNAL_URG","__WASI_SIGNAL_XCPU","__WASI_SIGNAL_XFSZ","__WASI_SIGNAL_VTALRM","__WASI_SIGNAL_PROF","__WASI_SIGNAL_WINCH","__WASI_SIGNAL_POLL","__WASI_SIGNAL_PWR","__WASI_SIGNAL_SYS","__WASI_RIFLAGS_RECV_PEEK","__WASI_RIFLAGS_RECV_WAITALL","__WASI_ROFLAGS_RECV_DATA_TRUNCATED","__WASI_SDFLAGS_RD","__WASI_SDFLAGS_WR","__WASI_PREOPENTYPE_DIR","__WASI_DIRCOOKIE_START","Types and constants specific to 32-bit wasi. These are…","__wasi_iovec_t","__wasi_ciovec_t","__wasi_prestat_dir_t","pr_name_len","__wasi_prestat_t","__wasi_prestat_u_t","__wasi_size_t","__wasi_iovec_array_t","__wasi_ciovec_array_t","wasi_common::fs","wasi_common::old::snapshot_0::wasi","wasi_common::old::snapshot_0::wasi32","wasi_common::wasi","wasi_common::wasi32","DirBuilder","OpenOptions","Permissions","set_readonly","snapshot_0"];
searchIndex["wasi_common"]={"doc":E,"i":[[3,"WasiCtx",R[486],E,N,N],[3,R[507],E,R[508],N,N],[5,"preopen_dir",E,E,N,[[["asref",["path"]],["path"]],[["error"],[R[15],["file","error"]],["file"]]]],[11,"new",E,R[509],0,[[],["self"]]],[11,"args",E,R[510],0,[[],["self"]]],[11,"arg",E,R[511],0,[[["asref"]],["self"]]],[11,R[512],E,R[513],0,[[],["self"]]],[11,R[514],E,R[515],0,[[],["self"]]],[11,R[516],E,R[517],0,[[],["self"]]],[11,"env",E,R[518],0,[[["asref"]],["self"]]],[11,"envs",E,R[519],0,[[],["self"]]],[11,"stdin",E,R[520],0,[[["file"]],["self"]]],[11,"stdout",E,R[521],0,[[["file"]],["self"]]],[11,"stderr",E,R[522],0,[[["file"]],["self"]]],[11,R[523],E,R[524],0,[[["asref",["path"]],["path"],["file"]],["self"]]],[11,"build",E,R[525],0,[[],[[R[488]],["error"],[R[15],[R[488],"error"]]]]],[11,"new",E,R[526],1,[[],[["error"],[R[15],["error"]]]]],[0,"fs",E,"A very experimental module modeled providing a high-level…",N,N],[3,"Dir",R[790],"A reference to an open directory on the filesystem.",N,N],[3,R[795],E,"A builder used to create directories in various manners.",N,N],[3,"DirEntry",E,"Entries returned by the ReadDir iterator.",N,N],[3,"File",E,"A reference to an open file on the filesystem.",N,N],[3,"FileType",E,"A structure representing a type of file with accessors for…",N,N],[3,"Metadata",E,"Metadata information about a file.",N,N],[3,R[796],E,"Options and flags which can be used to configure how a…",N,N],[3,R[797],E,"Representation of the various permissions on a file.",N,N],[3,"ReadDir",E,"Iterator over the entries in a directory.",N,N],[11,R[479],E,R[480],2,[[[R[488]],[R[481]]],["self"]]],[11,"open_file",E,"Attempts to open a file in read-only mode.",2,[[["self"],["asref",["path"]],["path"]],[[R[15],["file"]],["file"]]]],[11,"open_file_with",E,"Opens a file at `path` with the options specified by `self`.",2,[[["self"],["openoptions"],["asref",["path"]],["path"]],[[R[15],["file"]],["file"]]]],[11,"open_dir",E,"Attempts to open a directory.",2,[[["self"],["asref",["path"]],["path"]],[R[15]]]],[11,"create_file",E,"Opens a file in write-only mode.",2,[[["self"],["asref",["path"]],["path"]],[[R[15],["file"]],["file"]]]],[11,"read",E,R[477],2,[[["self"]],[["readdir"],[R[15],["readdir"]]]]],[11,"into_read",E,"Consumes self and returns an iterator over the entries…",2,[[],["readdir"]]],[11,"read_file",E,"Read the entire contents of a file into a bytes vector.",2,[[["self"],["asref",["path"]],["path"]],[["vec",["u8"]],[R[15],["vec"]]]]],[11,"read_dir",E,R[477],2,[[["self"],["asref",["path"]],["path"]],[["readdir"],[R[15],["readdir"]]]]],[11,"new",E,"Creates a new set of options with default mode/security…",3,[[],["self"]]],[11,"recursive",E,"Indicates that directories should be created recursively,…",3,[[["self"],["bool"]],["self"]]],[11,"create",E,"Creates the specified directory with the options…",3,[[["self"],["asref",["path"]],["path"]],[R[15]]]],[11,R[478],E,"Returns the metadata for the file that this entry points at.",4,[[["self"]],[[R[478]],[R[15],[R[478]]]]]],[11,R[482],E,"Returns the file type for the file that this entry points…",4,[[["self"]],[[R[483]],[R[15],[R[483]]]]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",4,[[["self"]],["string"]]],[11,R[479],E,R[480],5,[[[R[488]],[R[481]]],["self"]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",5,[[["self"]],[R[15]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",5,[[["self"]],[R[15]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",5,[[["self"],["u64"]],[R[15]]]],[11,R[478],E,"Queries metadata about the underlying file.",5,[[["self"]],[[R[478]],[R[15],[R[478]]]]]],[11,"is_dir",E,"Tests whether this file type represents a directory.",6,[[["self"]],["bool"]]],[11,"is_file",E,"Tests whether this file type represents a regular file.",6,[[["self"]],["bool"]]],[11,"is_symlink",E,"Tests whether this file type represents a symbolic link.",6,[[["self"]],["bool"]]],[11,R[482],E,"Returns the file type for this metadata.",7,[[["self"]],[R[483]]]],[11,"is_dir",E,"Returns true if this metadata is for a directory.",7,[[["self"]],["bool"]]],[11,"is_file",E,"Returns true if this metadata is for a regular file.",7,[[["self"]],["bool"]]],[11,"len",E,"Returns the size of the file, in bytes, this metadata is…",7,[[["self"]],["u64"]]],[11,R[484],E,"Returns the permissions of the file this metadata is for.",7,[[["self"]],[R[484]]]],[11,"modified",E,"Returns the last modification time listed in this metadata.",7,[[["self"]],[[R[15],[R[485]]],[R[485]]]]],[11,"accessed",E,"Returns the last access time of this metadata.",7,[[["self"]],[[R[15],[R[485]]],[R[485]]]]],[11,"created",E,"Returns the creation time listed in this metadata.",7,[[["self"]],[[R[15],[R[485]]],[R[485]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",8,[[],["self"]]],[11,"read",E,"Sets the option for read access.",8,[[["self"],["bool"]],["self"]]],[11,"write",E,"Sets the option for write access.",8,[[["self"],["bool"]],["self"]]],[11,"append",E,"Sets the option for the append mode.",8,[[["self"],["bool"]],["self"]]],[11,"truncate",E,"Sets the option for truncating a previous file.",8,[[["self"],["bool"]],["self"]]],[11,"create",E,"Sets the option to create a new file.",8,[[["self"],["bool"]],["self"]]],[11,"create_new",E,"Sets the option to always create a new file.",8,[[["self"],["bool"]],["self"]]],[11,"readonly",E,"Returns true if these permissions describe a readonly…",9,[[["self"]],["bool"]]],[11,R[798],E,"Modifies the readonly flag for this set of permissions.",9,[[["self"],["bool"]]]],[11,R[479],E,R[480],10,[[[R[481]]],["self"]]],[0,R[527],R[486],E,N,N],[5,"fd_close","wasi_common::hostcalls",E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"wasi_common_fd_close",E,E,N,[[[R[481]]],[R[487]]]],[5,R[528],E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"wasi_common_fd_datasync",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_pread",E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"],[R[490]]],[R[487]]]],[5,"wasi_common_fd_pread",E,E,N,[[[R[489]],[R[490]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[529],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"],[R[490]]],[R[487]]]],[5,"wasi_common_fd_pwrite",E,E,N,[[[R[489]],[R[490]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,"fd_read",E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_fd_read",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[530],E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"wasi_common_fd_renumber",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_seek",E,E,N,[[[R[491]],[R[492]],[R[481]],[R[489]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_seek",E,E,N,[[[R[491]],["usize"],[R[481]],[R[492]],[R[489]]],[R[487]]]],[5,"fd_tell",E,E,N,[[[R[489]],[R[481]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_tell",E,E,N,[[[R[489]],["usize"],[R[481]]],[R[487]]]],[5,R[531],E,E,N,[[[R[489]],[R[481]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_fdstat_get",E,E,N,[[[R[489]],["usize"],[R[481]]],[R[487]]]],[5,R[532],E,E,N,[[[R[488]],[R[481]],[R[493]]],[R[487]]]],[5,"wasi_common_fd_fdstat_set_flags",E,E,N,[[[R[493]],[R[481]]],[R[487]]]],[5,R[533],E,E,N,[[[R[481]],[R[494]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_fdstat_set_rights",E,E,N,[[[R[481]],[R[494]]],[R[487]]]],[5,"fd_sync",E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"wasi_common_fd_sync",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_write",E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_fd_write",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[534],E,E,N,[[[R[495]],[R[481]],[R[488]],[R[490]]],[R[487]]]],[5,"wasi_common_fd_advise",E,E,N,[[[R[495]],[R[481]],[R[490]]],[R[487]]]],[5,R[535],E,E,N,[[[R[481]],[R[488]],[R[490]]],[R[487]]]],[5,"wasi_common_fd_allocate",E,E,N,[[[R[481]],[R[490]]],[R[487]]]],[5,R[536],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_create_directory",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[537],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"],[R[496]]],[R[487]]]],[5,"wasi_common_path_link",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"],[R[496]]],[R[487]]]],[5,R[538],E,E,N,[[[R[493]],[R[489]],[R[497]],[R[488]],[R[481]],[R[494]],["size_t"],[R[496]]],[R[487]]]],[5,"wasi_common_path_open",E,E,N,[[[R[493]],[R[489]],[R[497]],["usize"],[R[481]],[R[494]],["size_t"],[R[496]]],[R[487]]]],[5,R[539],E,E,N,[[[R[489]],[R[481]],[R[498]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_fd_readdir",E,E,N,[[[R[489]],[R[498]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[540],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_readlink",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[541],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_rename",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[542],E,E,N,[[[R[489]],[R[481]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_filestat_get",E,E,N,[[[R[489]],["usize"],[R[481]]],[R[487]]]],[5,R[543],E,E,N,[[[R[481]],[R[499]],[R[488]],[R[500]]],[R[487]]]],[5,"wasi_common_fd_filestat_set_times",E,E,N,[[[R[481]],[R[499]],[R[500]]],[R[487]]]],[5,R[544],E,E,N,[[[R[488]],[R[481]],[R[490]]],[R[487]]]],[5,"wasi_common_fd_filestat_set_size",E,E,N,[[[R[490]],[R[481]]],[R[487]]]],[5,R[545],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"],[R[496]]],[R[487]]]],[5,"wasi_common_path_filestat_get",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"],[R[496]]],[R[487]]]],[5,R[546],E,E,N,[[[R[489]],[R[499]],[R[500]],[R[481]],[R[488]],["size_t"],[R[496]]],[R[487]]]],[5,"wasi_common_path_filestat_set_times",E,E,N,[[[R[489]],[R[499]],[R[500]],["usize"],[R[481]],["size_t"],[R[496]]],[R[487]]]],[5,R[547],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_symlink",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[548],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_unlink_file",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[549],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_path_remove_directory",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[550],E,E,N,[[[R[489]],[R[481]],[R[488]]],[R[487]]]],[5,"wasi_common_fd_prestat_get",E,E,N,[[[R[489]],["usize"],[R[481]]],[R[487]]]],[5,R[551],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_fd_prestat_dir_name",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"]],[R[487]]]],[5,R[552],E,E,N,[[[R[501]]]]],[5,"wasi_common_proc_exit",E,E,N,[[[R[501]]]]],[5,R[553],E,E,N,[[[R[502]],[R[488]]],[R[487]]]],[5,"wasi_common_proc_raise",E,E,N,[[["usize"],[R[502]]],[R[487]]]],[5,"args_get",E,E,N,[[[R[489]],[R[488]]],[R[487]]]],[5,"wasi_common_args_get",E,E,N,[[[R[489]],["usize"]],[R[487]]]],[5,R[554],E,E,N,[[[R[489]],[R[488]]],[R[487]]]],[5,"wasi_common_args_sizes_get",E,E,N,[[[R[489]],["usize"]],[R[487]]]],[5,R[555],E,E,N,[[[R[489]],[R[488]]],[R[487]]]],[5,"wasi_common_environ_get",E,E,N,[[[R[489]],["usize"]],[R[487]]]],[5,R[556],E,E,N,[[[R[489]],[R[488]]],[R[487]]]],[5,"wasi_common_environ_sizes_get",E,E,N,[[[R[489]],["usize"]],[R[487]]]],[5,R[557],E,E,N,[[[R[489]],["size_t"]],[R[487]]]],[5,"wasi_common_random_get",E,E,N,[[[R[489]],["usize"],["size_t"]],[R[487]]]],[5,R[558],E,E,N,[[[R[503]],[R[489]]],[R[487]]]],[5,"wasi_common_clock_res_get",E,E,N,[[[R[489]],["usize"],[R[503]]],[R[487]]]],[5,R[559],E,E,N,[[[R[489]],[R[503]],[R[499]]],[R[487]]]],[5,"wasi_common_clock_time_get",E,E,N,[[[R[489]],["usize"],[R[503]],[R[499]]],[R[487]]]],[5,R[560],E,E,N,[[[R[489]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_poll_oneoff",E,E,N,[[[R[489]],["usize"],["size_t"]],[R[487]]]],[5,R[561],E,E,N,[[],[R[487]]]],[5,"wasi_common_sched_yield",E,E,N,[[],[R[487]]]],[5,R[562],E,E,N,[[[R[489]],[R[481]],[R[504]],[R[488]],["size_t"]],[R[487]]]],[5,"wasi_common_sock_recv",E,E,N,[[[R[489]],["usize"],[R[481]],[R[504]],["size_t"]],[R[487]]]],[5,R[563],E,E,N,[[[R[489]],[R[481]],[R[488]],["size_t"],[R[505]]],[R[487]]]],[5,"wasi_common_sock_send",E,E,N,[[[R[489]],["usize"],[R[481]],["size_t"],[R[505]]],[R[487]]]],[5,R[564],E,E,N,[[[R[481]],[R[506]],[R[488]]],[R[487]]]],[5,"wasi_common_sock_shutdown",E,E,N,[[["usize"],[R[481]],[R[506]]],[R[487]]]],[0,"old",R[486],E,N,N],[0,R[799],"wasi_common::old",E,N,N],[3,"WasiCtx",R[565],E,N,N],[3,R[507],E,R[508],N,N],[11,"new",E,R[509],11,[[],["self"]]],[11,"args",E,R[510],11,[[],["self"]]],[11,"arg",E,R[511],11,[[["asref"]],["self"]]],[11,R[512],E,R[513],11,[[],["self"]]],[11,R[514],E,R[515],11,[[],["self"]]],[11,R[516],E,R[517],11,[[],["self"]]],[11,"env",E,R[518],11,[[["asref"]],["self"]]],[11,"envs",E,R[519],11,[[],["self"]]],[11,"stdin",E,R[520],11,[[["file"]],["self"]]],[11,"stdout",E,R[521],11,[[["file"]],["self"]]],[11,"stderr",E,R[522],11,[[["file"]],["self"]]],[11,R[523],E,R[524],11,[[["asref",["path"]],["path"],["file"]],["self"]]],[11,"build",E,R[525],11,[[],[[R[488]],[R[15],[R[488]]]]]],[11,"new",E,R[526],12,[[],[R[15]]]],[0,R[527],E,E,N,N],[5,"fd_close","wasi_common::old::snapshot_0::hostcalls",E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_close",E,E,N,[[[R[481]]],[R[487]]]],[5,R[528],E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_datasync",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_pread",E,E,N,[[[R[481]],[R[490]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_pread",E,E,N,[[[R[489]],["size_t"],["usize"],[R[481]],[R[490]]],[R[487]]]],[5,R[529],E,E,N,[[[R[481]],[R[490]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_pwrite",E,E,N,[[[R[489]],["size_t"],["usize"],[R[481]],[R[490]]],[R[487]]]],[5,"fd_read",E,E,N,[[[R[488]],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_read",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[530],E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_renumber",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_seek",E,E,N,[[[R[488]],[R[491]],[R[481]],[R[492]],[R[489]]],[R[487]]]],[5,"old_wasi_common_fd_seek",E,E,N,[[[R[491]],["usize"],[R[481]],[R[492]],[R[489]]],[R[487]]]],[5,"fd_tell",E,E,N,[[[R[488]],[R[481]],[R[489]]],[R[487]]]],[5,"old_wasi_common_fd_tell",E,E,N,[[["usize"],[R[481]],[R[489]]],[R[487]]]],[5,R[531],E,E,N,[[[R[481]],[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_fd_fdstat_get",E,E,N,[[["usize"],[R[481]],[R[489]]],[R[487]]]],[5,R[532],E,E,N,[[[R[493]],[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_fdstat_set_flags",E,E,N,[[[R[493]],[R[481]]],[R[487]]]],[5,R[533],E,E,N,[[[R[488]],[R[481]],[R[494]]],[R[487]]]],[5,"old_wasi_common_fd_fdstat_set_rights",E,E,N,[[[R[481]],[R[494]]],[R[487]]]],[5,"fd_sync",E,E,N,[[[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_sync",E,E,N,[[[R[481]]],[R[487]]]],[5,"fd_write",E,E,N,[[[R[488]],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_write",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[534],E,E,N,[[[R[495]],[R[481]],[R[490]],[R[488]]],[R[487]]]],[5,"old_wasi_common_fd_advise",E,E,N,[[[R[495]],[R[481]],[R[490]]],[R[487]]]],[5,R[535],E,E,N,[[[R[481]],[R[490]],[R[488]]],[R[487]]]],[5,"old_wasi_common_fd_allocate",E,E,N,[[[R[481]],[R[490]]],[R[487]]]],[5,R[536],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_create_directory",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[537],E,E,N,[[["size_t"],[R[481]],[R[488]],[R[489]],[R[496]]],[R[487]]]],[5,"old_wasi_common_path_link",E,E,N,[[[R[489]],["size_t"],["usize"],[R[481]],[R[496]]],[R[487]]]],[5,R[538],E,E,N,[[[R[488]],[R[489]],["size_t"],[R[493]],[R[481]],[R[497]],[R[494]],[R[496]]],[R[487]]]],[5,"old_wasi_common_path_open",E,E,N,[[[R[489]],["size_t"],[R[493]],["usize"],[R[481]],[R[497]],[R[494]],[R[496]]],[R[487]]]],[5,R[539],E,E,N,[[[R[488]],[R[481]],[R[498]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_readdir",E,E,N,[[[R[498]],[R[489]],["size_t"],["usize"],[R[481]]],[R[487]]]],[5,R[540],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_readlink",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[541],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_rename",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[542],E,E,N,[[[R[481]],[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_fd_filestat_get",E,E,N,[[["usize"],[R[481]],[R[489]]],[R[487]]]],[5,R[543],E,E,N,[[[R[481]],[R[499]],[R[488]],[R[500]]],[R[487]]]],[5,"old_wasi_common_fd_filestat_set_times",E,E,N,[[[R[481]],[R[499]],[R[500]]],[R[487]]]],[5,R[544],E,E,N,[[[R[490]],[R[488]],[R[481]]],[R[487]]]],[5,"old_wasi_common_fd_filestat_set_size",E,E,N,[[[R[490]],[R[481]]],[R[487]]]],[5,R[545],E,E,N,[[["size_t"],[R[481]],[R[488]],[R[489]],[R[496]]],[R[487]]]],[5,"old_wasi_common_path_filestat_get",E,E,N,[[[R[489]],["size_t"],["usize"],[R[481]],[R[496]]],[R[487]]]],[5,R[546],E,E,N,[[[R[499]],[R[488]],[R[489]],["size_t"],[R[481]],[R[500]],[R[496]]],[R[487]]]],[5,"old_wasi_common_path_filestat_set_times",E,E,N,[[[R[499]],[R[489]],["size_t"],["usize"],[R[481]],[R[500]],[R[496]]],[R[487]]]],[5,R[547],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_symlink",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[548],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_unlink_file",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[549],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_path_remove_directory",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[550],E,E,N,[[[R[481]],[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_fd_prestat_get",E,E,N,[[["usize"],[R[481]],[R[489]]],[R[487]]]],[5,R[551],E,E,N,[[[R[481]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_fd_prestat_dir_name",E,E,N,[[["usize"],[R[481]],[R[489]],["size_t"]],[R[487]]]],[5,R[552],E,E,N,[[[R[501]]]]],[5,"old_wasi_common_proc_exit",E,E,N,[[[R[501]]]]],[5,R[553],E,E,N,[[[R[488]],[R[502]]],[R[487]]]],[5,"old_wasi_common_proc_raise",E,E,N,[[["usize"],[R[502]]],[R[487]]]],[5,"args_get",E,E,N,[[[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_args_get",E,E,N,[[["usize"],[R[489]]],[R[487]]]],[5,R[554],E,E,N,[[[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_args_sizes_get",E,E,N,[[["usize"],[R[489]]],[R[487]]]],[5,R[555],E,E,N,[[[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_environ_get",E,E,N,[[["usize"],[R[489]]],[R[487]]]],[5,R[556],E,E,N,[[[R[488]],[R[489]]],[R[487]]]],[5,"old_wasi_common_environ_sizes_get",E,E,N,[[["usize"],[R[489]]],[R[487]]]],[5,R[557],E,E,N,[[["size_t"],[R[489]]],[R[487]]]],[5,"old_wasi_common_random_get",E,E,N,[[["usize"],[R[489]],["size_t"]],[R[487]]]],[5,R[558],E,E,N,[[[R[503]],[R[489]]],[R[487]]]],[5,"old_wasi_common_clock_res_get",E,E,N,[[[R[503]],["usize"],[R[489]]],[R[487]]]],[5,R[559],E,E,N,[[[R[503]],[R[499]],[R[489]]],[R[487]]]],[5,"old_wasi_common_clock_time_get",E,E,N,[[[R[503]],["usize"],[R[499]],[R[489]]],[R[487]]]],[5,R[560],E,E,N,[[[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_poll_oneoff",E,E,N,[[["usize"],[R[489]],["size_t"]],[R[487]]]],[5,R[561],E,E,N,[[],[R[487]]]],[5,"old_wasi_common_sched_yield",E,E,N,[[],[R[487]]]],[5,R[562],E,E,N,[[[R[481]],[R[504]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_sock_recv",E,E,N,[[[R[489]],["size_t"],["usize"],[R[481]],[R[504]]],[R[487]]]],[5,R[563],E,E,N,[[[R[481]],[R[505]],[R[488]],[R[489]],["size_t"]],[R[487]]]],[5,"old_wasi_common_sock_send",E,E,N,[[[R[505]],[R[489]],["size_t"],["usize"],[R[481]]],[R[487]]]],[5,R[564],E,E,N,[[[R[481]],[R[488]],[R[506]]],[R[487]]]],[5,"old_wasi_common_sock_shutdown",E,E,N,[[["usize"],[R[481]],[R[506]]],[R[487]]]],[0,"wasi",R[565],R[567],N,N],[3,R[568],R[791],E,N,N],[12,"d_next",E,E,13,N],[12,"d_ino",E,E,13,N],[12,"d_namlen",E,E,13,N],[12,"d_type",E,E,13,N],[3,R[569],E,E,N,N],[12,R[570],E,E,14,N],[12,"fs_flags",E,E,14,N],[12,R[571],E,E,14,N],[12,R[572],E,E,14,N],[3,R[573],E,E,N,N],[12,"dev",E,E,15,N],[12,"ino",E,E,15,N],[12,R[483],E,E,15,N],[12,"nlink",E,E,15,N],[12,"size",E,E,15,N],[12,"atim",E,E,15,N],[12,"mtim",E,E,15,N],[12,"ctim",E,E,15,N],[3,R[574],E,E,N,N],[12,"nbytes",E,E,16,N],[12,"flags",E,E,16,N],[3,R[575],E,E,N,N],[12,R[576],E,E,17,N],[12,"error",E,E,17,N],[12,"type",E,E,17,N],[12,U,E,E,17,N],[3,R[577],E,E,N,N],[12,"identifier",E,E,18,N],[12,"id",E,E,18,N],[12,"timeout",E,E,18,N],[12,R[578],E,E,18,N],[12,"flags",E,E,18,N],[3,R[579],E,E,N,N],[12,R[580],E,E,19,N],[3,R[581],E,E,N,N],[12,R[576],E,E,20,N],[12,"type",E,E,20,N],[12,U,E,E,20,N],[19,R[582],E,E,N,N],[12,R[566],E,E,21,N],[19,R[583],E,E,N,N],[12,"clock",E,E,22,N],[12,R[566],E,E,22,N],[5,"strerror",E,E,N,[[[R[487]]],["str"]]],[5,R[584],E,E,N,[[[R[492]]],["str"]]],[6,R[490],E,E,N,N],[6,R[499],E,E,N,N],[6,R[503],E,E,N,N],[6,R[487],E,E,N,N],[6,R[494],E,E,N,N],[6,R[481],E,E,N,N],[6,R[491],E,E,N,N],[6,R[492],E,E,N,N],[6,R[498],E,E,N,N],[6,R[585],E,E,N,N],[6,R[586],E,E,N,N],[6,R[587],E,E,N,N],[6,R[495],E,E,N,N],[6,R[493],E,E,N,N],[6,R[588],E,E,N,N],[6,R[500],E,E,N,N],[6,R[496],E,E,N,N],[6,R[497],E,E,N,N],[6,R[589],E,E,N,N],[6,R[590],E,E,N,N],[6,R[591],E,E,N,N],[6,R[592],E,E,N,N],[6,R[593],E,E,N,N],[6,R[501],E,E,N,N],[6,R[502],E,E,N,N],[6,R[504],E,E,N,N],[6,R[594],E,E,N,N],[6,R[505],E,E,N,N],[6,R[506],E,E,N,N],[6,R[595],E,E,N,N],[17,R[596],E,E,N,N],[17,R[597],E,E,N,N],[17,R[598],E,E,N,N],[17,R[599],E,E,N,N],[17,R[600],E,E,N,N],[17,R[601],E,E,N,N],[17,R[602],E,E,N,N],[17,R[603],E,E,N,N],[17,R[604],E,E,N,N],[17,R[605],E,E,N,N],[17,R[606],E,E,N,N],[17,R[607],E,E,N,N],[17,R[608],E,E,N,N],[17,R[609],E,E,N,N],[17,R[610],E,E,N,N],[17,R[611],E,E,N,N],[17,R[612],E,E,N,N],[17,R[613],E,E,N,N],[17,R[614],E,E,N,N],[17,R[615],E,E,N,N],[17,R[616],E,E,N,N],[17,R[617],E,E,N,N],[17,R[618],E,E,N,N],[17,R[619],E,E,N,N],[17,R[620],E,E,N,N],[17,R[621],E,E,N,N],[17,R[622],E,E,N,N],[17,R[623],E,E,N,N],[17,R[624],E,E,N,N],[17,R[625],E,E,N,N],[17,R[626],E,E,N,N],[17,R[627],E,E,N,N],[17,R[628],E,E,N,N],[17,R[629],E,E,N,N],[17,R[630],E,E,N,N],[17,R[631],E,E,N,N],[17,R[632],E,E,N,N],[17,R[633],E,E,N,N],[17,R[634],E,E,N,N],[17,R[635],E,E,N,N],[17,R[636],E,E,N,N],[17,R[637],E,E,N,N],[17,R[638],E,E,N,N],[17,R[639],E,E,N,N],[17,R[640],E,E,N,N],[17,R[641],E,E,N,N],[17,R[642],E,E,N,N],[17,R[643],E,E,N,N],[17,R[644],E,E,N,N],[17,R[645],E,E,N,N],[17,R[646],E,E,N,N],[17,R[647],E,E,N,N],[17,R[648],E,E,N,N],[17,R[649],E,E,N,N],[17,R[650],E,E,N,N],[17,R[651],E,E,N,N],[17,R[652],E,E,N,N],[17,R[653],E,E,N,N],[17,R[654],E,E,N,N],[17,R[655],E,E,N,N],[17,R[656],E,E,N,N],[17,R[657],E,E,N,N],[17,R[658],E,E,N,N],[17,R[659],E,E,N,N],[17,R[660],E,E,N,N],[17,R[661],E,E,N,N],[17,R[662],E,E,N,N],[17,R[663],E,E,N,N],[17,R[664],E,E,N,N],[17,R[665],E,E,N,N],[17,R[666],E,E,N,N],[17,R[667],E,E,N,N],[17,R[668],E,E,N,N],[17,R[669],E,E,N,N],[17,R[670],E,E,N,N],[17,R[671],E,E,N,N],[17,R[672],E,E,N,N],[17,R[673],E,E,N,N],[17,R[674],E,E,N,N],[17,R[675],E,E,N,N],[17,R[676],E,E,N,N],[17,R[677],E,E,N,N],[17,R[678],E,E,N,N],[17,R[679],E,E,N,N],[17,R[680],E,E,N,N],[17,R[681],E,E,N,N],[17,R[682],E,E,N,N],[17,R[683],E,E,N,N],[17,R[684],E,E,N,N],[17,R[685],E,E,N,N],[17,R[686],E,E,N,N],[17,R[687],E,E,N,N],[17,R[688],E,E,N,N],[17,R[689],E,E,N,N],[17,R[690],E,E,N,N],[17,R[691],E,E,N,N],[17,R[692],E,E,N,N],[17,R[693],E,E,N,N],[17,R[694],E,E,N,N],[17,R[695],E,E,N,N],[17,R[696],E,E,N,N],[17,R[697],E,E,N,N],[17,R[698],E,E,N,N],[17,R[699],E,E,N,N],[17,R[700],E,E,N,N],[17,R[701],E,E,N,N],[17,R[702],E,E,N,N],[17,R[703],E,E,N,N],[17,R[704],E,E,N,N],[17,R[705],E,E,N,N],[17,R[707],E,E,N,N],[17,R[708],E,E,N,N],[17,R[706],E,E,N,N],[17,R[709],E,E,N,N],[17,R[710],E,E,N,N],[17,R[711],E,E,N,N],[17,R[712],E,E,N,N],[17,R[713],E,E,N,N],[17,R[714],E,E,N,N],[17,R[715],E,E,N,N],[17,R[716],E,E,N,N],[17,R[717],E,E,N,N],[17,R[718],E,E,N,N],[17,R[719],E,E,N,N],[17,R[720],E,E,N,N],[17,R[721],E,E,N,N],[17,R[722],E,E,N,N],[17,R[723],E,E,N,N],[17,R[724],E,E,N,N],[17,R[725],E,E,N,N],[17,R[726],E,E,N,N],[17,R[727],E,E,N,N],[17,R[728],E,E,N,N],[17,R[729],E,E,N,N],[17,R[730],E,E,N,N],[17,R[731],E,E,N,N],[17,R[732],E,E,N,N],[17,R[733],E,E,N,N],[17,R[734],E,E,N,N],[17,R[735],E,E,N,N],[17,R[736],E,E,N,N],[17,R[737],E,E,N,N],[17,R[738],E,E,N,N],[17,R[739],E,E,N,N],[17,R[740],E,E,N,N],[17,R[741],E,E,N,N],[17,R[742],E,E,N,N],[17,R[743],E,E,N,N],[17,R[744],E,E,N,N],[17,R[745],E,E,N,N],[17,R[746],E,E,N,N],[17,R[747],E,E,N,N],[17,R[748],E,E,N,N],[17,R[749],E,E,N,N],[17,R[750],E,E,N,N],[17,R[751],E,E,N,N],[17,R[752],E,E,N,N],[17,R[753],E,E,N,N],[17,R[754],E,E,N,N],[17,R[755],E,E,N,N],[17,R[756],E,E,N,N],[17,R[757],E,E,N,N],[17,R[758],E,E,N,N],[17,R[759],E,E,N,N],[17,R[760],E,E,N,N],[17,R[761],E,E,N,N],[17,R[762],E,E,N,N],[17,R[763],E,E,N,N],[17,R[764],E,E,N,N],[17,R[765],E,E,N,N],[17,R[766],E,E,N,N],[17,R[767],E,E,N,N],[17,R[768],E,E,N,N],[17,R[769],E,E,N,N],[17,R[770],E,E,N,N],[17,R[771],E,E,N,N],[17,R[772],E,E,N,N],[17,R[773],E,E,N,N],[17,R[774],E,E,N,N],[17,R[775],E,E,N,N],[17,R[776],E,E,N,N],[17,R[777],E,E,N,N],[17,R[778],E,E,N,N],[17,R[779],E,E,N,N],[0,"wasi32",R[565],R[780],N,N],[3,R[781],R[792],E,N,N],[12,"buf",E,E,23,N],[12,"buf_len",E,E,23,N],[3,R[782],E,E,N,N],[12,"buf",E,E,24,N],[12,"buf_len",E,E,24,N],[3,R[783],E,E,N,N],[12,R[784],E,E,25,N],[3,R[785],E,E,N,N],[12,"pr_type",E,E,26,N],[12,U,E,E,26,N],[19,R[786],E,E,N,N],[12,"dir",E,E,27,N],[6,R[489],E,E,N,N],[6,"size_t",E,E,N,N],[6,R[787],E,E,N,N],[6,R[788],E,E,N,N],[6,R[789],E,E,N,N],[6,"Error",R[565],E,N,N],[6,"Result",E,E,N,N],[0,"wasi",R[486],R[567],N,N],[3,R[568],R[793],E,N,N],[12,"d_next",E,E,28,N],[12,"d_ino",E,E,28,N],[12,"d_namlen",E,E,28,N],[12,"d_type",E,E,28,N],[3,R[569],E,E,N,N],[12,R[570],E,E,29,N],[12,"fs_flags",E,E,29,N],[12,R[571],E,E,29,N],[12,R[572],E,E,29,N],[3,R[573],E,E,N,N],[12,"dev",E,E,30,N],[12,"ino",E,E,30,N],[12,R[483],E,E,30,N],[12,"nlink",E,E,30,N],[12,"size",E,E,30,N],[12,"atim",E,E,30,N],[12,"mtim",E,E,30,N],[12,"ctim",E,E,30,N],[3,R[574],E,E,N,N],[12,"nbytes",E,E,31,N],[12,"flags",E,E,31,N],[3,R[575],E,E,N,N],[12,R[576],E,E,32,N],[12,"error",E,E,32,N],[12,"type",E,E,32,N],[12,U,E,E,32,N],[3,R[577],E,E,N,N],[12,"id",E,E,33,N],[12,"timeout",E,E,33,N],[12,R[578],E,E,33,N],[12,"flags",E,E,33,N],[3,R[579],E,E,N,N],[12,R[580],E,E,34,N],[3,R[581],E,E,N,N],[12,R[576],E,E,35,N],[12,"type",E,E,35,N],[12,U,E,E,35,N],[19,R[582],E,E,N,N],[12,R[566],E,E,36,N],[19,R[583],E,E,N,N],[12,"clock",E,E,37,N],[12,R[566],E,E,37,N],[5,"strerror",E,E,N,[[[R[487]]],["str"]]],[5,R[584],E,E,N,[[[R[492]]],["str"]]],[6,R[490],E,E,N,N],[6,R[499],E,E,N,N],[6,R[503],E,E,N,N],[6,R[487],E,E,N,N],[6,R[494],E,E,N,N],[6,R[481],E,E,N,N],[6,R[491],E,E,N,N],[6,R[492],E,E,N,N],[6,R[498],E,E,N,N],[6,R[585],E,E,N,N],[6,R[586],E,E,N,N],[6,R[587],E,E,N,N],[6,R[495],E,E,N,N],[6,R[493],E,E,N,N],[6,R[588],E,E,N,N],[6,R[500],E,E,N,N],[6,R[496],E,E,N,N],[6,R[497],E,E,N,N],[6,R[589],E,E,N,N],[6,R[590],E,E,N,N],[6,R[591],E,E,N,N],[6,R[592],E,E,N,N],[6,R[593],E,E,N,N],[6,R[501],E,E,N,N],[6,R[502],E,E,N,N],[6,R[504],E,E,N,N],[6,R[594],E,E,N,N],[6,R[505],E,E,N,N],[6,R[506],E,E,N,N],[6,R[595],E,E,N,N],[17,R[596],E,E,N,N],[17,R[597],E,E,N,N],[17,R[598],E,E,N,N],[17,R[599],E,E,N,N],[17,R[600],E,E,N,N],[17,R[601],E,E,N,N],[17,R[602],E,E,N,N],[17,R[603],E,E,N,N],[17,R[604],E,E,N,N],[17,R[605],E,E,N,N],[17,R[606],E,E,N,N],[17,R[607],E,E,N,N],[17,R[608],E,E,N,N],[17,R[609],E,E,N,N],[17,R[610],E,E,N,N],[17,R[611],E,E,N,N],[17,R[612],E,E,N,N],[17,R[613],E,E,N,N],[17,R[614],E,E,N,N],[17,R[615],E,E,N,N],[17,R[616],E,E,N,N],[17,R[617],E,E,N,N],[17,R[618],E,E,N,N],[17,R[619],E,E,N,N],[17,R[620],E,E,N,N],[17,R[621],E,E,N,N],[17,R[622],E,E,N,N],[17,R[623],E,E,N,N],[17,R[624],E,E,N,N],[17,R[625],E,E,N,N],[17,R[626],E,E,N,N],[17,R[627],E,E,N,N],[17,R[628],E,E,N,N],[17,R[629],E,E,N,N],[17,R[630],E,E,N,N],[17,R[631],E,E,N,N],[17,R[632],E,E,N,N],[17,R[633],E,E,N,N],[17,R[634],E,E,N,N],[17,R[635],E,E,N,N],[17,R[636],E,E,N,N],[17,R[637],E,E,N,N],[17,R[638],E,E,N,N],[17,R[639],E,E,N,N],[17,R[640],E,E,N,N],[17,R[641],E,E,N,N],[17,R[642],E,E,N,N],[17,R[643],E,E,N,N],[17,R[644],E,E,N,N],[17,R[645],E,E,N,N],[17,R[646],E,E,N,N],[17,R[647],E,E,N,N],[17,R[648],E,E,N,N],[17,R[649],E,E,N,N],[17,R[650],E,E,N,N],[17,R[651],E,E,N,N],[17,R[652],E,E,N,N],[17,R[653],E,E,N,N],[17,R[654],E,E,N,N],[17,R[655],E,E,N,N],[17,R[656],E,E,N,N],[17,R[657],E,E,N,N],[17,R[658],E,E,N,N],[17,R[659],E,E,N,N],[17,R[660],E,E,N,N],[17,R[661],E,E,N,N],[17,R[662],E,E,N,N],[17,R[663],E,E,N,N],[17,R[664],E,E,N,N],[17,R[665],E,E,N,N],[17,R[666],E,E,N,N],[17,R[667],E,E,N,N],[17,R[668],E,E,N,N],[17,R[669],E,E,N,N],[17,R[670],E,E,N,N],[17,R[671],E,E,N,N],[17,R[672],E,E,N,N],[17,R[673],E,E,N,N],[17,R[674],E,E,N,N],[17,R[675],E,E,N,N],[17,R[676],E,E,N,N],[17,R[677],E,E,N,N],[17,R[678],E,E,N,N],[17,R[679],E,E,N,N],[17,R[680],E,E,N,N],[17,R[681],E,E,N,N],[17,R[682],E,E,N,N],[17,R[683],E,E,N,N],[17,R[684],E,E,N,N],[17,R[685],E,E,N,N],[17,R[686],E,E,N,N],[17,R[687],E,E,N,N],[17,R[688],E,E,N,N],[17,R[689],E,E,N,N],[17,R[690],E,E,N,N],[17,R[691],E,E,N,N],[17,R[692],E,E,N,N],[17,R[693],E,E,N,N],[17,R[694],E,E,N,N],[17,R[695],E,E,N,N],[17,R[696],E,E,N,N],[17,R[697],E,E,N,N],[17,R[698],E,E,N,N],[17,R[699],E,E,N,N],[17,R[700],E,E,N,N],[17,R[701],E,E,N,N],[17,R[702],E,E,N,N],[17,R[703],E,E,N,N],[17,R[704],E,E,N,N],[17,R[705],E,E,N,N],[17,R[706],E,E,N,N],[17,R[707],E,E,N,N],[17,R[708],E,E,N,N],[17,R[709],E,E,N,N],[17,R[710],E,E,N,N],[17,R[711],E,E,N,N],[17,R[712],E,E,N,N],[17,R[713],E,E,N,N],[17,R[714],E,E,N,N],[17,R[715],E,E,N,N],[17,R[716],E,E,N,N],[17,R[717],E,E,N,N],[17,R[718],E,E,N,N],[17,R[719],E,E,N,N],[17,R[720],E,E,N,N],[17,R[721],E,E,N,N],[17,R[722],E,E,N,N],[17,R[723],E,E,N,N],[17,R[724],E,E,N,N],[17,R[725],E,E,N,N],[17,R[726],E,E,N,N],[17,R[727],E,E,N,N],[17,R[728],E,E,N,N],[17,R[729],E,E,N,N],[17,R[730],E,E,N,N],[17,R[731],E,E,N,N],[17,R[732],E,E,N,N],[17,R[733],E,E,N,N],[17,R[734],E,E,N,N],[17,R[735],E,E,N,N],[17,R[736],E,E,N,N],[17,R[737],E,E,N,N],[17,R[738],E,E,N,N],[17,R[739],E,E,N,N],[17,R[740],E,E,N,N],[17,R[741],E,E,N,N],[17,R[742],E,E,N,N],[17,R[743],E,E,N,N],[17,R[744],E,E,N,N],[17,R[745],E,E,N,N],[17,R[746],E,E,N,N],[17,R[747],E,E,N,N],[17,R[748],E,E,N,N],[17,R[749],E,E,N,N],[17,R[750],E,E,N,N],[17,R[751],E,E,N,N],[17,R[752],E,E,N,N],[17,R[753],E,E,N,N],[17,R[754],E,E,N,N],[17,R[755],E,E,N,N],[17,R[756],E,E,N,N],[17,R[757],E,E,N,N],[17,R[758],E,E,N,N],[17,R[759],E,E,N,N],[17,R[760],E,E,N,N],[17,R[761],E,E,N,N],[17,R[762],E,E,N,N],[17,R[763],E,E,N,N],[17,R[764],E,E,N,N],[17,R[765],E,E,N,N],[17,R[766],E,E,N,N],[17,R[767],E,E,N,N],[17,R[768],E,E,N,N],[17,R[769],E,E,N,N],[17,R[770],E,E,N,N],[17,R[771],E,E,N,N],[17,R[772],E,E,N,N],[17,R[773],E,E,N,N],[17,R[774],E,E,N,N],[17,R[775],E,E,N,N],[17,R[776],E,E,N,N],[17,R[777],E,E,N,N],[17,R[778],E,E,N,N],[17,R[779],E,E,N,N],[0,"wasi32",R[486],R[780],N,N],[3,R[781],R[794],E,N,N],[12,"buf",E,E,38,N],[12,"buf_len",E,E,38,N],[3,R[782],E,E,N,N],[12,"buf",E,E,39,N],[12,"buf_len",E,E,39,N],[3,R[783],E,E,N,N],[12,R[784],E,E,40,N],[3,R[785],E,E,N,N],[12,"pr_type",E,E,41,N],[12,U,E,E,41,N],[19,R[786],E,E,N,N],[12,"dir",E,E,42,N],[6,R[489],E,E,N,N],[6,"size_t",E,E,N,N],[6,R[787],E,E,N,N],[6,R[788],E,E,N,N],[6,R[789],E,E,N,N],[6,"Error",R[486],E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,"into",R[790],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[[U]],[R[15]]]],[11,R[36],E,E,3,[[],[R[15]]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[R[39]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[35],E,E,4,[[[U]],[R[15]]]],[11,R[36],E,E,4,[[],[R[15]]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[39]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[35],E,E,5,[[[U]],[R[15]]]],[11,R[36],E,E,5,[[],[R[15]]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[R[39]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[35],E,E,6,[[[U]],[R[15]]]],[11,R[36],E,E,6,[[],[R[15]]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[39]]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[35],E,E,7,[[[U]],[R[15]]]],[11,R[36],E,E,7,[[],[R[15]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[39]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[[U]],[R[15]]]],[11,R[36],E,E,8,[[],[R[15]]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[R[39]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[35],E,E,9,[[[U]],[R[15]]]],[11,R[36],E,E,9,[[],[R[15]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[37],E,E,9,[[["self"]],[R[39]]]],[11,"into",E,E,10,[[],[U]]],[11,"into_iter",E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[35],E,E,10,[[[U]],[R[15]]]],[11,R[36],E,E,10,[[],[R[15]]]],[11,R[34],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[39]]]],[11,"into",R[565],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[35],E,E,12,[[[U]],[R[15]]]],[11,R[36],E,E,12,[[],[R[15]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[R[39]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[[U]],[R[15]]]],[11,R[36],E,E,11,[[],[R[15]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[R[39]]]],[11,R[40],R[791],E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[[U]],[R[15]]]],[11,R[36],E,E,13,[[],[R[15]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[R[39]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[35],E,E,14,[[[U]],[R[15]]]],[11,R[36],E,E,14,[[],[R[15]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[39]]]],[11,R[40],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[35],E,E,15,[[[U]],[R[15]]]],[11,R[36],E,E,15,[[],[R[15]]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[39]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[35],E,E,16,[[[U]],[R[15]]]],[11,R[36],E,E,16,[[],[R[15]]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[39]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[35],E,E,17,[[[U]],[R[15]]]],[11,R[36],E,E,17,[[],[R[15]]]],[11,R[34],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[T]]],[11,R[37],E,E,17,[[["self"]],[R[39]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[35],E,E,18,[[[U]],[R[15]]]],[11,R[36],E,E,18,[[],[R[15]]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[39]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[35],E,E,19,[[[U]],[R[15]]]],[11,R[36],E,E,19,[[],[R[15]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[37],E,E,19,[[["self"]],[R[39]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[35],E,E,20,[[[U]],[R[15]]]],[11,R[36],E,E,20,[[],[R[15]]]],[11,R[34],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[T]]],[11,R[37],E,E,20,[[["self"]],[R[39]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[35],E,E,21,[[[U]],[R[15]]]],[11,R[36],E,E,21,[[],[R[15]]]],[11,R[34],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[T]]],[11,R[37],E,E,21,[[["self"]],[R[39]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[35],E,E,22,[[[U]],[R[15]]]],[11,R[36],E,E,22,[[],[R[15]]]],[11,R[34],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[T]]],[11,R[37],E,E,22,[[["self"]],[R[39]]]],[11,R[40],R[792],E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[35],E,E,23,[[[U]],[R[15]]]],[11,R[36],E,E,23,[[],[R[15]]]],[11,R[34],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[T]]],[11,R[37],E,E,23,[[["self"]],[R[39]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[35],E,E,24,[[[U]],[R[15]]]],[11,R[36],E,E,24,[[],[R[15]]]],[11,R[34],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[T]]],[11,R[37],E,E,24,[[["self"]],[R[39]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[35],E,E,25,[[[U]],[R[15]]]],[11,R[36],E,E,25,[[],[R[15]]]],[11,R[34],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[T]]],[11,R[37],E,E,25,[[["self"]],[R[39]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[35],E,E,26,[[[U]],[R[15]]]],[11,R[36],E,E,26,[[],[R[15]]]],[11,R[34],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"]],[T]]],[11,R[37],E,E,26,[[["self"]],[R[39]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[35],E,E,27,[[[U]],[R[15]]]],[11,R[36],E,E,27,[[],[R[15]]]],[11,R[34],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"]],[T]]],[11,R[37],E,E,27,[[["self"]],[R[39]]]],[11,R[40],R[793],E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[35],E,E,28,[[[U]],[R[15]]]],[11,R[36],E,E,28,[[],[R[15]]]],[11,R[34],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"]],[T]]],[11,R[37],E,E,28,[[["self"]],[R[39]]]],[11,R[40],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[35],E,E,29,[[[U]],[R[15]]]],[11,R[36],E,E,29,[[],[R[15]]]],[11,R[34],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"]],[T]]],[11,R[37],E,E,29,[[["self"]],[R[39]]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[35],E,E,30,[[[U]],[R[15]]]],[11,R[36],E,E,30,[[],[R[15]]]],[11,R[34],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"]],[T]]],[11,R[37],E,E,30,[[["self"]],[R[39]]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[35],E,E,31,[[[U]],[R[15]]]],[11,R[36],E,E,31,[[],[R[15]]]],[11,R[34],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"]],[T]]],[11,R[37],E,E,31,[[["self"]],[R[39]]]],[11,R[40],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[35],E,E,32,[[[U]],[R[15]]]],[11,R[36],E,E,32,[[],[R[15]]]],[11,R[34],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"]],[T]]],[11,R[37],E,E,32,[[["self"]],[R[39]]]],[11,R[40],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[35],E,E,33,[[[U]],[R[15]]]],[11,R[36],E,E,33,[[],[R[15]]]],[11,R[34],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"]],[T]]],[11,R[37],E,E,33,[[["self"]],[R[39]]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[35],E,E,34,[[[U]],[R[15]]]],[11,R[36],E,E,34,[[],[R[15]]]],[11,R[34],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"]],[T]]],[11,R[37],E,E,34,[[["self"]],[R[39]]]],[11,R[40],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[35],E,E,35,[[[U]],[R[15]]]],[11,R[36],E,E,35,[[],[R[15]]]],[11,R[34],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"]],[T]]],[11,R[37],E,E,35,[[["self"]],[R[39]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[35],E,E,36,[[[U]],[R[15]]]],[11,R[36],E,E,36,[[],[R[15]]]],[11,R[34],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"]],[T]]],[11,R[37],E,E,36,[[["self"]],[R[39]]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[35],E,E,37,[[[U]],[R[15]]]],[11,R[36],E,E,37,[[],[R[15]]]],[11,R[34],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"]],[T]]],[11,R[37],E,E,37,[[["self"]],[R[39]]]],[11,R[40],R[794],E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[35],E,E,38,[[[U]],[R[15]]]],[11,R[36],E,E,38,[[],[R[15]]]],[11,R[34],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"]],[T]]],[11,R[37],E,E,38,[[["self"]],[R[39]]]],[11,R[40],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[35],E,E,39,[[[U]],[R[15]]]],[11,R[36],E,E,39,[[],[R[15]]]],[11,R[34],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"]],[T]]],[11,R[37],E,E,39,[[["self"]],[R[39]]]],[11,R[40],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[35],E,E,40,[[[U]],[R[15]]]],[11,R[36],E,E,40,[[],[R[15]]]],[11,R[34],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"]],[T]]],[11,R[37],E,E,40,[[["self"]],[R[39]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[35],E,E,41,[[[U]],[R[15]]]],[11,R[36],E,E,41,[[],[R[15]]]],[11,R[34],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"]],[T]]],[11,R[37],E,E,41,[[["self"]],[R[39]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[35],E,E,42,[[[U]],[R[15]]]],[11,R[36],E,E,42,[[],[R[15]]]],[11,R[34],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"]],[T]]],[11,R[37],E,E,42,[[["self"]],[R[39]]]],[11,"drop",R[790],E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"clone",E,E,6,[[["self"]],[R[483]]]],[11,"clone",E,E,7,[[["self"]],[R[478]]]],[11,"clone",E,E,9,[[["self"]],[R[484]]]],[11,"clone",R[791],E,13,[[["self"]],[R[568]]]],[11,"clone",E,E,14,[[["self"]],[R[569]]]],[11,"clone",E,E,15,[[["self"]],[R[573]]]],[11,"clone",E,E,16,[[["self"]],[R[574]]]],[11,"clone",E,E,21,[[["self"]],[R[582]]]],[11,"clone",E,E,17,[[["self"]],[R[575]]]],[11,"clone",E,E,18,[[["self"]],[R[577]]]],[11,"clone",E,E,19,[[["self"]],[R[579]]]],[11,"clone",E,E,22,[[["self"]],[R[583]]]],[11,"clone",E,E,20,[[["self"]],[R[581]]]],[11,"clone",R[792],E,23,[[["self"]],[R[781]]]],[11,"clone",E,E,24,[[["self"]],[R[782]]]],[11,"clone",E,E,25,[[["self"]],[R[783]]]],[11,"clone",E,E,27,[[["self"]],[R[786]]]],[11,"clone",E,E,26,[[["self"]],[R[785]]]],[11,"clone",R[793],E,28,[[["self"]],[R[568]]]],[11,"clone",E,E,29,[[["self"]],[R[569]]]],[11,"clone",E,E,30,[[["self"]],[R[573]]]],[11,"clone",E,E,31,[[["self"]],[R[574]]]],[11,"clone",E,E,36,[[["self"]],[R[582]]]],[11,"clone",E,E,32,[[["self"]],[R[575]]]],[11,"clone",E,E,33,[[["self"]],[R[577]]]],[11,"clone",E,E,34,[[["self"]],[R[579]]]],[11,"clone",E,E,37,[[["self"]],[R[583]]]],[11,"clone",E,E,35,[[["self"]],[R[581]]]],[11,"clone",R[794],E,38,[[["self"]],[R[781]]]],[11,"clone",E,E,39,[[["self"]],[R[782]]]],[11,"clone",E,E,40,[[["self"]],[R[783]]]],[11,"clone",E,E,42,[[["self"]],[R[786]]]],[11,"clone",E,E,41,[[["self"]],[R[785]]]],[11,"eq",R[790],E,6,[[["self"],[R[483]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[484]]],["bool"]]],[11,"eq",R[791],E,13,[[["self"],[R[568]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[568]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[569]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[569]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[573]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[573]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[574]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[574]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[577]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[577]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[579]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[579]]],["bool"]]],[11,"eq",R[792],E,23,[[["self"],[R[781]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[781]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[782]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[782]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[783]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[783]]],["bool"]]],[11,"eq",R[793],E,28,[[["self"],[R[568]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[568]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[569]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[569]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[573]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[573]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[574]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[574]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[577]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[577]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[579]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[579]]],["bool"]]],[11,"eq",R[794],E,38,[[["self"],[R[781]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[781]]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[782]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[782]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[783]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[783]]],["bool"]]],[11,"next",R[790],"TODO: Not yet implemented.",10,[[["self"]],[R[5]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",R[791],E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",R[792],E,23,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",R[793],E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",R[794],E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"fmt",R[486],E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",R[565],E,12,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",R[791],E,13,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",R[792],E,23,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,25,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",R[793],E,28,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,29,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,30,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,31,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,33,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,34,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",R[794],E,38,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,39,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,40,[[["self"],[R[86]]],[R[15]]]],[11,"read",R[790],"TODO: Not yet implemented. See the comment in…",5,[[["self"]],[[R[15],["usize"]],["usize"]]]]],"p":[[3,R[507]],[3,"WasiCtx"],[3,"Dir"],[3,R[795]],[3,"DirEntry"],[3,"File"],[3,"FileType"],[3,"Metadata"],[3,R[796]],[3,R[797]],[3,"ReadDir"],[3,R[507]],[3,"WasiCtx"],[3,R[568]],[3,R[569]],[3,R[573]],[3,R[574]],[3,R[575]],[3,R[577]],[3,R[579]],[3,R[581]],[19,R[582]],[19,R[583]],[3,R[781]],[3,R[782]],[3,R[783]],[3,R[785]],[19,R[786]],[3,R[568]],[3,R[569]],[3,R[573]],[3,R[574]],[3,R[575]],[3,R[577]],[3,R[579]],[3,R[581]],[19,R[582]],[19,R[583]],[3,R[781]],[3,R[782]],[3,R[783]],[3,R[785]],[19,R[786]]]};
searchIndex["wasm2obj"]={"doc":"Translation from wasm to native object files.","i":[],"p":[]};
searchIndex["wasmtime"]={"doc":"Wasmtime's embedding API","i":[[3,"Func",R[33],E,N,N],[3,R[0],E,E,N,N],[3,"Table",E,E,N,N],[3,R[1],E,E,N,N],[3,R[90],E,E,N,N],[3,"Module",E,E,N,N],[3,"HostRef",E,"Represents a piece of data located in the host environment.",N,N],[3,"Config",E,"Global configuration options used to create an [`Engine`]…",N,N],[3,"Engine",E,E,N,N],[3,"Store",E,E,N,N],[3,"Trap",E,"A struct representing an aborted instruction execution,…",N,N],[3,"Limits",E,"Limits of tables/memories where the units of the limits…",N,N],[3,R[91],E,"A descriptor for a function in a WebAssembly module.",N,N],[3,R[92],E,"A WebAssembly global descriptor.",N,N],[3,R[93],E,"A descriptor for a table in a WebAssembly module.",N,N],[3,R[94],E,"A descriptor for a WebAssembly memory type.",N,N],[3,R[95],E,"A descriptor for an imported value into a wasm module.",N,N],[3,R[96],E,"A descriptor for an exported WebAssembly value.",N,N],[4,"Extern",E,E,N,N],[13,"Func",E,E,0,N],[13,R[0],E,E,0,N],[13,"Table",E,E,0,N],[13,R[1],E,E,0,N],[4,R[2],E,"Represents an opaque reference to any data within…",N,N],[13,"Null",E,"A reference to no data.",1,N],[13,"Ref",E,"A reference to data stored internally in `wasmtime`.",1,N],[13,"Other",E,"A reference to data located outside of `wasmtime`.",1,N],[4,R[88],E,"Indicator of whether a global is mutable or not",N,N],[13,"Const",E,"The global is constant and its value does not change",2,N],[13,"Var",E,"The value of the global can change over time",2,N],[4,"ValType",E,"A list of all possible value types in WebAssembly.",N,N],[13,"I32",E,"Signed 32 bit integer.",3,N],[13,"I64",E,"Signed 64 bit integer.",3,N],[13,"F32",E,"Floating point 32 bit integer.",3,N],[13,"F64",E,"Floating point 64 bit integer.",3,N],[13,"V128",E,"A 128 bit number.",3,N],[13,R[2],E,"A reference to opaque data in the Wasm instance.",3,N],[13,R[3],E,"A reference to a Wasm function.",3,N],[4,R[89],E,"A list of all possible types which can be externally…",N,N],[13,"Func",E,E,4,N],[13,R[0],E,E,4,N],[13,"Table",E,E,4,N],[13,R[1],E,E,4,N],[4,"Val",E,"Possible runtime values that a WebAssembly module can…",N,N],[13,"I32",E,"A 32-bit integer",5,N],[13,"I64",E,"A 64-bit integer",5,N],[13,"F32",E,"A 32-bit float.",5,N],[13,"F64",E,"A 64-bit float.",5,N],[13,R[2],E,"An `anyref` value which can hold opaque data to the wasm…",5,N],[13,R[3],E,"A first-class reference to a WebAssembly function.",5,N],[13,"V128",E,"A 128-bit number",5,N],[11,"func",E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,R[8],E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,"table",E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,R[84],E,E,0,[[["self"]],[[R[4]],[R[5],[R[4]]]]]],[11,"type",E,E,0,[[["self"]],[R[22]]]],[11,"new",E,E,6,[[[R[7]],["rc",[R[6]]],[R[4]],[R[6]]],["self"]]],[11,"type",E,E,6,[[["self"]],[R[7]]]],[11,"param_arity",E,E,6,[[["self"]],["usize"]]],[11,"result_arity",E,E,6,[[["self"]],["usize"]]],[11,"call",E,E,6,[[["self"]],[[R[15],["box",R[4]]],["box"],[R[4],["trap"]]]]],[11,"new",E,E,7,[[[R[9]],[R[4]],["val"]],[R[8]]]],[11,"type",E,E,7,[[["self"]],[R[9]]]],[11,"get",E,E,7,[[["self"]],["val"]]],[11,"set",E,E,7,[[["self"],["val"]]]],[11,"new",E,E,8,[[[R[10]],[R[4]],["val"]],["table"]]],[11,"type",E,E,8,[[["self"]],[R[10]]]],[11,"get",E,E,8,[[["self"],["u32"]],["val"]]],[11,"set",E,E,8,[[["self"],["u32"],["val"]],["bool"]]],[11,"size",E,E,8,[[["self"]],["u32"]]],[11,"grow",E,E,8,[[["self"],["u32"],["val"]],["bool"]]],[11,"new",E,E,9,[[[R[4]],[R[11]]],[R[84]]]],[11,"type",E,E,9,[[["self"]],[R[11]]]],[11,"data",E,E,9,[[["self"]]]],[11,"data_ptr",E,E,9,[[["self"]]]],[11,"data_size",E,E,9,[[["self"]],["usize"]]],[11,"size",E,E,9,[[["self"]],["u32"]]],[11,"grow",E,E,9,[[["self"],["u32"]],["bool"]]],[11,"new",E,E,10,[[[R[4]],[R[4]]],[[R[12]],[R[15],[R[12]]]]]],[11,"exports",E,E,10,[[["self"]]]],[11,R[14],E,E,10,[[["self"]],[R[4]]]],[11,"find_export_by_name",E,E,10,[[["self"],["str"]],[["extern"],[R[5],["extern"]]]]],[11,"from_handle",E,E,10,[[[R[4]],[R[13]]],[R[12]]]],[11,"handle",E,E,10,[[["self"]],[R[13]]]],[11,"get_wasmtime_memory",E,E,10,[[["self"]],[[R[5],["export"]],["export"]]]],[11,"new",E,"Validate and decode the raw wasm data in `binary` and…",11,[[[R[4]]],[[R[14]],[R[15],[R[14]]]]]],[11,"new_unchecked",E,"Similar to `new`, but does not perform any validation.…",11,[[[R[4]]],[[R[14]],[R[15],[R[14]]]]]],[11,"validate",E,E,11,[[[R[4]]],[R[15]]]],[11,R[422],E,E,11,[[["self"]]]],[11,"exports",E,E,11,[[["self"]]]],[11,"from_exports",E,E,11,[[["box"],[R[4]]],["self"]]],[11,"new",E,"Creates a new instance of `AnyRef` from `Box<dyn Any>`.",1,[[["any"],["box",["any"]]],["self"]]],[11,"null",E,"Creates a `Null` reference.",1,[[],["self"]]],[11,"data",E,"Returns the data stored in the reference if available. #…",1,[[["self"]],[["ref",["box"]],["box",["any"]]]]],[11,"ptr_eq",E,"Returns true if the two `AnyRef<T>`'s point to the same…",1,[[["self"],[R[25]]],["bool"]]],[11,"host_info",E,"Returns a mutable reference to the host information if…",1,[[["self"]],[[R[5],["refmut"]],["refmut",["box"]]]]],[11,"set_host_info",E,"Sets the host information for an `AnyRef`. # Panics Panics…",1,[[["self"],[R[5],["box"]],["box",["hostinfo"]]]]],[11,"new",E,"Creates a new `HostRef<T>` from `T`.",12,[[[T]],[R[4]]]],[11,R[38],E,"Immutably borrows the wrapped data. # Panics Panics if the…",12,[[["self"]],["ref"]]],[11,R[34],E,"Mutably borrows the wrapped data. # Panics Panics if the…",12,[[["self"]],["refmut"]]],[11,"ptr_eq",E,"Returns true if the two `HostRef<T>`'s point to the same…",12,[[["self"],[R[4]]],["bool"]]],[11,R[25],E,"Returns an opaque reference to the wrapped data in the…",12,[[["self"]],[R[25]]]],[11,"new",E,"Creates a new configuration object with the default…",13,[[],["config"]]],[11,R[294],E,"Configures whether DWARF debug information will be emitted…",13,[[["self"],["bool"]],["self"]]],[11,"flags",E,"Configures various flags for compilation such as…",13,[[["self"],["flags"]],["self"]]],[11,R[16],E,"Indicates which WebAssembly features are enabled for this…",13,[[["self"],[R[16]]],["self"]]],[11,"strategy",E,"Configures the compilation `strategy` provided, indicating…",13,[[["self"],[R[99]]],["self"]]],[11,"new",E,E,14,[[["config"]],["engine"]]],[11,"new",E,E,15,[[[R[4]]],["store"]]],[11,"engine",E,E,15,[[["self"]],[R[4]]]],[11,"global_exports",E,E,15,[[["self"]],["rc"]]],[11,"new",E,"Creates a new `Trap` with `message`. # Example `let trap =…",16,[[["string"],["into",["string"]]],["trap"]]],[11,"fake",E,"Create a `Trap` without defining a message for the trap.…",16,[[],["trap"]]],[11,"message",E,"Returns a reference the `message` stored in `Trap`.",16,[[["self"]],["str"]]],[11,"new",E,"Creates a new set of limits with the minimum and maximum…",17,[[["u32"],[R[5],["u32"]]],[R[21]]]],[11,"at_least",E,"Creates a new `Limits` with the `min` specified and no…",17,[[["u32"]],[R[21]]]],[11,"min",E,"Returns the minimum amount for these limits.",17,[[["self"]],["u32"]]],[11,"max",E,"Returns the maximum amount for these limits, if specified.",17,[[["self"]],[[R[5],["u32"]],["u32"]]]],[11,"is_num",E,"Returns true if `ValType` matches any of the numeric…",3,[[["self"]],["bool"]]],[11,"is_ref",E,"Returns true if `ValType` matches either of the reference…",3,[[["self"]],["bool"]]],[11,"func",E,R[17],4,[[["self"]],[[R[5],[R[7]]],[R[7]]]]],[11,"unwrap_func",E,R[18],4,[[["self"]],[R[7]]]],[11,R[8],E,R[17],4,[[["self"]],[[R[5],[R[9]]],[R[9]]]]],[11,"unwrap_global",E,R[18],4,[[["self"]],[R[9]]]],[11,"table",E,R[17],4,[[["self"]],[[R[5],[R[10]]],[R[10]]]]],[11,"unwrap_table",E,R[18],4,[[["self"]],[R[10]]]],[11,R[84],E,R[17],4,[[["self"]],[[R[5],[R[11]]],[R[11]]]]],[11,"unwrap_memory",E,R[18],4,[[["self"]],[R[11]]]],[11,"new",E,"Creates a new function descriptor from the given…",18,[[["box"]],[R[7]]]],[11,"params",E,"Returns the list of parameter types for this function.",18,[[["self"]]]],[11,"results",E,"Returns the list of result types for this function.",18,[[["self"]]]],[11,"new",E,"Creates a new global descriptor of the specified `content`…",19,[[[R[20]],[R[19]]],[R[9]]]],[11,"content",E,"Returns the value type of this global descriptor.",19,[[["self"]],[R[20]]]],[11,R[19],E,"Returns whether or not this global is mutable.",19,[[["self"]],[R[19]]]],[11,"new",E,"Creates a new table descriptor which will contain the…",20,[[[R[21]],[R[20]]],[R[10]]]],[11,"element",E,"Returns the element value type of this table.",20,[[["self"]],[R[20]]]],[11,R[21],E,"Returns the limits, in units of elements, of this table.",20,[[["self"]],[R[21]]]],[11,"new",E,"Creates a new descriptor for a WebAssembly memory given…",21,[[[R[21]]],[R[11]]]],[11,R[21],E,"Returns the limits (in pages) that are configured for this…",21,[[["self"]],[R[21]]]],[11,"new",E,"Creates a new import descriptor which comes from `module`…",22,[[[R[22]],["str"]],[R[44]]]],[11,R[14],E,"Returns the module name that this import is expected to…",22,[[["self"]],["str"]]],[11,"name",E,"Returns the field name of the module that this import is…",22,[[["self"]],["str"]]],[11,"ty",E,"Returns the expected type of this import.",22,[[["self"]],[R[22]]]],[11,"new",E,"Creates a new export which is exported with the given…",23,[[[R[22]],["str"]],[R[45]]]],[11,"name",E,"Returns the name by which this export is known by.",23,[[["self"]],["str"]]],[11,"ty",E,"Returns the type of this export.",23,[[["self"]],[R[22]]]],[11,"null",E,"Returns a null `anyref` value.",5,[[],["val"]]],[11,"type",E,"Returns the corresponding [`ValType`] for this `Val`.",5,[[["self"]],[R[20]]]],[11,"i32",E,R[23],5,[[["self"]],[[R[5],["i32"]],["i32"]]]],[11,R[288],E,R[24],5,[[["self"]],["i32"]]],[11,"i64",E,R[23],5,[[["self"]],[["i64"],[R[5],["i64"]]]]],[11,R[289],E,R[24],5,[[["self"]],["i64"]]],[11,"f32",E,R[23],5,[[["self"]],[["f32"],[R[5],["f32"]]]]],[11,R[290],E,R[24],5,[[["self"]],["f32"]]],[11,"f64",E,R[23],5,[[["self"]],[[R[5],["f64"]],["f64"]]]],[11,R[291],E,R[24],5,[[["self"]],["f64"]]],[11,R[357],E,R[23],5,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,"unwrap_funcref",E,R[24],5,[[["self"]],[R[4]]]],[11,"v128",E,R[23],5,[[["self"]],[R[5]]]],[11,"unwrap_v128",E,R[24],5,[[["self"]]]],[11,R[25],E,R[23],5,[[["self"]],[[R[5],[R[25]]],[R[25]]]]],[11,"unwrap_anyref",E,R[24],5,[[["self"]],[R[25]]]],[0,"wasm",E,"This file defines the extern \"C\" API, which is compatible…",N,N],[3,R[46],R[42],E,N,N],[12,"size",E,E,24,N],[12,"data",E,E,24,N],[3,R[47],E,E,N,N],[3,R[48],E,E,N,N],[3,R[49],E,E,N,N],[3,R[50],E,E,N,N],[12,"min",E,E,25,N],[12,"max",E,E,25,N],[3,R[51],E,E,N,N],[3,R[52],E,E,N,N],[12,"size",E,E,26,N],[12,"data",E,E,26,N],[3,R[53],E,E,N,N],[3,R[54],E,E,N,N],[12,"size",E,E,27,N],[12,"data",E,E,27,N],[3,R[55],E,E,N,N],[3,R[56],E,E,N,N],[12,"size",E,E,28,N],[12,"data",E,E,28,N],[3,R[57],E,E,N,N],[3,R[58],E,E,N,N],[12,"size",E,E,29,N],[12,"data",E,E,29,N],[3,R[59],E,E,N,N],[3,R[60],E,E,N,N],[12,"size",E,E,30,N],[12,"data",E,E,30,N],[3,R[61],E,E,N,N],[3,R[62],E,E,N,N],[12,"size",E,E,31,N],[12,"data",E,E,31,N],[3,R[63],E,E,N,N],[3,R[64],E,E,N,N],[12,"size",E,E,32,N],[12,"data",E,E,32,N],[3,R[65],E,E,N,N],[3,R[66],E,E,N,N],[12,"size",E,E,33,N],[12,"data",E,E,33,N],[3,R[67],E,E,N,N],[3,R[68],E,E,N,N],[12,"kind",E,E,34,N],[12,"of",E,E,34,N],[3,R[70],E,E,N,N],[12,"size",E,E,35,N],[12,"data",E,E,35,N],[3,R[71],E,E,N,N],[3,R[72],E,E,N,N],[12,"size",E,E,36,N],[12,"data",E,E,36,N],[3,R[73],E,E,N,N],[3,R[74],E,E,N,N],[3,R[75],E,E,N,N],[3,R[76],E,E,N,N],[3,R[77],E,E,N,N],[3,R[78],E,E,N,N],[3,R[79],E,E,N,N],[3,R[80],E,E,N,N],[3,R[81],E,E,N,N],[3,R[82],E,E,N,N],[3,R[83],E,E,N,N],[12,"size",E,E,37,N],[12,"data",E,E,37,N],[19,R[69],E,E,N,N],[12,"i32",E,E,38,N],[12,"i64",E,E,38,N],[12,"u32",E,E,38,N],[12,"u64",E,E,38,N],[12,"f32",E,E,38,N],[12,"f64",E,E,38,N],[12,"ref_",E,E,38,N],[5,"wasm_byte_vec_delete",E,E,N,[[]]],[5,"wasm_byte_vec_new_uninitialized",E,E,N,[[["usize"]]]],[5,"wasm_engine_delete",E,E,N,[[]]],[5,"wasm_engine_new",E,E,N,[[]]],[5,"wasm_extern_as_func",E,E,N,[[]]],[5,"wasm_extern_vec_delete",E,E,N,[[]]],[5,"wasm_func_as_extern",E,E,N,[[]]],[5,"wasm_func_call",E,E,N,[[]]],[5,"wasm_func_new",E,E,N,[[[R[31]]]]],[5,"wasm_func_delete",E,E,N,[[]]],[5,"wasm_functype_new",E,E,N,[[]]],[5,"wasm_functype_delete",E,E,N,[[]]],[5,"wasm_instance_delete",E,E,N,[[]]],[5,"wasm_instance_new",E,E,N,[[]]],[5,"wasm_instance_exports",E,E,N,[[]]],[5,"wasm_module_delete",E,E,N,[[]]],[5,"wasm_module_new",E,"Note that this function does not perform validation on the…",N,[[]]],[5,"wasm_module_validate",E,E,N,[[],["bool"]]],[5,"wasm_store_delete",E,E,N,[[]]],[5,"wasm_store_new",E,E,N,[[]]],[5,"wasm_valtype_vec_new_empty",E,E,N,[[]]],[5,"wasm_valtype_vec_new",E,E,N,[[["usize"]]]],[5,"wasm_valtype_vec_new_uninitialized",E,E,N,[[["usize"]]]],[5,"wasm_func_new_with_env",E,E,N,[[[R[32]],[R[5]]]]],[5,"wasm_val_copy",E,E,N,[[]]],[5,"wasm_valtype_new",E,E,N,[[[R[27]]]]],[5,"wasm_valtype_delete",E,E,N,[[]]],[5,"wasm_byte_vec_new",E,E,N,[[["usize"]]]],[5,"wasm_frame_delete",E,E,N,[[]]],[5,"wasm_frame_func_index",E,E,N,[[],["u32"]]],[5,"wasm_frame_func_offset",E,E,N,[[],["usize"]]],[5,"wasm_frame_instance",E,E,N,[[]]],[5,"wasm_frame_module_offset",E,E,N,[[],["usize"]]],[5,"wasm_frame_vec_delete",E,E,N,[[]]],[5,"wasm_trap_delete",E,E,N,[[]]],[5,"wasm_trap_new",E,E,N,[[]]],[5,"wasm_trap_message",E,E,N,[[]]],[5,"wasm_trap_origin",E,E,N,[[]]],[5,"wasm_trap_trace",E,E,N,[[]]],[5,"wasm_importtype_module",E,E,N,[[]]],[5,"wasm_importtype_name",E,E,N,[[]]],[5,"wasm_importtype_type",E,E,N,[[]]],[5,"wasm_importtype_vec_delete",E,E,N,[[]]],[5,"wasm_exporttype_name",E,E,N,[[]]],[5,"wasm_exporttype_type",E,E,N,[[]]],[5,"wasm_exporttype_vec_delete",E,E,N,[[]]],[5,"wasm_extern_kind",E,E,N,[[],[R[26]]]],[5,"wasm_extern_type",E,E,N,[[]]],[5,"wasm_externtype_as_functype_const",E,E,N,[[]]],[5,"wasm_externtype_as_globaltype_const",E,E,N,[[]]],[5,"wasm_externtype_as_tabletype_const",E,E,N,[[]]],[5,"wasm_externtype_as_memorytype_const",E,E,N,[[]]],[5,"wasm_externtype_delete",E,E,N,[[]]],[5,"wasm_externtype_kind",E,E,N,[[],[R[26]]]],[5,"wasm_func_param_arity",E,E,N,[[],["usize"]]],[5,"wasm_func_result_arity",E,E,N,[[],["usize"]]],[5,"wasm_functype_params",E,E,N,[[]]],[5,"wasm_functype_results",E,E,N,[[]]],[5,"wasm_globaltype_content",E,E,N,[[]]],[5,"wasm_globaltype_mutability",E,E,N,[[],[R[28]]]],[5,"wasm_memorytype_limits",E,E,N,[[]]],[5,"wasm_module_exports",E,E,N,[[]]],[5,"wasm_module_imports",E,E,N,[[]]],[5,"wasm_tabletype_element",E,E,N,[[]]],[5,"wasm_tabletype_limits",E,E,N,[[]]],[5,"wasm_valtype_kind",E,E,N,[[],[R[27]]]],[5,"wasm_extern_as_global",E,E,N,[[]]],[5,"wasm_global_as_extern",E,E,N,[[]]],[5,"wasm_global_delete",E,E,N,[[]]],[5,"wasm_global_copy",E,E,N,[[]]],[5,"wasm_global_same",E,E,N,[[],["bool"]]],[5,"wasm_global_new",E,E,N,[[]]],[5,"wasm_global_get",E,E,N,[[]]],[5,"wasm_global_set",E,E,N,[[]]],[5,"wasm_globaltype_delete",E,E,N,[[]]],[5,"wasm_globaltype_new",E,E,N,[[[R[28]]]]],[5,"wasm_extern_as_memory",E,E,N,[[]]],[5,"wasm_memory_as_extern",E,E,N,[[]]],[5,"wasm_memory_delete",E,E,N,[[]]],[5,"wasm_memory_copy",E,E,N,[[]]],[5,"wasm_memory_same",E,E,N,[[],["bool"]]],[5,"wasm_memory_data",E,E,N,[[]]],[5,"wasm_memory_data_size",E,E,N,[[],["usize"]]],[5,"wasm_memory_size",E,E,N,[[],[R[29]]]],[5,"wasm_memory_grow",E,E,N,[[[R[29]]],["bool"]]],[5,"wasm_memory_new",E,E,N,[[]]],[5,"wasm_memorytype_delete",E,E,N,[[]]],[5,"wasm_memorytype_new",E,E,N,[[]]],[5,"wasm_extern_as_table",E,E,N,[[]]],[5,"wasm_table_as_extern",E,E,N,[[]]],[5,"wasm_func_as_ref",E,E,N,[[]]],[5,"wasm_ref_delete",E,E,N,[[]]],[5,"wasm_table_delete",E,E,N,[[]]],[5,"wasm_table_copy",E,E,N,[[]]],[5,"wasm_table_new",E,E,N,[[]]],[5,"wasm_table_get",E,E,N,[[[R[30]]]]],[5,"wasm_table_set",E,E,N,[[[R[30]]],["bool"]]],[5,"wasm_table_size",E,E,N,[[],[R[30]]]],[5,"wasm_table_grow",E,E,N,[[[R[30]]],["bool"]]],[5,"wasm_table_same",E,E,N,[[],["bool"]]],[5,"wasm_tabletype_delete",E,E,N,[[]]],[5,"wasm_tabletype_new",E,E,N,[[]]],[5,"wasm_instance_set_host_info_with_finalizer",E,E,N,[[[R[5]]]]],[5,"wasm_valtype_vec_copy",E,E,N,[[]]],[6,"float32_t",E,E,N,N],[6,"float64_t",E,E,N,N],[6,R[85],E,E,N,N],[6,"wasm_name_t",E,E,N,N],[6,R[28],E,E,N,N],[6,R[27],E,E,N,N],[6,R[26],E,E,N,N],[6,"wasm_message_t",E,E,N,N],[6,R[31],E,E,N,N],[6,R[32],E,E,N,N],[6,R[30],E,E,N,N],[6,R[29],E,E,N,N],[8,R[97],R[33],"A trait representing a function that can be imported and…",N,N],[10,"call",E,"What is called when the function is invoked in…",39,[[["self"]],[[R[15],[R[4]]],[R[4],["trap"]]]]],[8,R[98],E,E,N,N],[11,R[87],E,E,40,[[["self"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[35],E,E,6,[[[U]],[R[15]]]],[11,R[36],E,E,6,[[],[R[15]]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[39]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[35],E,E,7,[[[U]],[R[15]]]],[11,R[36],E,E,7,[[],[R[15]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[39]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[[U]],[R[15]]]],[11,R[36],E,E,8,[[],[R[15]]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[R[39]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[35],E,E,9,[[[U]],[R[15]]]],[11,R[36],E,E,9,[[],[R[15]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[37],E,E,9,[[["self"]],[R[39]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[35],E,E,10,[[[U]],[R[15]]]],[11,R[36],E,E,10,[[],[R[15]]]],[11,R[34],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[39]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[[U]],[R[15]]]],[11,R[36],E,E,11,[[],[R[15]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[R[39]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[35],E,E,12,[[[U]],[R[15]]]],[11,R[36],E,E,12,[[],[R[15]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[R[39]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[[U]],[R[15]]]],[11,R[36],E,E,13,[[],[R[15]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[R[39]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[35],E,E,14,[[[U]],[R[15]]]],[11,R[36],E,E,14,[[],[R[15]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[39]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[35],E,E,15,[[[U]],[R[15]]]],[11,R[36],E,E,15,[[],[R[15]]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[39]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[152],E,E,16,[[["self"]],["string"]]],[11,R[35],E,E,16,[[[U]],[R[15]]]],[11,R[36],E,E,16,[[],[R[15]]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[39]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[35],E,E,17,[[[U]],[R[15]]]],[11,R[36],E,E,17,[[],[R[15]]]],[11,R[34],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[T]]],[11,R[37],E,E,17,[[["self"]],[R[39]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[35],E,E,18,[[[U]],[R[15]]]],[11,R[36],E,E,18,[[],[R[15]]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[39]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[35],E,E,19,[[[U]],[R[15]]]],[11,R[36],E,E,19,[[],[R[15]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[37],E,E,19,[[["self"]],[R[39]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[35],E,E,20,[[[U]],[R[15]]]],[11,R[36],E,E,20,[[],[R[15]]]],[11,R[34],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[T]]],[11,R[37],E,E,20,[[["self"]],[R[39]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[35],E,E,21,[[[U]],[R[15]]]],[11,R[36],E,E,21,[[],[R[15]]]],[11,R[34],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[T]]],[11,R[37],E,E,21,[[["self"]],[R[39]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[35],E,E,22,[[[U]],[R[15]]]],[11,R[36],E,E,22,[[],[R[15]]]],[11,R[34],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[T]]],[11,R[37],E,E,22,[[["self"]],[R[39]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[35],E,E,23,[[[U]],[R[15]]]],[11,R[36],E,E,23,[[],[R[15]]]],[11,R[34],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[T]]],[11,R[37],E,E,23,[[["self"]],[R[39]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[[U]],[R[15]]]],[11,R[36],E,E,3,[[],[R[15]]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[R[39]]]],[11,R[151],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[35],E,E,4,[[[U]],[R[15]]]],[11,R[36],E,E,4,[[],[R[15]]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[39]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[35],E,E,5,[[[U]],[R[15]]]],[11,R[36],E,E,5,[[],[R[15]]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[R[39]]]],[11,R[40],R[42],E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[35],E,E,24,[[[U]],[R[15]]]],[11,R[36],E,E,24,[[],[R[15]]]],[11,R[34],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[T]]],[11,R[37],E,E,24,[[["self"]],[R[39]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[35],E,E,41,[[[U]],[R[15]]]],[11,R[36],E,E,41,[[],[R[15]]]],[11,R[34],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"]],[T]]],[11,R[37],E,E,41,[[["self"]],[R[39]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[35],E,E,42,[[[U]],[R[15]]]],[11,R[36],E,E,42,[[],[R[15]]]],[11,R[34],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"]],[T]]],[11,R[37],E,E,42,[[["self"]],[R[39]]]],[11,R[40],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[35],E,E,43,[[[U]],[R[15]]]],[11,R[36],E,E,43,[[],[R[15]]]],[11,R[34],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"]],[T]]],[11,R[37],E,E,43,[[["self"]],[R[39]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[35],E,E,25,[[[U]],[R[15]]]],[11,R[36],E,E,25,[[],[R[15]]]],[11,R[34],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[T]]],[11,R[37],E,E,25,[[["self"]],[R[39]]]],[11,R[40],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[35],E,E,44,[[[U]],[R[15]]]],[11,R[36],E,E,44,[[],[R[15]]]],[11,R[34],E,E,44,[[["self"]],[T]]],[11,R[38],E,E,44,[[["self"]],[T]]],[11,R[37],E,E,44,[[["self"]],[R[39]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[35],E,E,26,[[[U]],[R[15]]]],[11,R[36],E,E,26,[[],[R[15]]]],[11,R[34],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"]],[T]]],[11,R[37],E,E,26,[[["self"]],[R[39]]]],[11,R[40],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[35],E,E,45,[[[U]],[R[15]]]],[11,R[36],E,E,45,[[],[R[15]]]],[11,R[34],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"]],[T]]],[11,R[37],E,E,45,[[["self"]],[R[39]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[35],E,E,27,[[[U]],[R[15]]]],[11,R[36],E,E,27,[[],[R[15]]]],[11,R[34],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"]],[T]]],[11,R[37],E,E,27,[[["self"]],[R[39]]]],[11,R[40],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[35],E,E,46,[[[U]],[R[15]]]],[11,R[36],E,E,46,[[],[R[15]]]],[11,R[34],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"]],[T]]],[11,R[37],E,E,46,[[["self"]],[R[39]]]],[11,R[40],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[35],E,E,28,[[[U]],[R[15]]]],[11,R[36],E,E,28,[[],[R[15]]]],[11,R[34],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"]],[T]]],[11,R[37],E,E,28,[[["self"]],[R[39]]]],[11,R[40],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[35],E,E,47,[[[U]],[R[15]]]],[11,R[36],E,E,47,[[],[R[15]]]],[11,R[34],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"]],[T]]],[11,R[37],E,E,47,[[["self"]],[R[39]]]],[11,R[40],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[35],E,E,29,[[[U]],[R[15]]]],[11,R[36],E,E,29,[[],[R[15]]]],[11,R[34],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"]],[T]]],[11,R[37],E,E,29,[[["self"]],[R[39]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[35],E,E,48,[[[U]],[R[15]]]],[11,R[36],E,E,48,[[],[R[15]]]],[11,R[34],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"]],[T]]],[11,R[37],E,E,48,[[["self"]],[R[39]]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[35],E,E,30,[[[U]],[R[15]]]],[11,R[36],E,E,30,[[],[R[15]]]],[11,R[34],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"]],[T]]],[11,R[37],E,E,30,[[["self"]],[R[39]]]],[11,R[40],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[35],E,E,49,[[[U]],[R[15]]]],[11,R[36],E,E,49,[[],[R[15]]]],[11,R[34],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"]],[T]]],[11,R[37],E,E,49,[[["self"]],[R[39]]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[35],E,E,31,[[[U]],[R[15]]]],[11,R[36],E,E,31,[[],[R[15]]]],[11,R[34],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"]],[T]]],[11,R[37],E,E,31,[[["self"]],[R[39]]]],[11,R[40],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[35],E,E,50,[[[U]],[R[15]]]],[11,R[36],E,E,50,[[],[R[15]]]],[11,R[34],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"]],[T]]],[11,R[37],E,E,50,[[["self"]],[R[39]]]],[11,R[40],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[35],E,E,32,[[[U]],[R[15]]]],[11,R[36],E,E,32,[[],[R[15]]]],[11,R[34],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"]],[T]]],[11,R[37],E,E,32,[[["self"]],[R[39]]]],[11,R[40],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[35],E,E,51,[[[U]],[R[15]]]],[11,R[36],E,E,51,[[],[R[15]]]],[11,R[34],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"]],[T]]],[11,R[37],E,E,51,[[["self"]],[R[39]]]],[11,R[40],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[35],E,E,33,[[[U]],[R[15]]]],[11,R[36],E,E,33,[[],[R[15]]]],[11,R[34],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"]],[T]]],[11,R[37],E,E,33,[[["self"]],[R[39]]]],[11,R[40],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[35],E,E,52,[[[U]],[R[15]]]],[11,R[36],E,E,52,[[],[R[15]]]],[11,R[34],E,E,52,[[["self"]],[T]]],[11,R[38],E,E,52,[[["self"]],[T]]],[11,R[37],E,E,52,[[["self"]],[R[39]]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[35],E,E,34,[[[U]],[R[15]]]],[11,R[36],E,E,34,[[],[R[15]]]],[11,R[34],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"]],[T]]],[11,R[37],E,E,34,[[["self"]],[R[39]]]],[11,R[40],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[35],E,E,35,[[[U]],[R[15]]]],[11,R[36],E,E,35,[[],[R[15]]]],[11,R[34],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"]],[T]]],[11,R[37],E,E,35,[[["self"]],[R[39]]]],[11,R[40],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[35],E,E,53,[[[U]],[R[15]]]],[11,R[36],E,E,53,[[],[R[15]]]],[11,R[34],E,E,53,[[["self"]],[T]]],[11,R[38],E,E,53,[[["self"]],[T]]],[11,R[37],E,E,53,[[["self"]],[R[39]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[35],E,E,36,[[[U]],[R[15]]]],[11,R[36],E,E,36,[[],[R[15]]]],[11,R[34],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"]],[T]]],[11,R[37],E,E,36,[[["self"]],[R[39]]]],[11,R[40],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[35],E,E,54,[[[U]],[R[15]]]],[11,R[36],E,E,54,[[],[R[15]]]],[11,R[34],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"]],[T]]],[11,R[37],E,E,54,[[["self"]],[R[39]]]],[11,R[40],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[35],E,E,55,[[[U]],[R[15]]]],[11,R[36],E,E,55,[[],[R[15]]]],[11,R[34],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"]],[T]]],[11,R[37],E,E,55,[[["self"]],[R[39]]]],[11,R[40],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[35],E,E,56,[[[U]],[R[15]]]],[11,R[36],E,E,56,[[],[R[15]]]],[11,R[34],E,E,56,[[["self"]],[T]]],[11,R[38],E,E,56,[[["self"]],[T]]],[11,R[37],E,E,56,[[["self"]],[R[39]]]],[11,R[40],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[35],E,E,57,[[[U]],[R[15]]]],[11,R[36],E,E,57,[[],[R[15]]]],[11,R[34],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"]],[T]]],[11,R[37],E,E,57,[[["self"]],[R[39]]]],[11,R[40],E,E,58,[[["self"]],[T]]],[11,R[41],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[35],E,E,58,[[[U]],[R[15]]]],[11,R[36],E,E,58,[[],[R[15]]]],[11,R[34],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"]],[T]]],[11,R[37],E,E,58,[[["self"]],[R[39]]]],[11,R[40],E,E,59,[[["self"]],[T]]],[11,R[41],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[35],E,E,59,[[[U]],[R[15]]]],[11,R[36],E,E,59,[[],[R[15]]]],[11,R[34],E,E,59,[[["self"]],[T]]],[11,R[38],E,E,59,[[["self"]],[T]]],[11,R[37],E,E,59,[[["self"]],[R[39]]]],[11,R[40],E,E,60,[[["self"]],[T]]],[11,R[41],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[35],E,E,60,[[[U]],[R[15]]]],[11,R[36],E,E,60,[[],[R[15]]]],[11,R[34],E,E,60,[[["self"]],[T]]],[11,R[38],E,E,60,[[["self"]],[T]]],[11,R[37],E,E,60,[[["self"]],[R[39]]]],[11,R[40],E,E,61,[[["self"]],[T]]],[11,R[41],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[35],E,E,61,[[[U]],[R[15]]]],[11,R[36],E,E,61,[[],[R[15]]]],[11,R[34],E,E,61,[[["self"]],[T]]],[11,R[38],E,E,61,[[["self"]],[T]]],[11,R[37],E,E,61,[[["self"]],[R[39]]]],[11,R[40],E,E,62,[[["self"]],[T]]],[11,R[41],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[35],E,E,62,[[[U]],[R[15]]]],[11,R[36],E,E,62,[[],[R[15]]]],[11,R[34],E,E,62,[[["self"]],[T]]],[11,R[38],E,E,62,[[["self"]],[T]]],[11,R[37],E,E,62,[[["self"]],[R[39]]]],[11,R[40],E,E,63,[[["self"]],[T]]],[11,R[41],E,E,63,[[["self"],[T]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[35],E,E,63,[[[U]],[R[15]]]],[11,R[36],E,E,63,[[],[R[15]]]],[11,R[34],E,E,63,[[["self"]],[T]]],[11,R[38],E,E,63,[[["self"]],[T]]],[11,R[37],E,E,63,[[["self"]],[R[39]]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[35],E,E,37,[[[U]],[R[15]]]],[11,R[36],E,E,37,[[],[R[15]]]],[11,R[34],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"]],[T]]],[11,R[37],E,E,37,[[["self"]],[R[39]]]],[11,R[40],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[35],E,E,38,[[[U]],[R[15]]]],[11,R[36],E,E,38,[[],[R[15]]]],[11,R[34],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"]],[T]]],[11,R[37],E,E,38,[[["self"]],[R[39]]]],[11,"call",R[33],E,64,[[["self"]],[[R[15],[R[4]]],[R[4],["trap"]]]]],[11,"drop",R[42],E,24,[[["self"]]]],[11,"drop",E,E,26,[[["self"]]]],[11,"drop",E,E,27,[[["self"]]]],[11,"drop",E,E,28,[[["self"]]]],[11,"drop",E,E,29,[[["self"]]]],[11,"drop",E,E,30,[[["self"]]]],[11,"drop",E,E,31,[[["self"]]]],[11,"drop",E,E,32,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",E,E,35,[[["self"]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"drop",E,E,37,[[["self"]]]],[11,"into",E,E,55,[[],[[R[4],["trap"]],["trap"]]]],[11,R[43],R[33],E,13,[[],["config"]]],[11,R[43],E,E,14,[[],["engine"]]],[11,R[43],R[42],E,34,[[],["self"]]],[11,"clone",R[33],E,0,[[["self"]],["extern"]]],[11,"clone",E,E,10,[[["self"]],[R[12]]]],[11,"clone",E,E,11,[[["self"]],[R[14]]]],[11,"clone",E,E,1,[[["self"]],[R[25]]]],[11,"clone",E,E,12,[[["self"]],[R[4]]]],[11,"clone",E,E,13,[[["self"]],["config"]]],[11,"clone",E,E,2,[[["self"]],[R[19]]]],[11,"clone",E,E,17,[[["self"]],[R[21]]]],[11,"clone",E,E,3,[[["self"]],[R[20]]]],[11,"clone",E,E,4,[[["self"]],[R[22]]]],[11,"clone",E,E,18,[[["self"]],[R[7]]]],[11,"clone",E,E,19,[[["self"]],[R[9]]]],[11,"clone",E,E,20,[[["self"]],[R[10]]]],[11,"clone",E,E,21,[[["self"]],[R[11]]]],[11,"clone",E,E,22,[[["self"]],[R[44]]]],[11,"clone",E,E,23,[[["self"]],[R[45]]]],[11,"clone",E,E,5,[[["self"]],["val"]]],[11,"clone",R[42],E,24,[[["self"]],[R[46]]]],[11,"clone",E,E,41,[[["self"]],[R[47]]]],[11,"clone",E,E,42,[[["self"]],[R[48]]]],[11,"clone",E,E,43,[[["self"]],[R[49]]]],[11,"clone",E,E,25,[[["self"]],[R[50]]]],[11,"clone",E,E,44,[[["self"]],[R[51]]]],[11,"clone",E,E,26,[[["self"]],[R[52]]]],[11,"clone",E,E,45,[[["self"]],[R[53]]]],[11,"clone",E,E,27,[[["self"]],[R[54]]]],[11,"clone",E,E,46,[[["self"]],[R[55]]]],[11,"clone",E,E,28,[[["self"]],[R[56]]]],[11,"clone",E,E,47,[[["self"]],[R[57]]]],[11,"clone",E,E,29,[[["self"]],[R[58]]]],[11,"clone",E,E,48,[[["self"]],[R[59]]]],[11,"clone",E,E,30,[[["self"]],[R[60]]]],[11,"clone",E,E,49,[[["self"]],[R[61]]]],[11,"clone",E,E,31,[[["self"]],[R[62]]]],[11,"clone",E,E,50,[[["self"]],[R[63]]]],[11,"clone",E,E,32,[[["self"]],[R[64]]]],[11,"clone",E,E,51,[[["self"]],[R[65]]]],[11,"clone",E,E,33,[[["self"]],[R[66]]]],[11,"clone",E,E,52,[[["self"]],[R[67]]]],[11,"clone",E,E,34,[[["self"]],[R[68]]]],[11,"clone",E,E,38,[[["self"]],[R[69]]]],[11,"clone",E,E,35,[[["self"]],[R[70]]]],[11,"clone",E,E,53,[[["self"]],[R[71]]]],[11,"clone",E,E,36,[[["self"]],[R[72]]]],[11,"clone",E,E,54,[[["self"]],[R[73]]]],[11,"clone",E,E,55,[[["self"]],[R[74]]]],[11,"clone",E,E,56,[[["self"]],[R[75]]]],[11,"clone",E,E,57,[[["self"]],[R[76]]]],[11,"clone",E,E,58,[[["self"]],[R[77]]]],[11,"clone",E,E,59,[[["self"]],[R[78]]]],[11,"clone",E,E,60,[[["self"]],[R[79]]]],[11,"clone",E,E,61,[[["self"]],[R[80]]]],[11,"clone",E,E,62,[[["self"]],[R[81]]]],[11,"clone",E,E,63,[[["self"]],[R[82]]]],[11,"clone",E,E,37,[[["self"]],[R[83]]]],[11,"eq",R[33],E,3,[[["self"],[R[20]]],["bool"]]],[11,"from",E,E,0,[[[R[4],["func"]],["func"]],["self"]]],[11,"from",E,E,0,[[[R[4],[R[8]]],[R[8]]],["self"]]],[11,"from",E,E,0,[[[R[4],[R[84]]],[R[84]]],["self"]]],[11,"from",E,E,0,[[["table"],[R[4],["table"]]],["self"]]],[11,"from",E,E,5,[[["i32"]],["val"]]],[11,"from",E,E,5,[[["i64"]],["val"]]],[11,"from",E,E,5,[[["f32"]],["val"]]],[11,"from",E,E,5,[[["f64"]],["val"]]],[11,"from",E,E,5,[[[R[25]]],["val"]]],[11,"from",E,E,5,[[[R[4],["func"]],["func"]],["val"]]],[11,"from",E,E,5,[[[R[340]]],["self"]]],[11,"from",R[42],E,24,[[["vec",[R[85]]],[R[85]]],["self"]]],[11,"from",E,E,26,[[["vec"]],["self"]]],[11,"from",E,E,27,[[["vec"]],["self"]]],[11,"from",E,E,28,[[["vec"]],["self"]]],[11,"from",E,E,29,[[["vec"]],["self"]]],[11,"from",E,E,30,[[["vec"]],["self"]]],[11,"from",E,E,31,[[["vec"]],["self"]]],[11,"from",E,E,32,[[["vec"]],["self"]]],[11,"from",E,E,33,[[["vec"]],["self"]]],[11,"from",E,E,35,[[["vec",[R[68]]],[R[68]]],["self"]]],[11,"from",E,E,36,[[["vec"]],["self"]]],[11,"from",E,E,37,[[["vec"]],["self"]]],[11,"fmt",R[33],E,6,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,20,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,21,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,22,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,R[87],E,E,40,[[["self"]]]]],"p":[[4,"Extern"],[4,R[2]],[4,R[88]],[4,"ValType"],[4,R[89]],[4,"Val"],[3,"Func"],[3,R[0]],[3,"Table"],[3,R[1]],[3,R[90]],[3,"Module"],[3,"HostRef"],[3,"Config"],[3,"Engine"],[3,"Store"],[3,"Trap"],[3,"Limits"],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[95]],[3,R[96]],[3,R[46]],[3,R[50]],[3,R[52]],[3,R[54]],[3,R[56]],[3,R[58]],[3,R[60]],[3,R[62]],[3,R[64]],[3,R[66]],[3,R[68]],[3,R[70]],[3,R[72]],[3,R[83]],[19,R[69]],[8,R[97]],[8,R[98]],[3,R[47]],[3,R[48]],[3,R[49]],[3,R[51]],[3,R[53]],[3,R[55]],[3,R[57]],[3,R[59]],[3,R[61]],[3,R[63]],[3,R[65]],[3,R[67]],[3,R[71]],[3,R[73]],[3,R[74]],[3,R[75]],[3,R[76]],[3,R[77]],[3,R[78]],[3,R[79]],[3,R[80]],[3,R[81]],[3,R[82]],[6,R[31]]]};
searchIndex["wasmtime_cli"]={"doc":E,"i":[[5,"pick_compilation_strategy","wasmtime_cli",E,N,[[["bool"]],[R[99]]]],[5,"init_file_per_thread_logger",E,E,N,[[["str"]]]]],"p":[]};
searchIndex["wasmtime_debug"]={"doc":"Debug utils for WebAssembly using Cranelift.","i":[[3,R[106],R[100],E,N,N],[12,"dwarf",E,E,0,N],[12,"name_section",E,E,0,N],[12,"wasm_file",E,E,0,N],[3,R[107],E,E,N,N],[12,"path",E,E,1,N],[12,"code_section_offset",E,E,1,N],[12,"funcs",E,E,1,N],[4,R[108],E,E,N,N],[13,"PhysicalAddress",E,E,2,N],[13,"Reloc",E,E,2,N],[12,"name","wasmtime_debug::ResolvedSymbol",E,2,N],[12,"addend",E,E,2,N],[5,"read_debuginfo",R[100],E,N,[[],[R[101]]]],[5,"transform_dwarf",E,E,N,[[[R[101]],[R[102]],[R[103]],[R[104]],[R[105]]],[[R[15],["dwarf","error"]],["dwarf"],["error"]]]],[5,"emit_dwarf",E,E,N,[[[R[401]],["dwarf"],["symbolresolver"]],[R[15]]]],[5,"emit_debugsections",E,E,N,[[[R[101]],[R[401]],[R[102]],[R[103]],[R[104]],[R[105]]],[[R[15],["error"]],["error"]]]],[5,"emit_debugsections_image",E,E,N,[[[R[101]],[R[102]],["triple"],[R[103]],[R[104]],[R[105]]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[8,R[109],E,E,N,N],[10,"resolve_symbol",E,E,3,[[["self"],["i64"],["usize"]],["resolvedsymbol"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,"fmt",E,E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[86]]],[R[15]]]]],"p":[[3,R[106]],[3,R[107]],[4,R[108]],[8,R[109]]]};
searchIndex["wasmtime_environ"]={"doc":"Standalone environment for WebAssembly using Cranelift.…","i":[[3,R[231],R[113],"Function and its instructions addresses mappings.",N,N],[12,"instructions",E,"Instructions maps. The array is sorted by the…",0,N],[12,"start_srcloc",E,"Function start source location (normally declaration).",0,N],[12,"end_srcloc",E,"Function end source location.",0,N],[12,"body_offset",E,"Generated function body offset if applicable, otherwise 0.",0,N],[12,"body_len",E,"Generated function body length.",0,N],[3,R[232],E,"Single source location to generated address mapping.",N,N],[12,"srcloc",E,"Original source location.",1,N],[12,R[110],E,"Generated instructions offset.",1,N],[12,"code_len",E,"Generated instructions length.",1,N],[3,R[233],E,"Module `vmctx` related info.",N,N],[12,"memory_offset",E,"The memory definition offset in the VMContext structure.",2,N],[12,R[316],E,"The functions stack slots.",2,N],[3,R[249],E,"The result of compiling a WebAssembly module's functions.",N,N],[3,R[234],E,"Compiled function: machine code body, jump table offsets,…",N,N],[12,"body",E,"The function body.",3,N],[12,R[318],E,"The jump tables offsets (in the body).",3,N],[12,"unwind_info",E,"The unwind information.",3,N],[3,R[235],E,"A record of a relocation to perform.",N,N],[12,"reloc",E,"The relocation code.",4,N],[12,"reloc_target",E,"Relocation target.",4,N],[12,"offset",E,"The offset where to apply the relocation.",4,N],[12,"addend",E,"The addend to add to the relocation value.",4,N],[3,R[236],E,"Information about trap.",N,N],[12,R[110],E,"The offset of the trapping instruction in native code. It…",5,N],[12,"source_loc",E,"Location of trapping instruction in WebAssembly binary…",5,N],[12,"trap_code",E,"Code of the trap.",5,N],[3,R[250],E,"An index type for builtin functions.",N,N],[3,R[237],E,"A WebAssembly linear memory description along with our…",N,N],[12,R[84],E,"The WebAssembly linear memory description.",6,N],[12,"style",E,R[111],6,N],[12,"offset_guard_size",E,"Our chosen offset-guard size.",6,N],[3,"Module",E,"A translated WebAssembly module, excluding the function…",N,N],[12,R[292],E,"Unprocessed signatures exactly as provided by…",7,N],[12,"imported_funcs",E,"Names of imported functions.",7,N],[12,"imported_tables",E,"Names of imported tables.",7,N],[12,"imported_memories",E,"Names of imported memories.",7,N],[12,"imported_globals",E,"Names of imported globals.",7,N],[12,R[402],E,"Types of functions, imported and local.",7,N],[12,"table_plans",E,"WebAssembly tables.",7,N],[12,"memory_plans",E,"WebAssembly linear memory plans.",7,N],[12,"globals",E,"WebAssembly global variables.",7,N],[12,"exports",E,"Exported entities.",7,N],[12,"start_func",E,"The module \"start\" function, if present.",7,N],[12,"table_elements",E,"WebAssembly table initializers.",7,N],[3,R[238],E,"A WebAssembly table initializer.",N,N],[12,R[123],E,"The index of a table to initialize.",8,N],[12,"base",E,"Optionally, a global variable giving a base index.",8,N],[12,"offset",E,"The offset to add to the base.",8,N],[12,"elements",E,"The values to write into the table elements.",8,N],[3,R[239],E,"A WebAssembly table description along with our chosen…",N,N],[12,"table",E,"The WebAssembly table description.",9,N],[12,"style",E,R[111],9,N],[3,R[240],E,"A data initializer for linear memory.",N,N],[12,"location",E,"The location where the initialization is to be performed.",10,N],[12,"data",E,"The initialization data.",10,N],[3,R[241],E,"A memory index and offset within that memory where a data…",N,N],[12,R[126],E,"The index of the memory to initialize.",11,N],[12,"base",E,"Optionally a globalvar base to initialize at.",11,N],[12,"offset",E,"A constant offset to initialize at.",11,N],[3,R[242],E,"Contains function data: byte code and its offset in the…",N,N],[12,"data",E,"Body byte code.",12,N],[12,"module_offset",E,"Body offset in the module file.",12,N],[3,R[251],E,"Object containing the standalone environment information.",N,N],[3,R[243],E,"The result of translating via `ModuleEnvironment`.…",N,N],[12,R[186],E,"Compilation setting flags.",13,N],[12,R[14],E,"Module information.",13,N],[12,"function_body_inputs",E,"References to the function bodies.",13,N],[12,"data_initializers",E,"References to the data initializers.",13,N],[12,R[120],E,"Tunable parameters.",13,N],[12,"module_translation",E,"The decoded Wasm types for the module.",13,N],[3,"Tunables",E,"Tunable parameters for WebAssembly compilation.",N,N],[12,"static_memory_bound",E,"For static heaps, the size of the heap protected by bounds…",14,N],[12,"static_memory_offset_guard_size",E,"The size of the offset guard for static heaps.",14,N],[12,"dynamic_memory_offset_guard_size",E,"The size of the offset guard for dynamic heaps.",14,N],[3,R[252],E,"Target specific type for shared signature index.",N,N],[3,R[244],E,"This class computes offsets to fields within `VMContext`…",N,N],[12,"pointer_size",E,"The size in bytes of a pointer on the target.",15,N],[12,"num_signature_ids",E,"The number of signature declarations in the module.",15,N],[12,"num_imported_functions",E,"The number of imported functions in the module.",15,N],[12,"num_imported_tables",E,"The number of imported tables in the module.",15,N],[12,"num_imported_memories",E,"The number of imported memories in the module.",15,N],[12,"num_imported_globals",E,"The number of imported globals in the module.",15,N],[12,"num_defined_tables",E,"The number of defined tables in the module.",15,N],[12,"num_defined_memories",E,"The number of defined memories in the module.",15,N],[12,"num_defined_globals",E,"The number of defined globals in the module.",15,N],[4,R[245],E,"An error while compiling WebAssembly to machine code.",N,N],[13,"Wasm",E,R[284],16,N],[13,"Codegen",E,R[112],16,N],[13,"DebugInfoNotSupported",E,R[112],16,N],[4,R[246],E,"Destination function. Can be either user function or some…",N,N],[13,"UserFunc",E,"The user function index.",17,N],[13,"LibCall",E,"A compiler-generated libcall.",17,N],[13,"Memory32Grow",E,"Function for growing a locally-defined 32-bit memory by…",17,N],[13,"ImportedMemory32Grow",E,"Function for growing an imported 32-bit memory by the…",17,N],[13,"Memory32Size",E,"Function for query current size of a locally-defined…",17,N],[13,"ImportedMemory32Size",E,"Function for query current size of an imported 32-bit…",17,N],[13,"JumpTable",E,"Jump table index.",17,N],[4,"Export",E,"An entity to export.",N,N],[13,R[390],E,"Function export.",18,N],[13,"Table",E,"Table export.",18,N],[13,R[1],E,"Memory export.",18,N],[13,R[0],E,"Global export.",18,N],[4,R[247],E,"Implemenation styles for WebAssembly linear memory.",N,N],[13,"Dynamic",E,"The actual memory can be resized and moved.",19,N],[13,"Static",E,"Addresss space is allocated up front.",19,N],[12,"bound","wasmtime_environ::MemoryStyle","The number of mapped and unmapped pages.",19,N],[4,R[248],R[113],"Implemenation styles for WebAssembly tables.",N,N],[13,"CallerChecksSignature",E,"Signatures are stored in the table and checked in the…",20,N],[5,"cache_create_new_config",E,"Creates a new configuration file at specified path, or…",N,[[["asref",["path"]],[R[5]],["path"],["debug"]],[["pathbuf"],["string"],[R[15],["pathbuf","string"]]]]],[5,"cache_init",E,"Initializes the cache system. Should be called exactly…",N,[[["debug"],[R[5],["str"]],["str"],["asref",["path"]],[R[5]],["path"],["bool"]],["vec"]]],[5,"translate_signature",E,"Add environment-specific function parameters.",N,[[["type"],[R[114]]],[R[114]]]],[11,"new",E,"Creates a compilation artifact from a contiguous function…",21,[[[R[115]],[R[117],[R[116],R[115]]],[R[116]]],["self"]]],[11,"from_buffer",E,"Allocates the compilation result with the given function…",21,[[["vec",["u8"]],["u8"]],["self"]]],[11,"get",E,"Gets the bytes of a single function",21,[[["self"],[R[116]]],[R[115]]]],[11,"len",E,"Gets the number of functions defined.",21,[[["self"]],["usize"]]],[11,"get_jt_offsets",E,"Gets functions jump table offsets.",21,[[["self"]],[[R[117],[R[116],R[118]]],[R[118]],[R[116]]]]],[11,"get_memory32_grow_index",E,"Returns an index for wasm's `memory.grow` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_grow_index",E,"Returns an index for wasm's imported `memory.grow` builtin…",22,[[],["self"]]],[11,"get_memory32_size_index",E,"Returns an index for wasm's `memory.size` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_size_index",E,"Returns an index for wasm's imported `memory.size` builtin…",22,[[],["self"]]],[11,"builtin_functions_total_number",E,"Returns the total number of builtin functions.",22,[[],["u32"]]],[11,"index",E,"Return the index as an u32 number.",22,[[["self"]],["u32"]]],[11,R[119],E,"Decide on an implementation style for the given `Memory`.",19,[[[R[84]],[R[120]]]]],[11,R[119],E,"Draw up a plan for implementing a `Memory`.",6,[[[R[84]],[R[120]]],["self"]]],[11,R[121],E,"Decide on an implementation style for the given `Table`.",20,[[["table"],[R[120]]],["self"]]],[11,R[121],E,"Draw up a plan for implementing a `Table`.",9,[[["table"],[R[120]]],["self"]]],[11,"new",E,"Allocates the module data structures.",7,[[],["self"]]],[11,"func_index",E,"Convert a `DefinedFuncIndex` into a `FuncIndex`.",7,[[["self"],[R[116]]],[R[122]]]],[11,"defined_func_index",E,"Convert a `FuncIndex` into a `DefinedFuncIndex`. Returns…",7,[[["self"],[R[122]]],[[R[5],[R[116]]],[R[116]]]]],[11,"is_imported_function",E,"Test whether the given function index is for an imported…",7,[[["self"],[R[122]]],["bool"]]],[11,R[123],E,"Convert a `DefinedTableIndex` into a `TableIndex`.",7,[[["self"],[R[125]]],[R[124]]]],[11,"defined_table_index",E,"Convert a `TableIndex` into a `DefinedTableIndex`. Returns…",7,[[["self"],[R[124]]],[[R[125]],[R[5],[R[125]]]]]],[11,"is_imported_table",E,"Test whether the given table index is for an imported table.",7,[[["self"],[R[124]]],["bool"]]],[11,R[126],E,"Convert a `DefinedMemoryIndex` into a `MemoryIndex`.",7,[[["self"],[R[128]]],[R[127]]]],[11,"defined_memory_index",E,"Convert a `MemoryIndex` into a `DefinedMemoryIndex`.…",7,[[["self"],[R[127]]],[[R[5],[R[128]]],[R[128]]]]],[11,"is_imported_memory",E,"Test whether the given memory index is for an imported…",7,[[["self"],[R[127]]],["bool"]]],[11,"global_index",E,"Convert a `DefinedGlobalIndex` into a `GlobalIndex`.",7,[[["self"],[R[130]]],[R[129]]]],[11,"defined_global_index",E,"Convert a `GlobalIndex` into a `DefinedGlobalIndex`.…",7,[[["self"],[R[129]]],[[R[5],[R[130]]],[R[130]]]]],[11,"is_imported_global",E,"Test whether the given global index is for an imported…",7,[[["self"],[R[129]]],["bool"]]],[11,"hash_for_cache",E,"Computes hash of the module for the purpose of caching.",7,[[["self"],[R[117]],["h"]]]],[11,"func_env",E,"Return a new `FuncEnvironment` for translating a function.",13,[[["self"]],["funcenvironment"]]],[11,"new",E,"Allocates the enironment data structures.",23,[[[R[102]],[R[120]]],["self"]]],[11,"translate",E,"Translate a wasm module using this environment. This…",23,[[],[[R[187],[R[131]]],[R[131]]]]],[11,"new",E,"Return a new `VMOffsets` instance, for a given pointer size.",15,[[[R[14]],["u8"]],["self"]]],[11,"vmfunction_import_body",E,"The offset of the `body` field.",15,[[["self"]],["u8"]]],[11,"vmfunction_import_vmctx",E,R[132],15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_import",E,"Return the size of `VMFunctionImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_body_ptr",E,R[133],15,[[["self"]],["u8"]]],[11,"vmtable_import_from",E,R[134],15,[[["self"]],["u8"]]],[11,"vmtable_import_vmctx",E,R[132],15,[[["self"]],["u8"]]],[11,"size_of_vmtable_import",E,"Return the size of `VMTableImport`.",15,[[["self"]],["u8"]]],[11,"vmtable_definition_base",E,R[135],15,[[["self"]],["u8"]]],[11,"vmtable_definition_current_elements",E,"The offset of the `current_elements` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition_current_elements",E,R[133],15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition",E,"Return the size of `VMTableDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmtable_definition_current_elements",E,"The type of the `current_elements` field.",15,[[["self"]],["type"]]],[11,"vmmemory_import_from",E,R[134],15,[[["self"]],["u8"]]],[11,"vmmemory_import_vmctx",E,R[132],15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_import",E,"Return the size of `VMMemoryImport`.",15,[[["self"]],["u8"]]],[11,"vmmemory_definition_base",E,R[135],15,[[["self"]],["u8"]]],[11,"vmmemory_definition_current_length",E,"The offset of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition_current_length",E,"The size of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition",E,"Return the size of `VMMemoryDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmmemory_definition_current_length",E,"The type of the `current_length` field.",15,[[["self"]],["type"]]],[11,"vmglobal_import_from",E,R[134],15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_import",E,"Return the size of `VMGlobalImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_definition",E,"Return the size of `VMGlobalDefinition`; this is the size…",15,[[["self"]],["u8"]]],[11,"size_of_vmshared_signature_index",E,"Return the size of `VMSharedSignatureIndex`.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_func_ptr",E,"The offset of the `func_ptr` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_type_index",E,"The offset of the `type_index` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_vmctx",E,R[132],15,[[["self"]],["u8"]]],[11,"size_of_vmcaller_checked_anyfunc",E,"Return the size of `VMCallerCheckedAnyfunc`.",15,[[["self"]],["u8"]]],[11,"vmctx_signature_ids_begin",E,"The offset of the `signature_ids` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_functions_begin",E,R[136],15,[[["self"]],["u32"]]],[11,"vmctx_imported_tables_begin",E,R[136],15,[[["self"]],["u32"]]],[11,"vmctx_imported_memories_begin",E,R[137],15,[[["self"]],["u32"]]],[11,"vmctx_imported_globals_begin",E,R[138],15,[[["self"]],["u32"]]],[11,"vmctx_tables_begin",E,R[136],15,[[["self"]],["u32"]]],[11,"vmctx_memories_begin",E,R[137],15,[[["self"]],["u32"]]],[11,"vmctx_globals_begin",E,R[138],15,[[["self"]],["u32"]]],[11,"vmctx_builtin_functions_begin",E,"The offset of the builtin functions array.",15,[[["self"]],["u32"]]],[11,"size_of_vmctx",E,"Return the size of the `VMContext` allocation.",15,[[["self"]],["u32"]]],[11,"vmctx_vmshared_signature_id",E,"Return the offset to `VMSharedSignatureId` index `index`.",15,[[["self"],[R[172]]],["u32"]]],[11,"vmctx_vmfunction_import",E,"Return the offset to `VMFunctionImport` index `index`.",15,[[["self"],[R[122]]],["u32"]]],[11,"vmctx_vmtable_import",E,"Return the offset to `VMTableImport` index `index`.",15,[[["self"],[R[124]]],["u32"]]],[11,"vmctx_vmmemory_import",E,"Return the offset to `VMMemoryImport` index `index`.",15,[[["self"],[R[127]]],["u32"]]],[11,"vmctx_vmglobal_import",E,"Return the offset to `VMGlobalImport` index `index`.",15,[[["self"],[R[129]]],["u32"]]],[11,"vmctx_vmtable_definition",E,"Return the offset to `VMTableDefinition` index `index`.",15,[[["self"],[R[125]]],["u32"]]],[11,"vmctx_vmmemory_definition",E,"Return the offset to `VMMemoryDefinition` index `index`.",15,[[["self"],[R[128]]],["u32"]]],[11,"vmctx_vmglobal_definition",E,"Return the offset to the `VMGlobalDefinition` index `index`.",15,[[["self"],[R[130]]],["u32"]]],[11,"vmctx_vmfunction_import_body",E,"Return the offset to the `body` field in `*const…",15,[[["self"],[R[122]]],["u32"]]],[11,"vmctx_vmfunction_import_vmctx",E,"Return the offset to the `vmctx` field in `*const…",15,[[["self"],[R[122]]],["u32"]]],[11,"vmctx_vmtable_import_from",E,"Return the offset to the `from` field in `VMTableImport`…",15,[[["self"],[R[124]]],["u32"]]],[11,"vmctx_vmtable_definition_base",E,R[139],15,[[["self"],[R[125]]],["u32"]]],[11,"vmctx_vmtable_definition_current_elements",E,"Return the offset to the `current_elements` field in…",15,[[["self"],[R[125]]],["u32"]]],[11,"vmctx_vmmemory_import_from",E,"Return the offset to the `from` field in `VMMemoryImport`…",15,[[["self"],[R[127]]],["u32"]]],[11,"vmctx_vmmemory_import_vmctx",E,"Return the offset to the `vmctx` field in `VMMemoryImport`…",15,[[["self"],[R[127]]],["u32"]]],[11,"vmctx_vmmemory_definition_base",E,R[139],15,[[["self"],[R[128]]],["u32"]]],[11,"vmctx_vmmemory_definition_current_length",E,"Return the offset to the `current_length` field in…",15,[[["self"],[R[128]]],["u32"]]],[11,"vmctx_vmglobal_import_from",E,"Return the offset to the `from` field in `VMGlobalImport`…",15,[[["self"],[R[129]]],["u32"]]],[11,"vmctx_builtin_function",E,"Return the offset to builtin function in…",15,[[["self"],["builtinfunctionindex"]],["u32"]]],[11,"new",E,"Constructs `TargetSharedSignatureIndex`.",24,[[["u32"]],["self"]]],[11,"index",E,"Returns index value.",24,[[],["u32"]]],[0,"cranelift",E,"Support for compiling with Cranelift.",N,N],[3,R[253],R[157],"Implementation of a relocation sink that just saves all…",N,N],[12,"func_relocs",E,"Relocations recorded for the function.",25,N],[3,R[276],E,"A compiler that compiles a WebAssembly module with…",N,N],[11,"new",E,"Return a new `RelocSink` instance.",25,[[[R[122]]],["self"]]],[0,"ir",R[113],E,N,N],[0,"types",R[140],"Common types for the Cranelift code generator.",N,N],[3,"Type","wasmtime_environ::ir::types",R[141],N,N],[17,"INVALID",E,"Not a valid type. Can't be loaded or stored. Can't be part…",N,N],[17,"IFLAGS",E,"CPU flags representing the result of an integer…",N,N],[17,"FFLAGS",E,"CPU flags representing the result of a floating point…",N,N],[17,"B1",E,"A boolean type with 1 bits.",N,N],[17,"B8",E,"A boolean type with 8 bits.",N,N],[17,"B16",E,"A boolean type with 16 bits.",N,N],[17,"B32",E,"A boolean type with 32 bits.",N,N],[17,"B64",E,"A boolean type with 64 bits.",N,N],[17,"B128",E,"A boolean type with 128 bits.",N,N],[17,"I8",E,"An integer type with 8 bits. WARNING: arithmetic on 8bit…",N,N],[17,"I16",E,"An integer type with 16 bits. WARNING: arithmetic on 16bit…",N,N],[17,"I32",E,"An integer type with 32 bits.",N,N],[17,"I64",E,"An integer type with 64 bits.",N,N],[17,"I128",E,"An integer type with 128 bits.",N,N],[17,"F32",E,"A 32-bit floating point type represented in the IEEE…",N,N],[17,"F64",E,"A 64-bit floating point type represented in the IEEE…",N,N],[17,"R32",E,"An opaque reference type with 32 bits.",N,N],[17,"R64",E,"An opaque reference type with 64 bits.",N,N],[17,"B8X8",E,"A SIMD vector with 8 lanes containing a `b8` each.",N,N],[17,"B16X4",E,"A SIMD vector with 4 lanes containing a `b16` each.",N,N],[17,"B32X2",E,"A SIMD vector with 2 lanes containing a `b32` each.",N,N],[17,"I8X8",E,"A SIMD vector with 8 lanes containing a `i8` each.",N,N],[17,"I16X4",E,"A SIMD vector with 4 lanes containing a `i16` each.",N,N],[17,"I32X2",E,"A SIMD vector with 2 lanes containing a `i32` each.",N,N],[17,"F32X2",E,"A SIMD vector with 2 lanes containing a `f32` each.",N,N],[17,"B8X16",E,"A SIMD vector with 16 lanes containing a `b8` each.",N,N],[17,"B16X8",E,"A SIMD vector with 8 lanes containing a `b16` each.",N,N],[17,"B32X4",E,"A SIMD vector with 4 lanes containing a `b32` each.",N,N],[17,"B64X2",E,"A SIMD vector with 2 lanes containing a `b64` each.",N,N],[17,"I8X16",E,"A SIMD vector with 16 lanes containing a `i8` each.",N,N],[17,"I16X8",E,"A SIMD vector with 8 lanes containing a `i16` each.",N,N],[17,"I32X4",E,"A SIMD vector with 4 lanes containing a `i32` each.",N,N],[17,"I64X2",E,"A SIMD vector with 2 lanes containing a `i64` each.",N,N],[17,"F32X4",E,"A SIMD vector with 4 lanes containing a `f32` each.",N,N],[17,"F64X2",E,"A SIMD vector with 2 lanes containing a `f64` each.",N,N],[17,"B8X32",E,"A SIMD vector with 32 lanes containing a `b8` each.",N,N],[17,"B16X16",E,"A SIMD vector with 16 lanes containing a `b16` each.",N,N],[17,"B32X8",E,"A SIMD vector with 8 lanes containing a `b32` each.",N,N],[17,"B64X4",E,"A SIMD vector with 4 lanes containing a `b64` each.",N,N],[17,"B128X2",E,"A SIMD vector with 2 lanes containing a `b128` each.",N,N],[17,"I8X32",E,"A SIMD vector with 32 lanes containing a `i8` each.",N,N],[17,"I16X16",E,"A SIMD vector with 16 lanes containing a `i16` each.",N,N],[17,"I32X8",E,"A SIMD vector with 8 lanes containing a `i32` each.",N,N],[17,"I64X4",E,"A SIMD vector with 4 lanes containing a `i64` each.",N,N],[17,"I128X2",E,"A SIMD vector with 2 lanes containing a `i128` each.",N,N],[17,"F32X8",E,"A SIMD vector with 8 lanes containing a `f32` each.",N,N],[17,"F64X4",E,"A SIMD vector with 4 lanes containing a `f64` each.",N,N],[17,"B8X64",E,"A SIMD vector with 64 lanes containing a `b8` each.",N,N],[17,"B16X32",E,"A SIMD vector with 32 lanes containing a `b16` each.",N,N],[17,"B32X16",E,"A SIMD vector with 16 lanes containing a `b32` each.",N,N],[17,"B64X8",E,"A SIMD vector with 8 lanes containing a `b64` each.",N,N],[17,"B128X4",E,"A SIMD vector with 4 lanes containing a `b128` each.",N,N],[17,"I8X64",E,"A SIMD vector with 64 lanes containing a `i8` each.",N,N],[17,"I16X32",E,"A SIMD vector with 32 lanes containing a `i16` each.",N,N],[17,"I32X16",E,"A SIMD vector with 16 lanes containing a `i32` each.",N,N],[17,"I64X8",E,"A SIMD vector with 8 lanes containing a `i64` each.",N,N],[17,"I128X4",E,"A SIMD vector with 4 lanes containing a `i128` each.",N,N],[17,"F32X16",E,"A SIMD vector with 16 lanes containing a `f32` each.",N,N],[17,"F64X8",E,"A SIMD vector with 8 lanes containing a `f64` each.",N,N],[3,"AbiParam",R[140],"Function parameter or return value descriptor.",N,N],[12,R[287],E,"Type of the argument value.",26,N],[12,"purpose",E,"Special purpose of argument, or `Normal`.",26,N],[12,"extension",E,"Method for extending argument to a full register.",26,N],[12,"location",E,"ABI-specific location of this argument, or `Unassigned`…",26,N],[4,R[254],E,"The special purpose of a function argument.",N,N],[13,"Normal",E,"A normal user program value passed to or from a function.",27,N],[13,"StructReturn",E,"Struct return pointer.",27,N],[13,"Link",E,"The link register.",27,N],[13,"FramePointer",E,"The frame pointer.",27,N],[13,"CalleeSaved",E,"A callee-saved register.",27,N],[13,R[404],E,"A VM context pointer.",27,N],[13,"SignatureId",E,"A signature identifier.",27,N],[13,"StackLimit",E,"A stack limit pointer.",27,N],[3,R[255],E,"Function signature.",N,N],[12,"params",E,"The arguments passed to the function.",28,N],[12,"returns",E,"Values returned from the function.",28,N],[12,R[311],E,"Calling convention.",28,N],[3,R[263],E,"A source location.",N,N],[3,R[256],E,"Stack frame manager.",N,N],[12,"frame_size",E,"The total size of the stack frame.",29,N],[4,"TrapCode",E,"A trap code describing the reason for a trap.",N,N],[13,"StackOverflow",E,"The current stack space was exhausted.",30,N],[13,"HeapOutOfBounds",E,"A `heap_addr` instruction detected an out-of-bounds error.",30,N],[13,"TableOutOfBounds",E,"A `table_addr` instruction detected an out-of-bounds error.",30,N],[13,"OutOfBounds",E,"Other bounds checking error.",30,N],[13,"IndirectCallToNull",E,"Indirect call to a null table entry.",30,N],[13,"BadSignature",E,"Signature mismatch on indirect call.",30,N],[13,"IntegerOverflow",E,"An integer arithmetic operation caused an overflow.",30,N],[13,"IntegerDivisionByZero",E,"An integer division by zero.",30,N],[13,"BadConversionToInteger",E,"Failed float-to-int conversion.",30,N],[13,"UnreachableCodeReached",E,"Code that was supposed to have been unreachable was reached.",30,N],[13,"Interrupt",E,"Execution has potentially run too long and may be…",30,N],[13,"User",E,"A user-defined trap code.",30,N],[3,"Type",E,R[141],N,N],[3,R[264],E,"Marked with a label value.",N,N],[4,"ValueLoc",E,"Value location.",N,N],[13,"Unassigned",E,"This value has not been assigned to a location yet.",31,N],[13,"Reg",E,"Value is assigned to a register.",31,N],[13,"Stack",E,"Value is assigned to a stack slot.",31,N],[6,R[148],E,"Resulting map of Value labels and their ranges/locations.",N,N],[0,"settings",R[113],E,N,N],[5,R[310],R[153],"Create a `settings::Builder` for the shared settings group.",N,[[],[R[310]]]],[8,R[257],E,"A string-based configurator for settings groups.",N,N],[10,"set",E,"Set the string value of any setting by name.",32,[[["self"],["str"]],[[R[142]],[R[15],[R[142]]]]]],[10,"enable",E,"Enable a boolean setting or apply a preset.",32,[[["self"],["str"]],[[R[142]],[R[15],[R[142]]]]]],[3,"Flags",E,"Flags group `shared`.",N,N],[0,"isa",R[113],E,N,N],[4,"CallConv",R[154],"Calling convention identifiers.",N,N],[13,"Fast",E,"Best performance, not ABI-stable",33,N],[13,"Cold",E,"Smallest caller code size, not ABI-stable",33,N],[13,"SystemV",E,"System V-style convention used on many platforms",33,N],[13,"WindowsFastcall",E,"Windows \"fastcall\" convention, also used for x64 and ARM",33,N],[13,"BaldrdashSystemV",E,"SpiderMonkey WebAssembly convention on systems using…",33,N],[13,"BaldrdashWindows",E,"SpiderMonkey WebAssembly convention on Windows",33,N],[13,"Probestack",E,"Specialized convention for the probestack function",33,N],[6,"RegUnit",E,"Register units are the smallest units of register…",N,N],[3,R[258],E,"This struct provides information that a frontend may need…",N,N],[12,R[143],E,"The default calling convention of the target.",34,N],[12,R[144],E,"The pointer width of the target.",34,N],[8,R[259],E,"Methods that are specialized to a target ISA. Implies a…",N,N],[10,"name",E,"Get the name of this ISA.",35,[[["self"]],["str"]]],[10,"triple",E,"Get the target triple that was used to make this trait…",35,[[["self"]],["triple"]]],[10,"flags",E,"Get the ISA-independent flags that were used to make this…",35,[[["self"]],["flags"]]],[11,R[143],E,R[196],35,[[["self"]],[R[159]]]],[11,R[193],E,R[197],35,[[["self"]],["type"]]],[11,R[144],E,R[198],35,[[["self"]],[R[199]]]],[11,R[194],E,R[200],35,[[["self"]],["u8"]]],[11,R[195],E,R[201],35,[[["self"]],["u8"]]],[11,R[202],E,R[203],35,[[["self"]],[R[102]]]],[11,R[204],E,R[205],35,[[["self"]],["bool"]]],[11,R[206],E,R[207],35,[[["self"]],["bool"]]],[10,"register_info",E,"Get a data structure describing the registers in this ISA.",35,[[["self"]],["reginfo"]]],[10,"legal_encodings",E,"Returns an iterator over legal encodings for the…",35,[[[R[146]],[R[145]],["type"],["self"]],[R[317]]]],[11,"encode",E,R[208],35,[[["self"],["type"],[R[146]],[R[145]]],[[R[209]],[R[15],[R[209]]]]]],[10,"encoding_info",E,"Get a data structure describing the instruction encodings…",35,[[["self"]],["encinfo"]]],[10,"legalize_signature",E,"Legalize a function signature.",35,[[["self"],["cow"],["bool"]]]],[10,"regclass_for_abi_type",E,"Get the register class that should be used to represent an…",35,[[["self"],["type"]],["regclassdata"]]],[10,"allocatable_registers",E,"Get the set of allocatable registers that can be used when…",35,[[["self"],[R[146]]],["registerset"]]],[11,R[210],E,R[211],35,[[["self"],[R[146]]],[[R[15],[R[147]]],[R[147]]]]],[10,"emit_function_to_memory",E,"Emit a whole function into memory.",35,[[["self"],[R[146]],["memorycodesink"]]]],[10,"unsigned_add_overflow_condition",E,"IntCC condition for Unsigned Addition Overflow (Carry).",35,[[["self"]],["intcc"]]],[10,"unsigned_sub_overflow_condition",E,"IntCC condition for Unsigned Subtraction Overflow…",35,[[["self"]],["intcc"]]],[11,R[212],E,R[213],35,[[["self"],[R[146]],["vec"]]]],[0,"entity",R[113],E,N,N],[3,R[265],R[155],"A slice mapping `K -> V` allocating dense entity references.",N,N],[8,R[260],E,"A type wrapping a small integer index should implement…",N,N],[10,"new",E,"Create a new entity reference from a small integer. This…",36,[[["usize"]],["self"]]],[10,"index",E,"Get the index that was used to create this entity reference.",36,[[],["usize"]]],[3,R[266],E,"A primary mapping `K -> V` allocating dense entity…",N,N],[0,"wasm",R[113],E,N,N],[5,"get_vmctx_value_label",R[156],"Special VMContext value label. It is tracked as…",N,[[],[R[162]]]],[3,R[267],E,"Index type of a defined function inside the WebAssembly…",N,N],[3,R[268],E,"Index type of a defined global inside the WebAssembly…",N,N],[3,R[269],E,"Index type of a defined memory inside the WebAssembly…",N,N],[3,R[270],E,"Index type of a defined table inside the WebAssembly module.",N,N],[3,R[271],E,"Index type of a function (imported or defined) inside the…",N,N],[3,R[0],E,"WebAssembly global.",N,N],[12,"ty",E,"The type of the value stored in the global.",37,N],[12,R[19],E,"A flag indicating whether the value may change at runtime.",37,N],[12,"initializer",E,"The source of the initial value.",37,N],[3,R[272],E,"Index type of a global variable (imported or defined)…",N,N],[4,R[261],E,"Globals are initialized via the `const` operators or by…",N,N],[13,"I32Const",E,"An `i32.const`.",38,N],[13,"I64Const",E,"An `i64.const`.",38,N],[13,"F32Const",E,"An `f32.const`.",38,N],[13,"F64Const",E,"An `f64.const`.",38,N],[13,"V128Const",E,"A `vconst`.",38,N],[13,"GetGlobal",E,"A `get_global` of another global.",38,N],[13,"Import",E,"< The global is imported from, and thus initialized by, a…",38,N],[3,R[1],E,"WebAssembly linear memory.",N,N],[12,"minimum",E,"The minimum number of pages in the memory.",39,N],[12,"maximum",E,"The maximum number of pages in the memory.",39,N],[12,"shared",E,"Whether the memory may be shared between multiple threads.",39,N],[3,R[273],E,"Index type of a linear memory (imported or defined) inside…",N,N],[3,R[274],E,"Index type of a signature (imported or defined) inside the…",N,N],[3,"Table",E,"WebAssembly table.",N,N],[12,"ty",E,"The type of data stored in elements of the table.",40,N],[12,"minimum",E,"The minimum number of elements in the table.",40,N],[12,"maximum",E,"The maximum number of elements in the table.",40,N],[4,R[262],E,"WebAssembly table element. Can be a function or a scalar…",N,N],[13,"Val",E,"A scalar type.",41,N],[13,"Func",E,R[315],41,N],[3,R[275],E,"Index type of a table (imported or defined) inside the…",N,N],[6,"ModuleAddressMap",R[113],"Module functions addresses mappings.",N,N],[6,R[148],E,"Value ranges for functions.",N,N],[6,"Relocations",E,"Relocations to apply to function bodies.",N,N],[6,"Traps",E,"Information about traps associated with the functions…",N,N],[17,"WASM_PAGE_SIZE",E,"WebAssembly page sizes are defined to be 64KiB.",N,N],[17,"WASM_MAX_PAGES",E,"The number of pages we can have before we run out of byte…",N,N],[17,"VERSION",E,R[336],N,N],[8,R[281],E,"An implementation of a compiler from parsed WebAssembly…",N,N],[10,R[176],E,"Compile a parsed module with the given `TargetIsa`.",42,[[["bool"],[R[177]],[R[149]],[R[14]],[R[117],[R[116],R[149]]],[R[116]],[R[178]]],[[R[150]],[R[15],[R[150]]]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,R[151],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,R[151],E,E,1,[[["self"],["k"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[35],E,E,21,[[[U]],[R[15]]]],[11,R[36],E,E,21,[[],[R[15]]]],[11,R[34],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[T]]],[11,R[37],E,E,21,[[["self"]],[R[39]]]],[11,R[151],E,E,21,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[[U]],[R[15]]]],[11,R[36],E,E,3,[[],[R[15]]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[R[39]]]],[11,R[151],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[35],E,E,4,[[[U]],[R[15]]]],[11,R[36],E,E,4,[[],[R[15]]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[39]]]],[11,R[151],E,E,4,[[["self"],["k"]],["bool"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[35],E,E,5,[[[U]],[R[15]]]],[11,R[36],E,E,5,[[],[R[15]]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[R[39]]]],[11,R[151],E,E,5,[[["self"],["k"]],["bool"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[35],E,E,22,[[[U]],[R[15]]]],[11,R[36],E,E,22,[[],[R[15]]]],[11,R[34],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[T]]],[11,R[37],E,E,22,[[["self"]],[R[39]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[35],E,E,6,[[[U]],[R[15]]]],[11,R[36],E,E,6,[[],[R[15]]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[39]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[35],E,E,7,[[[U]],[R[15]]]],[11,R[36],E,E,7,[[],[R[15]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[39]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[[U]],[R[15]]]],[11,R[36],E,E,8,[[],[R[15]]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[R[39]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[35],E,E,9,[[[U]],[R[15]]]],[11,R[36],E,E,9,[[],[R[15]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[37],E,E,9,[[["self"]],[R[39]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[35],E,E,10,[[[U]],[R[15]]]],[11,R[36],E,E,10,[[],[R[15]]]],[11,R[34],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[39]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[[U]],[R[15]]]],[11,R[36],E,E,11,[[],[R[15]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[R[39]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[35],E,E,12,[[[U]],[R[15]]]],[11,R[36],E,E,12,[[],[R[15]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[R[39]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[35],E,E,23,[[[U]],[R[15]]]],[11,R[36],E,E,23,[[],[R[15]]]],[11,R[34],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[T]]],[11,R[37],E,E,23,[[["self"]],[R[39]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[[U]],[R[15]]]],[11,R[36],E,E,13,[[],[R[15]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[R[39]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[35],E,E,14,[[[U]],[R[15]]]],[11,R[36],E,E,14,[[],[R[15]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[39]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[35],E,E,24,[[[U]],[R[15]]]],[11,R[36],E,E,24,[[],[R[15]]]],[11,R[34],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[T]]],[11,R[37],E,E,24,[[["self"]],[R[39]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[35],E,E,15,[[[U]],[R[15]]]],[11,R[36],E,E,15,[[],[R[15]]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[39]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[152],E,E,16,[[["self"]],["string"]]],[11,R[35],E,E,16,[[[U]],[R[15]]]],[11,R[36],E,E,16,[[],[R[15]]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[39]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[35],E,E,17,[[[U]],[R[15]]]],[11,R[36],E,E,17,[[],[R[15]]]],[11,R[34],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[T]]],[11,R[37],E,E,17,[[["self"]],[R[39]]]],[11,R[151],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[35],E,E,18,[[[U]],[R[15]]]],[11,R[36],E,E,18,[[],[R[15]]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[39]]]],[11,R[151],E,E,18,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[35],E,E,19,[[[U]],[R[15]]]],[11,R[36],E,E,19,[[],[R[15]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[37],E,E,19,[[["self"]],[R[39]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[35],E,E,20,[[[U]],[R[15]]]],[11,R[36],E,E,20,[[],[R[15]]]],[11,R[34],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[T]]],[11,R[37],E,E,20,[[["self"]],[R[39]]]],[11,R[40],R[140],E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[152],E,E,43,[[["self"]],["string"]]],[11,R[35],E,E,43,[[[U]],[R[15]]]],[11,R[36],E,E,43,[[],[R[15]]]],[11,R[34],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"]],[T]]],[11,R[37],E,E,43,[[["self"]],[R[39]]]],[11,R[151],E,E,43,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[152],E,E,26,[[["self"]],["string"]]],[11,R[35],E,E,26,[[[U]],[R[15]]]],[11,R[36],E,E,26,[[],[R[15]]]],[11,R[34],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"]],[T]]],[11,R[37],E,E,26,[[["self"]],[R[39]]]],[11,R[151],E,E,26,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[152],E,E,27,[[["self"]],["string"]]],[11,R[35],E,E,27,[[[U]],[R[15]]]],[11,R[36],E,E,27,[[],[R[15]]]],[11,R[34],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"]],[T]]],[11,R[37],E,E,27,[[["self"]],[R[39]]]],[11,R[151],E,E,27,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[152],E,E,28,[[["self"]],["string"]]],[11,R[35],E,E,28,[[[U]],[R[15]]]],[11,R[36],E,E,28,[[],[R[15]]]],[11,R[34],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"]],[T]]],[11,R[37],E,E,28,[[["self"]],[R[39]]]],[11,R[151],E,E,28,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[152],E,E,44,[[["self"]],["string"]]],[11,R[35],E,E,44,[[[U]],[R[15]]]],[11,R[36],E,E,44,[[],[R[15]]]],[11,R[34],E,E,44,[[["self"]],[T]]],[11,R[38],E,E,44,[[["self"]],[T]]],[11,R[37],E,E,44,[[["self"]],[R[39]]]],[11,R[151],E,E,44,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[35],E,E,29,[[[U]],[R[15]]]],[11,R[36],E,E,29,[[],[R[15]]]],[11,R[34],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"]],[T]]],[11,R[37],E,E,29,[[["self"]],[R[39]]]],[11,R[151],E,E,29,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[152],E,E,30,[[["self"]],["string"]]],[11,R[35],E,E,30,[[[U]],[R[15]]]],[11,R[36],E,E,30,[[],[R[15]]]],[11,R[34],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"]],[T]]],[11,R[37],E,E,30,[[["self"]],[R[39]]]],[11,R[151],E,E,30,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[152],E,E,45,[[["self"]],["string"]]],[11,R[35],E,E,45,[[[U]],[R[15]]]],[11,R[36],E,E,45,[[],[R[15]]]],[11,R[34],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"]],[T]]],[11,R[37],E,E,45,[[["self"]],[R[39]]]],[11,"key",E,E,45,[[["self"]],[T]]],[11,R[151],E,E,45,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[35],E,E,31,[[[U]],[R[15]]]],[11,R[36],E,E,31,[[],[R[15]]]],[11,R[34],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"]],[T]]],[11,R[37],E,E,31,[[["self"]],[R[39]]]],[11,R[151],E,E,31,[[["self"],["k"]],["bool"]]],[11,R[40],R[153],E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[152],E,E,46,[[["self"]],["string"]]],[11,R[35],E,E,46,[[[U]],[R[15]]]],[11,R[36],E,E,46,[[],[R[15]]]],[11,R[34],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"]],[T]]],[11,R[37],E,E,46,[[["self"]],[R[39]]]],[11,R[40],R[154],E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[152],E,E,33,[[["self"]],["string"]]],[11,R[35],E,E,33,[[[U]],[R[15]]]],[11,R[36],E,E,33,[[],[R[15]]]],[11,R[34],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"]],[T]]],[11,R[37],E,E,33,[[["self"]],[R[39]]]],[11,R[151],E,E,33,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[35],E,E,34,[[[U]],[R[15]]]],[11,R[36],E,E,34,[[],[R[15]]]],[11,R[34],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"]],[T]]],[11,R[37],E,E,34,[[["self"]],[R[39]]]],[11,R[40],R[155],E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[35],E,E,47,[[[U]],[R[15]]]],[11,R[36],E,E,47,[[],[R[15]]]],[11,R[34],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"]],[T]]],[11,R[37],E,E,47,[[["self"]],[R[39]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[35],E,E,48,[[[U]],[R[15]]]],[11,R[36],E,E,48,[[],[R[15]]]],[11,R[34],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"]],[T]]],[11,R[37],E,E,48,[[["self"]],[R[39]]]],[11,R[151],E,E,48,[[["self"],["k"]],["bool"]]],[11,R[40],R[156],E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[35],E,E,49,[[[U]],[R[15]]]],[11,R[36],E,E,49,[[],[R[15]]]],[11,R[34],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"]],[T]]],[11,R[37],E,E,49,[[["self"]],[R[39]]]],[11,"key",E,E,49,[[["self"]],[T]]],[11,R[151],E,E,49,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[35],E,E,50,[[[U]],[R[15]]]],[11,R[36],E,E,50,[[],[R[15]]]],[11,R[34],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"]],[T]]],[11,R[37],E,E,50,[[["self"]],[R[39]]]],[11,"key",E,E,50,[[["self"]],[T]]],[11,R[151],E,E,50,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[35],E,E,51,[[[U]],[R[15]]]],[11,R[36],E,E,51,[[],[R[15]]]],[11,R[34],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"]],[T]]],[11,R[37],E,E,51,[[["self"]],[R[39]]]],[11,"key",E,E,51,[[["self"]],[T]]],[11,R[151],E,E,51,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[35],E,E,52,[[[U]],[R[15]]]],[11,R[36],E,E,52,[[],[R[15]]]],[11,R[34],E,E,52,[[["self"]],[T]]],[11,R[38],E,E,52,[[["self"]],[T]]],[11,R[37],E,E,52,[[["self"]],[R[39]]]],[11,"key",E,E,52,[[["self"]],[T]]],[11,R[151],E,E,52,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[35],E,E,53,[[[U]],[R[15]]]],[11,R[36],E,E,53,[[],[R[15]]]],[11,R[34],E,E,53,[[["self"]],[T]]],[11,R[38],E,E,53,[[["self"]],[T]]],[11,R[37],E,E,53,[[["self"]],[R[39]]]],[11,"key",E,E,53,[[["self"]],[T]]],[11,R[151],E,E,53,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[35],E,E,37,[[[U]],[R[15]]]],[11,R[36],E,E,37,[[],[R[15]]]],[11,R[34],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"]],[T]]],[11,R[37],E,E,37,[[["self"]],[R[39]]]],[11,R[40],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[35],E,E,54,[[[U]],[R[15]]]],[11,R[36],E,E,54,[[],[R[15]]]],[11,R[34],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"]],[T]]],[11,R[37],E,E,54,[[["self"]],[R[39]]]],[11,"key",E,E,54,[[["self"]],[T]]],[11,R[151],E,E,54,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[35],E,E,38,[[[U]],[R[15]]]],[11,R[36],E,E,38,[[],[R[15]]]],[11,R[34],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"]],[T]]],[11,R[37],E,E,38,[[["self"]],[R[39]]]],[11,R[40],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[35],E,E,39,[[[U]],[R[15]]]],[11,R[36],E,E,39,[[],[R[15]]]],[11,R[34],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"]],[T]]],[11,R[37],E,E,39,[[["self"]],[R[39]]]],[11,R[40],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[35],E,E,55,[[[U]],[R[15]]]],[11,R[36],E,E,55,[[],[R[15]]]],[11,R[34],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"]],[T]]],[11,R[37],E,E,55,[[["self"]],[R[39]]]],[11,"key",E,E,55,[[["self"]],[T]]],[11,R[151],E,E,55,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[35],E,E,56,[[[U]],[R[15]]]],[11,R[36],E,E,56,[[],[R[15]]]],[11,R[34],E,E,56,[[["self"]],[T]]],[11,R[38],E,E,56,[[["self"]],[T]]],[11,R[37],E,E,56,[[["self"]],[R[39]]]],[11,"key",E,E,56,[[["self"]],[T]]],[11,R[151],E,E,56,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[35],E,E,40,[[[U]],[R[15]]]],[11,R[36],E,E,40,[[],[R[15]]]],[11,R[34],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"]],[T]]],[11,R[37],E,E,40,[[["self"]],[R[39]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[35],E,E,41,[[[U]],[R[15]]]],[11,R[36],E,E,41,[[],[R[15]]]],[11,R[34],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"]],[T]]],[11,R[37],E,E,41,[[["self"]],[R[39]]]],[11,R[40],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[35],E,E,57,[[[U]],[R[15]]]],[11,R[36],E,E,57,[[],[R[15]]]],[11,R[34],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"]],[T]]],[11,R[37],E,E,57,[[["self"]],[R[39]]]],[11,"key",E,E,57,[[["self"]],[T]]],[11,R[151],E,E,57,[[["self"],["k"]],["bool"]]],[11,"into",R[157],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[35],E,E,25,[[[U]],[R[15]]]],[11,R[36],E,E,25,[[],[R[15]]]],[11,R[34],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[T]]],[11,R[37],E,E,25,[[["self"]],[R[39]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[35],E,E,58,[[[U]],[R[15]]]],[11,R[36],E,E,58,[[],[R[15]]]],[11,R[34],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"]],[T]]],[11,R[37],E,E,58,[[["self"]],[R[39]]]],[11,R[158],R[140],E,44,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,29,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,30,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,31,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,45,[[["self"],["__s"]],[R[15]]]],[11,R[160],E,E,30,[[["str"]],[[R[15],[R[163]]],[R[163]]]]],[11,R[160],R[154],E,33,[[["str"]],[[R[159]],[R[15],[R[159]]]]]],[11,R[160],R[140],E,27,[[["str"]],[[R[15],[R[161]]],[R[161]]]]],[11,"index",E,E,29,[[["self"],[R[164]]],[R[165]]]],[11,"fmt",E,E,30,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,45,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",R[154],E,33,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",R[140],E,28,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,27,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",R[153],E,46,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"new",R[140],E,45,[[["usize"]],[R[162]]]],[11,"index",E,E,45,[[],["usize"]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",R[154],E,33,[[["self"],["__h"]]]],[11,"hash",R[140],E,28,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"clone",R[154],E,33,[[["self"]],[R[159]]]],[11,"clone",R[140],E,26,[[["self"]],[R[167]]]],[11,"clone",E,E,45,[[["self"]],[R[162]]]],[11,"clone",R[153],E,46,[[["self"]],["flags"]]],[11,"clone",R[140],E,31,[[["self"]],[R[169]]]],[11,"clone",E,E,44,[[["self"]],[R[166]]]],[11,"clone",E,E,43,[[["self"]],["type"]]],[11,"clone",R[154],E,34,[[["self"]],[R[102]]]],[11,"clone",R[140],E,30,[[["self"]],[R[163]]]],[11,"clone",E,E,29,[[["self"]],[R[168]]]],[11,"clone",E,E,27,[[["self"]],[R[161]]]],[11,"clone",E,E,28,[[["self"]],[R[114]]]],[11,R[171],E,E,29,[[["self"],[R[164]]],[R[165]]]],[11,"eq",E,E,44,[[["self"],[R[166]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[166]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[161]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[114]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[114]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[163]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[163]]],["bool"]]],[11,"eq",R[154],E,33,[[["self"],[R[159]]],["bool"]]],[11,"eq",R[140],E,26,[[["self"],[R[167]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[167]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[162]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[162]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[168]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[168]]],["bool"]]],[11,"eq",E,E,43,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,43,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[169]]],["bool"]]],[11,"fmt",E,E,31,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",R[154],E,33,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",R[140],E,26,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,45,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,28,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,27,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,R[170],E,E,29,[[["__d"]],[[R[15],[R[168]]],[R[168]]]]],[11,R[170],E,E,44,[[["__d"]],[[R[166]],[R[15],[R[166]]]]]],[11,R[170],E,E,45,[[["__d"]],[[R[15],[R[162]]],[R[162]]]]],[11,R[170],E,E,31,[[["__d"]],[[R[169]],[R[15],[R[169]]]]]],[11,R[170],E,E,30,[[["__d"]],[[R[163]],[R[15],[R[163]]]]]],[11,R[175],E,E,45,[[],[R[162]]]],[11,R[43],E,E,43,[[],["type"]]],[11,R[43],E,E,31,[[],[R[169]]]],[11,R[43],E,E,44,[[],[R[166]]]],[11,R[171],R[155],E,48,[[["self"],["k"]],["v"]]],[11,R[171],E,E,47,[[["self"],["k"]],["v"]]],[11,"eq",E,E,48,[[["self"],[R[117]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[117]]],["bool"]]],[11,"fmt",E,E,48,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,47,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,R[170],E,E,48,[[["__d"]],[[R[15],[R[117]]],[R[117]]]]],[11,R[158],E,E,48,[[["self"],["__s"]],[R[15]]]],[11,"index",E,E,48,[[["self"],["k"]],["v"]]],[11,"index",E,E,47,[[["self"],["k"]],["v"]]],[11,"from_iter",E,E,48,[[[T]],[R[117]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"clone",E,E,48,[[["self"]],[R[117]]]],[11,"clone",E,E,47,[[["self"]],[R[214]]]],[11,"eq",R[156],E,52,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[125]]],["bool"]]],[11,"eq",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,"fmt",E,E,53,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,49,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,40,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,39,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,38,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,52,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,50,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,37,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,54,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,55,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,51,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,56,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,57,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,R[158],E,E,53,[[["self"],["__s"]],[R[15]]]],[11,"new",E,E,49,[[["usize"]],[R[116]]]],[11,"index",E,E,49,[[],["usize"]]],[11,"new",E,E,53,[[["usize"]],[R[122]]]],[11,"index",E,E,53,[[],["usize"]]],[11,"new",E,E,56,[[["usize"]],[R[172]]]],[11,"index",E,E,56,[[],["usize"]]],[11,"new",E,E,52,[[["usize"]],[R[125]]]],[11,"index",E,E,52,[[],["usize"]]],[11,"new",E,E,51,[[["usize"]],[R[128]]]],[11,"index",E,E,51,[[],["usize"]]],[11,"new",E,E,54,[[["usize"]],[R[129]]]],[11,"index",E,E,54,[[],["usize"]]],[11,"new",E,E,57,[[["usize"]],[R[124]]]],[11,"index",E,E,57,[[],["usize"]]],[11,"new",E,E,55,[[["usize"]],[R[127]]]],[11,"index",E,E,55,[[],["usize"]]],[11,"new",E,E,50,[[["usize"]],[R[130]]]],[11,"index",E,E,50,[[],["usize"]]],[11,R[173],E,E,49,[[["self"],[R[116]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,"le",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,"gt",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,"ge",E,E,49,[[["self"],[R[116]]],["bool"]]],[11,R[173],E,E,56,[[["self"],[R[172]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,"le",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,"gt",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,"ge",E,E,56,[[["self"],[R[172]]],["bool"]]],[11,R[173],E,E,53,[[["self"],[R[122]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,"le",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,"gt",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,"ge",E,E,53,[[["self"],[R[122]]],["bool"]]],[11,R[173],E,E,54,[[["self"],[R[129]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,"le",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,"gt",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,"ge",E,E,54,[[["self"],[R[129]]],["bool"]]],[11,R[173],E,E,50,[[["self"],[R[130]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,"le",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,"gt",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,"ge",E,E,50,[[["self"],[R[130]]],["bool"]]],[11,R[173],E,E,52,[[["self"],[R[125]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,52,[[["self"],[R[125]]],["bool"]]],[11,"le",E,E,52,[[["self"],[R[125]]],["bool"]]],[11,"gt",E,E,52,[[["self"],[R[125]]],["bool"]]],[11,"ge",E,E,52,[[["self"],[R[125]]],["bool"]]],[11,R[173],E,E,55,[[["self"],[R[127]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,"le",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,"gt",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,"ge",E,E,55,[[["self"],[R[127]]],["bool"]]],[11,R[173],E,E,57,[[["self"],[R[124]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,"le",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,"gt",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,"ge",E,E,57,[[["self"],[R[124]]],["bool"]]],[11,R[173],E,E,51,[[["self"],[R[128]]],[[R[174]],[R[5],[R[174]]]]]],[11,"lt",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,"le",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,"gt",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,"ge",E,E,51,[[["self"],[R[128]]],["bool"]]],[11,R[170],E,E,53,[[["__d"]],[[R[15],[R[122]]],[R[122]]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"cmp",E,E,51,[[["self"],[R[128]]],[R[174]]]],[11,"cmp",E,E,56,[[["self"],[R[172]]],[R[174]]]],[11,"cmp",E,E,57,[[["self"],[R[124]]],[R[174]]]],[11,"cmp",E,E,53,[[["self"],[R[122]]],[R[174]]]],[11,"cmp",E,E,55,[[["self"],[R[127]]],[R[174]]]],[11,"cmp",E,E,52,[[["self"],[R[125]]],[R[174]]]],[11,"cmp",E,E,54,[[["self"],[R[129]]],[R[174]]]],[11,"cmp",E,E,49,[[["self"],[R[116]]],[R[174]]]],[11,"cmp",E,E,50,[[["self"],[R[130]]],[R[174]]]],[11,R[175],E,E,54,[[],[R[129]]]],[11,R[175],E,E,55,[[],[R[127]]]],[11,R[175],E,E,53,[[],[R[122]]]],[11,R[175],E,E,51,[[],[R[128]]]],[11,R[175],E,E,52,[[],[R[125]]]],[11,R[175],E,E,50,[[],[R[130]]]],[11,R[175],E,E,57,[[],[R[124]]]],[11,R[175],E,E,56,[[],[R[172]]]],[11,R[175],E,E,49,[[],[R[116]]]],[11,"clone",E,E,52,[[["self"]],[R[125]]]],[11,"clone",E,E,50,[[["self"]],[R[130]]]],[11,"clone",E,E,38,[[["self"]],["globalinit"]]],[11,"clone",E,E,51,[[["self"]],[R[128]]]],[11,"clone",E,E,40,[[["self"]],["table"]]],[11,"clone",E,E,54,[[["self"]],[R[129]]]],[11,"clone",E,E,37,[[["self"]],[R[8]]]],[11,"clone",E,E,53,[[["self"]],[R[122]]]],[11,"clone",E,E,39,[[["self"]],[R[84]]]],[11,"clone",E,E,56,[[["self"]],[R[172]]]],[11,"clone",E,E,57,[[["self"]],[R[124]]]],[11,"clone",E,E,41,[[["self"]],["tableelementtype"]]],[11,"clone",E,E,55,[[["self"]],[R[127]]]],[11,"clone",E,E,49,[[["self"]],[R[116]]]],[11,R[176],R[157],"Compile the module using Cranelift, producing a…",58,[[[R[14]],[R[177]],[R[149]],[R[117],[R[116],R[149]]],[R[116]],[R[178]],["bool"]],[[R[150]],[R[15],[R[150]]]]]],[11,R[43],R[113],E,14,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[179]]]],[11,"clone",E,E,0,[[["self"]],[R[180]]]],[11,"clone",E,E,3,[[["self"]],[R[115]]]],[11,"clone",E,E,4,[[["self"]],[R[182]]]],[11,"clone",E,E,17,[[["self"]],[R[183]]]],[11,"clone",E,E,8,[[["self"]],["tableelements"]]],[11,"clone",E,E,18,[[["self"]],["export"]]],[11,"clone",E,E,19,[[["self"]],["memorystyle"]]],[11,"clone",E,E,6,[[["self"]],[R[416]]]],[11,"clone",E,E,20,[[["self"]],["tablestyle"]]],[11,"clone",E,E,9,[[["self"]],[R[415]]]],[11,"clone",E,E,11,[[["self"]],["datainitializerlocation"]]],[11,"clone",E,E,14,[[["self"]],[R[120]]]],[11,"clone",E,E,24,[[["self"]],["targetsharedsignatureindex"]]],[11,R[173],E,E,18,[[["self"],["export"]],[[R[5],[R[174]]],[R[174]]]]],[11,"lt",E,E,18,[[["self"],["export"]],["bool"]]],[11,"le",E,E,18,[[["self"],["export"]],["bool"]]],[11,"gt",E,E,18,[[["self"],["export"]],["bool"]]],[11,"ge",E,E,18,[[["self"],["export"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[179]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[179]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[180]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[180]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[115]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[115]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[181]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[181]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[182]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[182]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[183]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[183]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[184]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[184]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["export"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["export"]],["bool"]]],[11,"cmp",E,E,18,[[["self"],["export"]],[R[174]]]],[11,"from",E,E,16,[[["wasmerror"]],["self"]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,21,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,20,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,9,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,"source",E,E,16,[[["self"]],[[R[5],["error"]],["error"]]]],[11,R[341],R[157],E,25,[[["self"],["reloc"],[R[185]]]]],[11,R[342],E,E,25,[[["self"],[R[338]],["reloc"],[R[185]],["addend"]]]],[11,R[343],E,E,25,[[["self"],[R[344]],["reloc"],[R[185]]]]],[11,"reloc_jt",E,E,25,[[["self"],[R[319]],["reloc"],[R[185]]]]],[11,R[158],R[113],E,1,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,0,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,3,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,21,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,4,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,17,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,5,[[["self"],["__s"]],[R[15]]]],[11,R[170],E,E,1,[[["__d"]],[R[15]]]],[11,R[170],E,E,0,[[["__d"]],[R[15]]]],[11,R[170],E,E,3,[[["__d"]],[R[15]]]],[11,R[170],E,E,21,[[["__d"]],[R[15]]]],[11,R[170],E,E,4,[[["__d"]],[R[15]]]],[11,R[170],E,E,17,[[["__d"]],[R[15]]]],[11,R[170],E,E,5,[[["__d"]],[R[15]]]],[11,R[186],E,E,23,[[["self"]],[R[102]]]],[11,"reserve_signatures",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_signature",E,E,23,[[["self"],[R[114]]],[R[187]]]],[11,"declare_func_import",E,E,23,[[["self"],["str"],[R[172]]],[R[187]]]],[11,"declare_table_import",E,E,23,[[["self"],["table"],["str"]],[R[187]]]],[11,"declare_memory_import",E,E,23,[[["self"],[R[84]],["str"]],[R[187]]]],[11,"declare_global_import",E,E,23,[[["self"],[R[8]],["str"]],[R[187]]]],[11,"finish_imports",E,E,23,[[["self"]],[R[187]]]],[11,"reserve_func_types",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_func_type",E,E,23,[[["self"],[R[172]]],[R[187]]]],[11,"reserve_tables",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_table",E,E,23,[[["self"],["table"]],[R[187]]]],[11,"reserve_memories",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_memory",E,E,23,[[["self"],[R[84]]],[R[187]]]],[11,"reserve_globals",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_global",E,E,23,[[["self"],[R[8]]],[R[187]]]],[11,"reserve_exports",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_func_export",E,E,23,[[["self"],[R[122]],["str"]],[R[187]]]],[11,"declare_table_export",E,E,23,[[["self"],[R[124]],["str"]],[R[187]]]],[11,"declare_memory_export",E,E,23,[[["self"],[R[127]],["str"]],[R[187]]]],[11,"declare_global_export",E,E,23,[[["self"],[R[129]],["str"]],[R[187]]]],[11,"declare_start_func",E,E,23,[[["self"],[R[122]]],[R[187]]]],[11,"reserve_table_elements",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_table_elements",E,E,23,[[["self"],[R[5],[R[129]]],[R[124]],[R[129]],["usize"],["box"]],[R[187]]]],[11,"define_function_body",E,E,23,[[["self"],[R[177]],["usize"]],[R[187]]]],[11,"reserve_data_initializers",E,E,23,[[["self"],["u32"]],[R[187]]]],[11,"declare_data_initialization",E,E,23,[[["self"],[R[5],[R[129]]],[R[129]],["usize"],[R[127]]],[R[187]]]],[11,"lane_type",R[140],"Get the lane type of this SIMD vector type.",43,[[],["type"]]],[11,"lane_of",E,"The type transformation that returns the lane type of a…",43,[[],["type"]]],[11,"log2_lane_bits",E,"Get log_2 of the number of bits in a lane.",43,[[],["u8"]]],[11,"lane_bits",E,"Get the number of bits in a lane.",43,[[],["u8"]]],[11,"int",E,"Get an integer type with the requested number of bits.",43,[[["u16"]],[[R[5],["type"]],["type"]]]],[11,"as_bool_pedantic",E,R[188],43,[[],["type"]]],[11,"as_bool",E,R[188],43,[[],["type"]]],[11,"half_width",E,R[188],43,[[],[[R[5],["type"]],["type"]]]],[11,"double_width",E,R[188],43,[[],[[R[5],["type"]],["type"]]]],[11,"is_invalid",E,"Is this the INVALID type?",43,[[],["bool"]]],[11,"is_special",E,"Is this a special type?",43,[[],["bool"]]],[11,"is_lane",E,"Is this a lane type?",43,[[],["bool"]]],[11,"is_vector",E,"Is this a SIMD vector type?",43,[[],["bool"]]],[11,"is_bool",E,"Is this a scalar boolean type?",43,[[],["bool"]]],[11,"is_int",E,"Is this a scalar integer type?",43,[[],["bool"]]],[11,"is_float",E,"Is this a scalar floating point type?",43,[[],["bool"]]],[11,"is_flags",E,"Is this a CPU flags type?",43,[[],["bool"]]],[11,"is_ref",E,"Is this a ref type?",43,[[],["bool"]]],[11,"log2_lane_count",E,"Get log_2 of the number of lanes in this SIMD vector type.",43,[[],["u8"]]],[11,"lane_count",E,"Get the number of lanes in this SIMD vector type.",43,[[],["u16"]]],[11,"bits",E,"Get the total number of bits used to represent this type.",43,[[],["u16"]]],[11,"bytes",E,"Get the number of bytes used to store this type in memory.",43,[[],["u32"]]],[11,"by",E,"Get a SIMD vector type with `n` times more lanes than this…",43,[[["u16"]],[[R[5],["type"]],["type"]]]],[11,"half_vector",E,"Get a SIMD vector with half the number of lanes.",43,[[],[[R[5],["type"]],["type"]]]],[11,"index",E,"Index of this type, for use with hash tables etc.",43,[[],["usize"]]],[11,"wider_or_equal",E,"True iff:",43,[[["type"]],["bool"]]],[11,"triple_pointer_type",E,"Return the pointer type for the given target triple.",43,[[["triple"]],["type"]]],[11,"new",E,"Create a parameter with default flags.",26,[[["type"]],[R[167]]]],[11,"special",E,"Create a special-purpose parameter that is not (yet) bound…",26,[[[R[161]],["type"]],[R[167]]]],[11,"special_reg",E,"Create a parameter for a special-purpose register.",26,[[["u16"],[R[161]],["type"]],[R[167]]]],[11,"uext",E,"Convert `self` to a parameter with the `uext` flag set.",26,[[],[R[167]]]],[11,"sext",E,"Convert `self` to a parameter type with the `sext` flag set.",26,[[],[R[167]]]],[11,"display",E,R[189],26,[[["self"],["r"]],["displayabiparam"]]],[11,"new",E,"Create a new blank signature.",28,[[[R[159]]],[R[114]]]],[11,"clear",E,"Clear the signature so it is identical to a fresh one…",28,[[["self"],[R[159]]]]],[11,"display",E,R[189],28,[[["self"],["r"]],["displaysignature"]]],[11,"special_param_index",E,R[190],28,[[["self"],[R[161]]],[[R[5],["usize"]],["usize"]]]],[11,"special_return_index",E,R[190],28,[[["self"],[R[161]]],[[R[5],["usize"]],["usize"]]]],[11,"uses_special_param",E,"Does this signature have a parameter whose…",28,[[["self"],[R[161]]],["bool"]]],[11,"uses_special_return",E,"Does this signature have a return whose `ArgumentPurpose`…",28,[[["self"],[R[161]]],["bool"]]],[11,"num_special_params",E,"How many special parameters does this function have?",28,[[["self"]],["usize"]]],[11,"num_special_returns",E,"How many special returns does this function have?",28,[[["self"]],["usize"]]],[11,"uses_struct_return_param",E,"Does this signature take an struct return pointer parameter?",28,[[["self"]],["bool"]]],[11,"is_multi_return",E,"Does this return more than one normal value? (Pre-struct…",28,[[["self"]],["bool"]]],[11,"new",E,"Create a new source location with the given bits.",44,[[["u32"]],[R[166]]]],[11,"is_default",E,"Is this the default source location?",44,[[],["bool"]]],[11,"bits",E,"Read the bits of this source location.",44,[[],["u32"]]],[11,"new",E,"Create an empty stack slot manager.",29,[[],[R[168]]]],[11,"clear",E,"Clear out everything.",29,[[["self"]]]],[11,"push",E,"Allocate a new stack slot.",29,[[["self"],[R[165]]],[R[164]]]],[11,R[216],E,"Check if `ss` is a valid stack slot reference.",29,[[["self"],[R[164]]],["bool"]]],[11,"iter",E,R[191],29,[[["self"]],[["iter",[R[164],R[165]]],[R[164]],[R[165]]]]],[11,R[226],E,"Get an iterator over all the stack slot keys, mutable…",29,[[["self"]],[[R[164]],[R[165]],[R[228],[R[164],R[165]]]]]],[11,"values",E,"Get an iterator over all the stack slot records.",29,[[["self"]],[[R[165]],["iter",[R[165]]]]]],[11,R[215],E,"Get an iterator over all the stack slot records, mutable…",29,[[["self"]],[[R[165]],[R[228],[R[165]]]]]],[11,"keys",E,R[191],29,[[["self"]],[[R[164]],["keys",[R[164]]]]]],[11,"next_key",E,"Get a reference to the next stack slot that would be…",29,[[["self"]],[R[164]]]],[11,"make_spill_slot",E,"Create a new spill slot for spilling values of type `ty`.",29,[[["self"],["type"]],[R[164]]]],[11,"make_incoming_arg",E,"Create a stack slot representing an incoming function…",29,[[["self"],["i32"],["type"]],[R[164]]]],[11,"get_outgoing_arg",E,"Get a stack slot representing an outgoing argument.",29,[[["self"],["i32"],["type"]],[R[164]]]],[11,"get_emergency_slot",E,"Get an emergency spill slot that can be used to store a…",29,[[["self"],["type"]],[R[164]]]],[11,R[230],E,R[192],45,[[["u32"]],[R[162]]]],[11,"as_u32",E,R[192],45,[[],["u32"]]],[11,"is_assigned",E,"Is this an assigned location? (That is, not `Unassigned`).",31,[[],["bool"]]],[11,"unwrap_reg",E,"Get the register unit of this location, or panic.",31,[[],["u16"]]],[11,"unwrap_stack",E,"Get the stack slot of this location, or panic.",31,[[],[R[164]]]],[11,"display",E,"Return an object that can display this value location,…",31,[[["r"]],["displayvalueloc"]]],[11,"new",R[153],"Create flags shared settings group.",46,[[[R[310]]],["flags"]]],[11,"predicate_view",E,"Get a view of the boolean predicates.",46,[[["self"]],["predicateview"]]],[11,"opt_level",E,"Optimization level:",46,[[["self"]],["optlevel"]]],[11,"libcall_call_conv",E,"Defines the calling convention to use for LibCalls call…",46,[[["self"]],["libcallcallconv"]]],[11,"baldrdash_prologue_words",E,"Number of pointer-sized words pushed by the baldrdash…",46,[[["self"]],["u8"]]],[11,"probestack_size_log2",E,"The log2 of the size of the stack guard region.",46,[[["self"]],["u8"]]],[11,"enable_verifier",E,"Run the Cranelift IR verifier at strategic times during…",46,[[["self"]],["bool"]]],[11,"is_pic",E,"Enable Position-Independent Code generation",46,[[["self"]],["bool"]]],[11,"colocated_libcalls",E,"Use colocated libcalls.",46,[[["self"]],["bool"]]],[11,"avoid_div_traps",E,"Generate explicit checks around native division…",46,[[["self"]],["bool"]]],[11,"enable_float",E,"Enable the use of floating-point instructions",46,[[["self"]],["bool"]]],[11,"enable_nan_canonicalization",E,"Enable NaN canonicalization",46,[[["self"]],["bool"]]],[11,"enable_pinned_reg",E,"Enable the use of the pinned register.",46,[[["self"]],["bool"]]],[11,"use_pinned_reg_as_heap_base",E,"Use the pinned register as the heap base.",46,[[["self"]],["bool"]]],[11,"enable_simd",E,"Enable the use of SIMD instructions.",46,[[["self"]],["bool"]]],[11,"enable_atomics",E,"Enable the use of atomic instructions",46,[[["self"]],["bool"]]],[11,"enable_safepoints",E,"Enable safepoint instruction insertions.",46,[[["self"]],["bool"]]],[11,"allones_funcaddrs",E,"Emit not-yet-relocated function addresses as all-ones bit…",46,[[["self"]],["bool"]]],[11,"probestack_enabled",E,"Enable the use of stack probes, for calling conventions…",46,[[["self"]],["bool"]]],[11,"probestack_func_adjusts_sp",E,"Set this to true of the stack probe function modifies the…",46,[[["self"]],["bool"]]],[11,"jump_tables_enabled",E,"Enable the use of jump tables in generated machine code.",46,[[["self"]],["bool"]]],[11,"triple_default",R[154],"Return the default calling convention for the given target…",33,[[["triple"]],[R[159]]]],[11,"for_libcall",E,"Returns the calling convention used for libcalls for the…",33,[[[R[178]]],[R[159]]]],[11,"extends_windows_fastcall",E,"Is the calling convention extending the Windows Fastcall…",33,[[],["bool"]]],[11,"extends_baldrdash",E,"Is the calling convention extending the Baldrdash ABI?",33,[[],["bool"]]],[11,R[193],E,"Get the pointer type of this target.",34,[[],["type"]]],[11,R[194],E,"Get the width of pointers on this target, in units of bits.",34,[[],["u8"]]],[11,R[195],E,"Get the width of pointers on this target, in units of bytes.",34,[[],["u8"]]],[11,R[143],E,R[196],35,[[["self"]],[R[159]]]],[11,R[193],E,R[197],35,[[["self"]],["type"]]],[11,R[144],E,R[198],35,[[["self"]],[R[199]]]],[11,R[194],E,R[200],35,[[["self"]],["u8"]]],[11,R[195],E,R[201],35,[[["self"]],["u8"]]],[11,R[202],E,R[203],35,[[["self"]],[R[102]]]],[11,R[204],E,R[205],35,[[["self"]],["bool"]]],[11,R[206],E,R[207],35,[[["self"]],["bool"]]],[11,"encode",E,R[208],35,[[["self"],["type"],[R[146]],[R[145]]],[[R[209]],[R[15],[R[209]]]]]],[11,R[210],E,R[211],35,[[["self"],[R[146]]],[[R[15],[R[147]]],[R[147]]]]],[11,R[212],E,R[213],35,[[["self"],[R[146]],["vec"]]]],[11,"from_raw",R[155],"Create a new slice from a raw pointer. A safer way to…",47,[[],[R[214]]]],[11,R[216],E,R[217],47,[[["self"],["k"]],["bool"]]],[11,"get",E,R[218],47,[[["self"],["k"]],[[R[5]],["v"]]]],[11,"get_mut",E,R[219],47,[[["self"],["k"]],[[R[5]],["v"]]]],[11,"is_empty",E,R[220],47,[[["self"]],["bool"]]],[11,"len",E,R[221],47,[[["self"]],["usize"]]],[11,"keys",E,R[222],47,[[["self"]],["keys"]]],[11,"values",E,R[223],47,[[["self"]],["iter"]]],[11,R[215],E,R[224],47,[[["self"]],[R[228]]]],[11,"iter",E,R[225],47,[[["self"]],["iter"]]],[11,R[226],E,R[227],47,[[["self"]],[R[228]]]],[11,"last",E,R[229],47,[[["self"]],[[R[5]],["v"]]]],[11,"new",E,"Create a new empty map.",48,[[],[R[117]]]],[11,"with_capacity",E,"Create a new empty map with the given capacity.",48,[[["usize"]],[R[117]]]],[11,R[216],E,R[217],48,[[["self"],["k"]],["bool"]]],[11,"get",E,R[218],48,[[["self"],["k"]],[[R[5]],["v"]]]],[11,"get_mut",E,R[219],48,[[["self"],["k"]],[[R[5]],["v"]]]],[11,"is_empty",E,R[220],48,[[["self"]],["bool"]]],[11,"len",E,R[221],48,[[["self"]],["usize"]]],[11,"keys",E,R[222],48,[[["self"]],["keys"]]],[11,"values",E,R[223],48,[[["self"]],["iter"]]],[11,R[215],E,R[224],48,[[["self"]],[R[228]]]],[11,"iter",E,R[225],48,[[["self"]],["iter"]]],[11,R[226],E,R[227],48,[[["self"]],[R[228]]]],[11,"clear",E,"Remove all entries from this map.",48,[[["self"]]]],[11,"next_key",E,"Get the key that will be assigned to the next pushed value.",48,[[["self"]],["k"]]],[11,"push",E,"Append `v` to the mapping, assigning a new key which is…",48,[[["self"],["v"]],["k"]]],[11,"last",E,R[229],48,[[["self"]],[[R[5]],["v"]]]],[11,"reserve",E,"Reserves capacity for at least `additional` more elements…",48,[[["self"],["usize"]]]],[11,"reserve_exact",E,"Reserves the minimum capacity for exactly `additional`…",48,[[["self"],["usize"]]]],[11,"shrink_to_fit",E,"Shrinks the capacity of the `PrimaryMap` as much as…",48,[[["self"]]]],[11,"into_boxed_slice",E,"Consumes this `PrimaryMap` and produces a `BoxedSlice`.",48,[[],[R[214]]]],[11,R[230],R[156],R[192],49,[[["u32"]],[R[116]]]],[11,"as_u32",E,R[192],49,[[],["u32"]]],[11,R[230],E,R[192],50,[[["u32"]],[R[130]]]],[11,"as_u32",E,R[192],50,[[],["u32"]]],[11,R[230],E,R[192],51,[[["u32"]],[R[128]]]],[11,"as_u32",E,R[192],51,[[],["u32"]]],[11,R[230],E,R[192],52,[[["u32"]],[R[125]]]],[11,"as_u32",E,R[192],52,[[],["u32"]]],[11,R[230],E,R[192],53,[[["u32"]],[R[122]]]],[11,"as_u32",E,R[192],53,[[],["u32"]]],[11,R[230],E,R[192],54,[[["u32"]],[R[129]]]],[11,"as_u32",E,R[192],54,[[],["u32"]]],[11,R[230],E,R[192],55,[[["u32"]],[R[127]]]],[11,"as_u32",E,R[192],55,[[],["u32"]]],[11,R[230],E,R[192],56,[[["u32"]],[R[172]]]],[11,"as_u32",E,R[192],56,[[],["u32"]]],[11,R[230],E,R[192],57,[[["u32"]],[R[124]]]],[11,"as_u32",E,R[192],57,[[],["u32"]]]],"p":[[3,R[231]],[3,R[232]],[3,R[233]],[3,R[234]],[3,R[235]],[3,R[236]],[3,R[237]],[3,"Module"],[3,R[238]],[3,R[239]],[3,R[240]],[3,R[241]],[3,R[242]],[3,R[243]],[3,"Tunables"],[3,R[244]],[4,R[245]],[4,R[246]],[4,"Export"],[4,R[247]],[4,R[248]],[3,R[249]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[253]],[3,"AbiParam"],[4,R[254]],[3,R[255]],[3,R[256]],[4,"TrapCode"],[4,"ValueLoc"],[8,R[257]],[4,"CallConv"],[3,R[258]],[8,R[259]],[8,R[260]],[3,R[0]],[4,R[261]],[3,R[1]],[3,"Table"],[4,R[262]],[8,R[281]],[3,"Type"],[3,R[263]],[3,R[264]],[3,"Flags"],[3,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]]]};
searchIndex["wasmtime_interface_types"]={"doc":"A small crate to handle WebAssembly interface types in…","i":[[3,R[279],"wasmtime_interface_types","A data structure intended to hold a parsed representation…",N,N],[3,R[280],E,"Representation of a binding of an exported function.",N,N],[4,"Value",E,"The set of all possible WebAssembly Interface Types",N,N],[13,"String",E,E,0,N],[13,"I32",E,E,0,N],[13,"U32",E,E,0,N],[13,"I64",E,E,0,N],[13,"U64",E,E,0,N],[13,"F32",E,E,0,N],[13,"F64",E,E,0,N],[11,"new",E,"Parses a raw binary wasm file, extracting information…",1,[[],[[R[15],[R[277]]],[R[277]]]]],[11,"find_wasi_module_name",E,"Detects if WASI support is needed: returns module name…",1,[[["self"]],[["string"],[R[5],["string"]]]]],[11,"invoke_export",E,"Invokes wasmtime function with a `&[Value]` list. `Value`…",1,[[["self"],[R[4]],["str"]],[["vec",["value"]],[R[15],["vec"]]]]],[11,"binding_for_export",E,"Returns an appropriate binding for the `name` export in…",1,[[["self"],[R[13]],["str"]],[[R[15],[R[278]]],[R[278]]]]],[11,"param_bindings",E,"Returns the list of binding expressions used to create the…",2,[[["self"]],[["vec",["incomingbindingexpression"]],[R[15],["vec"]]]]],[11,"param_types",E,"Returns the list of scalar types used for this binding",2,[[["self"]],[[R[15],["vec"]],["vec",["webidlscalartype"]]]]],[11,"result_bindings",E,"Returns the list of binding expressions used to extract…",2,[[["self"]],[["vec",["outgoingbindingexpression"]],[R[15],["vec"]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[152],E,E,0,[[["self"]],["string"]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,"clone",E,E,0,[[["self"]],["value"]]],[11,"from",E,E,0,[[["string"]],["value"]]],[11,"from",E,E,0,[[["i32"]],["value"]]],[11,"from",E,E,0,[[["u32"]],["value"]]],[11,"from",E,E,0,[[["i64"]],["value"]]],[11,"from",E,E,0,[[["u64"]],["value"]]],[11,"from",E,E,0,[[["f32"]],["value"]]],[11,"from",E,E,0,[[["f64"]],["value"]]],[11,"from",E,E,0,[[["str"]],["value"]]],[11,"fmt",E,E,0,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[86]]],[R[15]]]]],"p":[[4,"Value"],[3,R[279]],[3,R[280]]]};
searchIndex["wasmtime_jit"]={"doc":"JIT-style runtime for WebAssembly using Cranelift.","i":[[3,R[394],R[282],R[403],N,N],[4,R[378],E,R[410],N,N],[13,"Resource",E,R[411],0,N],[13,"Link",E,R[412],0,N],[13,R[413],E,R[112],0,N],[3,R[385],E,"Memory manager for executable code.",N,N],[3,R[281],E,"A WebAssembly code JIT compiler.",N,N],[3,"Context",E,"A convenient context for compiling and executing…",N,N],[3,"Features",E,"The collection of features configurable during compilation",N,N],[12,"threads",E,"marks whether the proposed thread feature is enabled or…",1,N],[12,"reference_types",E,"marks whether the proposed reference type feature is…",1,N],[12,"simd",E,"marks whether the proposed SIMD feature is enabled or…",1,N],[12,"bulk_memory",E,"marks whether the proposed bulk memory feature is enabled…",1,N],[12,"multi_value",E,"marks whether the proposed multi-value feature is enabled…",1,N],[3,R[395],E,"Indicates an unknown instance was specified.",N,N],[3,R[386],E,"A compiled wasm module, ready to be instantiated.",N,N],[3,R[387],E,"A namespace containing instances keyed by name.",N,N],[3,R[396],E,"`Resolver` implementation that always resolves to `None`.",N,N],[4,R[379],E,"An error detected while invoking a wasm function or…",N,N],[13,"Setup",E,"An internal implementation error occurred.",2,N],[13,"Field",E,"No field with the specified name was present.",2,N],[13,"Kind",E,"The field was present but was the wrong kind (eg.…",2,N],[13,"Type",E,"The field was present but was the wrong type (eg. i32,…",2,N],[4,R[380],E,"The result of invoking a wasm function or reading a wasm…",N,N],[13,"Returned",E,"The action returned normally. Its return values are…",3,N],[12,"values",R[283],"The return values.",3,N],[13,"Trapped",R[282],"A trap occurred while the action was executing.",3,N],[12,"message",R[283],"The trap message.",3,N],[4,R[381],R[282],"A runtime value.",N,N],[13,"I32",E,"A runtime value with type i32.",4,N],[13,"I64",E,"A runtime value with type i64.",4,N],[13,"F32",E,"A runtime value with type f32.",4,N],[13,"F64",E,"A runtime value with type f64.",4,N],[13,"V128",E,"A runtime value with type v128",4,N],[4,R[382],E,"Select which kind of compilation to use.",N,N],[13,"Auto",E,"Let Wasmtime pick the strategy.",5,N],[13,R[276],E,"Compile all functions with Cranelift.",5,N],[4,R[383],E,"Error message used by `WastContext`.",N,N],[13,R[90],E,"An unknown instance name was used.",6,N],[13,"Action",E,"An error occured while performing an action.",6,N],[4,R[384],E,"An error condition while setting up a wasm instance, be it…",N,N],[13,"Validate",E,"The module did not pass validation.",7,N],[13,"Compile",E,R[284],7,N],[13,"Instantiate",E,"Some runtime resource was unavailable or insufficient, or…",7,N],[13,"DebugInfo",E,"Debug information generation error occured.",7,N],[5,R[305],E,"Create a new wasm instance by compiling the wasm module in…",N,[[[R[293]],[R[301]],["rc",[R[302]]],[R[302],[R[355]]],["bool"]],[[R[13]],[R[285]],[R[15],[R[13],R[285]]]]]],[5,"link_module",E,"Links a module that has been compiled with…",N,[[[R[400]],[R[301]],[R[14]],[R[117]],[R[117]]],[[R[286]],[R[422]],[R[15],[R[422],R[286]]]]]],[5,"target_tunables",E,"Return a `Tunables` instance tuned for the given target…",N,[[["triple"]],[R[120]]]],[11,R[287],E,"Return the type of this `RuntimeValue`.",4,[[],["type"]]],[11,R[288],E,"Assuming this `RuntimeValue` holds an `i32`, return that…",4,[[],["i32"]]],[11,R[289],E,"Assuming this `RuntimeValue` holds an `i64`, return that…",4,[[],["i64"]]],[11,R[290],E,"Assuming this `RuntimeValue` holds an `f32`, return that…",4,[[],["f32"]]],[11,"unwrap_f32_bits",E,"Assuming this `RuntimeValue` holds an `f32`, return the…",4,[[],["u32"]]],[11,R[291],E,"Assuming this `RuntimeValue` holds an `f64`, return that…",4,[[],["f64"]]],[11,"unwrap_f64_bits",E,"Assuming this `RuntimeValue` holds an `f64`, return the…",4,[[],["u64"]]],[11,"new",E,"Create a new `CodeMemory` instance.",8,[[],["self"]]],[11,"allocate_for_function",E,"Allocate a continuous memory block for a single compiled…",8,[[["self"],[R[115]]],[[R[15],["string"]],["string"]]]],[11,"allocate_for_compilation",E,"Allocate a continuous memory block for a compilation.",8,[[["self"],[R[181]]],[["string"],["box"],[R[15],["box","string"]]]]],[11,"publish",E,"Make all allocated memory executable.",8,[[["self"]]]],[11,"new",E,"Construct a new `Compiler`.",9,[[[R[99]],[R[178]],["box",[R[178]]]],["self"]]],[11,R[202],E,"Return the target's frontend configuration settings.",9,[[["self"]],[R[102]]]],[11,R[120],E,"Return the tunables in use by this engine.",9,[[["self"]],[R[120]]]],[11,"get_published_trampoline",E,"Create and publish a trampoline for invoking a function.",9,[[["self"],[R[114]],["usize"]],[[R[285]],[R[15],[R[285]]]]]],[11,R[292],E,"Shared signature registry.",9,[[["self"]],["signatureregistry"]]],[11,"new",E,"Construct a new instance of `Context`.",10,[[["box",[R[293]]],[R[293]]],["self"]]],[11,R[294],E,"Get debug_info settings.",10,[[["self"]],["bool"]]],[11,"set_debug_info",E,"Set debug_info settings.",10,[[["self"],["bool"]]]],[11,"with_isa",E,"Construct a new instance of `Context` with the given target.",10,[[[R[99]],[R[178]],["box",[R[178]]]],["self"]]],[11,R[16],E,"Retrieve the context features",10,[[["self"]],[R[16]]]],[11,R[475],E,"Construct a new instance with the given features from the…",10,[[[R[16]]],["self"]]],[11,R[308],E,"Return the instance associated with the given name.",10,[[["self"],["str"]],[[R[13]],[R[295]],[R[15],[R[13],R[295]]]]]],[11,"instantiate_module",E,"Instantiate a module instance and register the instance.",10,[[["self"],["string"],[R[5],["string"]]],[[R[15],[R[13],R[296]]],[R[13]],[R[296]]]]],[11,R[176],E,"Compile a module.",10,[[["self"]],[[R[15],[R[297],R[285]]],[R[297]],[R[285]]]]],[11,"optionally_name_instance",E,"If `name` isn't None, register it for the given instance.",10,[[["self"],[R[13]],["string"],[R[5],["string"]]]]],[11,R[307],E,"Register a name for the given instance.",10,[[["self"],["string"],[R[13]]]]],[11,"alias",E,"Register an additional name for an existing registered…",10,[[["self"],["string"],["str"]],[[R[295]],[R[15],[R[295]]]]]],[11,"invoke_named",E,"Invoke an exported function from a named instance.",10,[[["self"],["str"]],[[R[298]],[R[15],[R[298],R[299]]],[R[299]]]]],[11,"invoke",E,"Invoke an exported function from an instance.",10,[[["self"],["str"],[R[13]]],[[R[298]],[R[296]],[R[15],[R[298],R[296]]]]]],[11,"get_named",E,R[300],10,[[["self"],["str"]],[[R[298]],[R[15],[R[298],R[299]]],[R[299]]]]],[11,"get",E,R[300],10,[[["self"],[R[13]],["str"]],[[R[298]],[R[296]],[R[15],[R[298],R[296]]]]]],[11,"inspect_memory",E,"Get a slice of memory from an instance.",10,[[["self"],["usize"],[R[13]],["str"]],[[R[15],[R[296]]],[R[296]]]]],[11,"get_global_exports",E,"Return a handle to the global_exports mapping, needed by…",10,[[["self"]],[["rc",[R[302]]],[R[302],[R[355]]]]]],[11,"new",E,"Compile a data buffer into a `CompiledModule`, which may…",11,[[[R[293]],[R[301]],["rc",[R[302]]],[R[302],[R[355]]],["bool"]],[[R[15],[R[285]]],[R[285]]]]],[11,"from_parts",E,"Construct a `CompiledModule` from component parts.",11,[[[R[5],[R[304]]],[R[116]],["box"],[R[303]],[R[14]],[R[422]],["rc",[R[302]]],[R[214],[R[172],R[303]]],[R[172]],[R[304]],[R[302],[R[355]]],[R[214],[R[116]]]],["self"]]],[11,R[305],E,"Crate an `Instance` from this `CompiledModule`.",11,[[["self"]],[[R[15],[R[13],R[306]]],[R[13]],[R[306]]]]],[11,R[14],E,R[345],11,[[["self"]],[["rc",[R[14]]],[R[14]]]]],[11,R[346],E,R[347],11,[[["self"]],[R[14]]]],[11,"new",E,"Construct a new `Namespace`.",12,[[],["self"]]],[11,R[307],E,"Install a new `InstanceHandle` in this `Namespace`,…",12,[[["self"],["string"],[R[13]]]]],[11,R[308],E,"Get the instance registered with the given `instance_name`.",12,[[["self"],["str"]],[[R[5],[R[13]]],[R[13]]]]],[0,"native",E,E,N,N],[5,"lookup","wasmtime_jit::native","Look for an ISA for the given `triple`. Return a builder…",N,[[["triple"]],[[R[15],[R[310],R[309]]],[R[310]],[R[309]]]]],[5,R[310],E,E,N,[[],[R[310]]]],[5,R[311],E,E,N,[[],[R[159]]]],[0,"trampoline",R[282],E,N,N],[5,"pretty_error",R[335],"Pretty-print a Cranelift error.",N,[[[R[178]],[R[5],[R[178]]],[R[146]],[R[147]]],["string"]]],[3,"Context",E,"Persistent data structures and compilation pipeline.",N,N],[12,"func",E,"The function we're compiling.",13,N],[12,"cfg",E,"The control flow graph of `func`.",13,N],[12,"domtree",E,"Dominator tree for `func`.",13,N],[12,"regalloc",E,"Register allocation context.",13,N],[12,"loop_analysis",E,"Loop analysis of `func`.",13,N],[12,R[354],E,"Redundant-reload remover context.",13,N],[3,R[388],E,"Temporary object used to build a single Cranelift IR…",N,N],[12,"func",E,"The function currently being built. This field is public…",14,N],[3,R[397],E,"Structure used for translating a series of functions into…",N,N],[0,"ir",E,E,N,N],[4,R[389],R[313],"The name of an external is either a reference to a…",N,N],[13,"User",E,"A name in a user-defined symbol table. Cranelift does not…",15,N],[12,"namespace",R[314],R[312],15,N],[12,"index",E,R[312],15,N],[13,"TestCase",R[313],"A test case function name of up to 10 ascii characters.…",15,N],[12,"length",R[314],"How many of the bytes in `ascii` are valid?",15,N],[12,"ascii",E,"Ascii bytes of the name.",15,N],[13,"LibCall",R[313],"A well-known runtime library function.",15,N],[3,R[390],E,R[315],N,N],[12,"name",E,"Name of this function. Mostly used by `.clif` files.",16,N],[12,R[114],E,"Signature of this function.",16,N],[12,"old_signature",E,"The old signature of this function, before the most recent…",16,N],[12,R[316],E,"Stack slots allocated in this function.",16,N],[12,"global_values",E,"Global values referenced.",16,N],[12,"heaps",E,"Heaps referenced.",16,N],[12,"tables",E,"Tables referenced.",16,N],[12,"jump_tables",E,"Jump tables used in this function.",16,N],[12,"dfg",E,"Data flow graph containing the primary definition of all…",16,N],[12,"layout",E,"Layout of EBBs and instructions in the function body.",16,N],[12,R[317],E,"Encoding recipe and bits for the legal instructions.…",16,N],[12,"locations",E,"Location assigned to every value.",16,N],[12,"entry_diversions",E,"Non-default locations assigned to value at the entry of…",16,N],[12,"offsets",E,"Code offsets of the EBB headers.",16,N],[12,R[318],E,"Code offsets of Jump Table headers.",16,N],[12,"srclocs",E,"Source locations.",16,N],[12,"prologue_end",E,"Instruction that marks the end (inclusive) of the…",16,N],[8,R[391],E,"Convenience methods for building instructions.",N,N],[11,"jump",E,"Jump.",17,[[["ebb"]],["inst"]]],[11,"fallthrough",E,"Fall through to the next EBB.",17,[[["ebb"]],["inst"]]],[11,"brz",E,"Branch when zero.",17,[[["value"],["ebb"]],["inst"]]],[11,"brnz",E,"Branch when non-zero.",17,[[["value"],["ebb"]],["inst"]]],[11,"br_icmp",E,"Compare scalar integers and branch.",17,[[["value"],["t1"],["ebb"]],["inst"]]],[11,"brif",E,"Branch when condition is true in integer CPU flags.",17,[[["value"],["t1"],["ebb"]],["inst"]]],[11,"brff",E,"Branch when condition is true in floating point CPU flags.",17,[[["value"],["t1"],["ebb"]],["inst"]]],[11,"br_table",E,"Indirect branch via jump table.",17,[[["value"],[R[319]],["ebb"]],["inst"]]],[11,"jump_table_entry",E,"Get an entry from a jump table.",17,[[["value"],["t1"],[R[319]]],["value"]]],[11,"jump_table_base",E,"Get the absolute base address of a jump table.",17,[[["type"],[R[319]]],["value"]]],[11,"indirect_jump_table_br",E,"Branch indirectly via a jump table entry.",17,[[["value"],[R[319]]],["inst"]]],[11,"debugtrap",E,"Encodes an assembly debug trap.",17,[[],["inst"]]],[11,"trap",E,"Terminate execution unconditionally.",17,[[["t1"]],["inst"]]],[11,"trapz",E,"Trap when zero.",17,[[["value"],["t1"]],["inst"]]],[11,"resumable_trap",E,"A resumable trap.",17,[[["t1"]],["inst"]]],[11,"trapnz",E,"Trap when non-zero.",17,[[["value"],["t1"]],["inst"]]],[11,"trapif",E,"Trap when condition is true in integer CPU flags.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"trapff",E,"Trap when condition is true in floating point CPU flags.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"return_",E,"Return from the function.",17,[[],["inst"]]],[11,"fallthrough_return",E,"Return from the function by fallthrough.",17,[[],["inst"]]],[11,"call",E,"Direct function call.",17,[[[R[357]]],["inst"]]],[11,"call_indirect",E,"Indirect function call.",17,[[["value"],["sigref"]],["inst"]]],[11,"func_addr",E,"Get the address of a function.",17,[[[R[357]],["type"]],["value"]]],[11,"load",E,"Load from memory at `p + Offset`.",17,[[["value"],["t1"],["t2"],["type"]],["value"]]],[11,"load_complex",E,"Load from memory at `sum(args) + Offset`.",17,[[["t1"],["t2"],["type"]],["value"]]],[11,"store",E,"Store `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"store_complex",E,"Store `x` to memory at `sum(args) + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"uload8",E,"Load 8 bits from memory at `p + Offset` and zero-extend.",17,[[["value"],["t1"],["t2"],["type"]],["value"]]],[11,"uload8_complex",E,R[320],17,[[["t1"],["t2"],["type"]],["value"]]],[11,"sload8",E,"Load 8 bits from memory at `p + Offset` and sign-extend.",17,[[["value"],["t1"],["t2"],["type"]],["value"]]],[11,"sload8_complex",E,R[320],17,[[["t1"],["t2"],["type"]],["value"]]],[11,"istore8",E,"Store the low 8 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore8_complex",E,"Store the low 8 bits of `x` to memory at `sum(args) +…",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"uload16",E,"Load 16 bits from memory at `p + Offset` and zero-extend.",17,[[["value"],["t1"],["t2"],["type"]],["value"]]],[11,"uload16_complex",E,R[321],17,[[["t1"],["t2"],["type"]],["value"]]],[11,"sload16",E,"Load 16 bits from memory at `p + Offset` and sign-extend.",17,[[["value"],["t1"],["t2"],["type"]],["value"]]],[11,"sload16_complex",E,R[321],17,[[["t1"],["t2"],["type"]],["value"]]],[11,"istore16",E,"Store the low 16 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore16_complex",E,"Store the low 16 bits of `x` to memory at `sum(args) +…",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"uload32",E,"Load 32 bits from memory at `p + Offset` and zero-extend.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"uload32_complex",E,R[322],17,[[["t2"],["t1"]],["value"]]],[11,"sload32",E,"Load 32 bits from memory at `p + Offset` and sign-extend.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"sload32_complex",E,R[322],17,[[["t2"],["t1"]],["value"]]],[11,"istore32",E,"Store the low 32 bits of `x` to memory at `p + Offset`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"istore32_complex",E,"Store the low 32 bits of `x` to memory at `sum(args) +…",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"stack_load",E,"Load a value from a stack slot at the constant offset.",17,[[[R[164]],["type"],["t1"]],["value"]]],[11,"stack_store",E,"Store a value to a stack slot at a constant offset.",17,[[["value"],[R[164]],["t1"]],["inst"]]],[11,"stack_addr",E,"Get the address of a stack slot.",17,[[[R[164]],["type"],["t1"]],["value"]]],[11,"global_value",E,"Compute the value of global GV.",17,[[["type"],[R[323]]],["value"]]],[11,"symbol_value",E,"Compute the value of global GV, which is a symbolic value.",17,[[["type"],[R[323]]],["value"]]],[11,"heap_addr",E,"Bounds check and compute absolute address of heap memory.",17,[[["value"],["t1"],["heap"],["type"]],["value"]]],[11,"get_pinned_reg",E,"Gets the content of the pinned register, when it's enabled.",17,[[["type"]],["value"]]],[11,"set_pinned_reg",E,"Sets the content of the pinned register, when it's enabled.",17,[[["value"]],["inst"]]],[11,"table_addr",E,"Bounds check and compute absolute address of a table entry.",17,[[["value"],["t1"],["type"],["table"]],["value"]]],[11,"iconst",E,"Integer constant.",17,[[["t1"],["type"]],["value"]]],[11,"f32const",E,R[324],17,[[["t1"]],["value"]]],[11,"f64const",E,R[324],17,[[["t1"]],["value"]]],[11,"bconst",E,"Boolean constant.",17,[[["t1"],["type"]],["value"]]],[11,"vconst",E,"SIMD vector constant.",17,[[["t1"],["type"]],["value"]]],[11,"shuffle",E,"SIMD vector shuffle.",17,[[["value"],["t1"]],["value"]]],[11,"null",E,"Null constant value for reference types.",17,[[["type"]],["value"]]],[11,"nop",E,"Just a dummy instruction.",17,[[],["inst"]]],[11,"select",E,"Conditional select.",17,[[["value"]],["value"]]],[11,"selectif",E,"Conditional select, dependent on integer condition codes.",17,[[["value"],["t1"],["type"]],["value"]]],[11,"bitselect",E,"Conditional select of bits.",17,[[["value"]],["value"]]],[11,"copy",E,"Register-register copy.",17,[[["value"]],["value"]]],[11,"spill",E,"Spill a register value to a stack slot.",17,[[["value"]],["value"]]],[11,"fill",E,"Load a register value from a stack slot.",17,[[["value"]],["value"]]],[11,"fill_nop",E,"This is identical to `fill`, except it has no encoding,…",17,[[["value"]],["value"]]],[11,"regmove",E,"Temporarily divert `x` from `src` to `dst`.",17,[[["value"],["t1"],["t2"]],["inst"]]],[11,"copy_special",E,"Copies the contents of ''src'' register to ''dst'' register.",17,[[["t2"],["t1"]],["inst"]]],[11,"copy_to_ssa",E,"Copies the contents of ''src'' register to ''a'' SSA name.",17,[[["t1"],["type"]],["value"]]],[11,"copy_nop",E,"Stack-slot-to-the-same-stack-slot copy, which is…",17,[[["value"]],["value"]]],[11,"adjust_sp_down",E,"Subtracts `delta` offset value from the stack pointer…",17,[[["value"]],["inst"]]],[11,"adjust_sp_up_imm",E,"Adds `Offset` immediate offset value to the stack pointer…",17,[[["t1"]],["inst"]]],[11,"adjust_sp_down_imm",E,"Subtracts `Offset` immediate offset value from the stack…",17,[[["t1"]],["inst"]]],[11,"ifcmp_sp",E,"Compare `addr` with the stack pointer and set the CPU flags.",17,[[["value"]],["value"]]],[11,"regspill",E,"Temporarily divert `x` from `src` to `SS`.",17,[[["value"],["t1"],[R[164]]],["inst"]]],[11,"regfill",E,"Temporarily divert `x` from `SS` to `dst`.",17,[[["value"],[R[164]],["t1"]],["inst"]]],[11,"safepoint",E,"This instruction will provide live reference values at a…",17,[[],["inst"]]],[11,"vsplit",E,"Split a vector into two halves.",17,[[["value"]]]],[11,"vconcat",E,"Vector concatenation.",17,[[["value"]],["value"]]],[11,"vselect",E,"Vector lane select.",17,[[["value"]],["value"]]],[11,"vany_true",E,R[325],17,[[["value"]],["value"]]],[11,"vall_true",E,R[325],17,[[["value"]],["value"]]],[11,"splat",E,"Vector splat.",17,[[["value"],["type"]],["value"]]],[11,"insertlane",E,"Insert `y` as lane `Idx` in x.",17,[[["value"],["t1"]],["value"]]],[11,"extractlane",E,"Extract lane `Idx` from `x`.",17,[[["value"],["t1"]],["value"]]],[11,"icmp",E,"Integer comparison.",17,[[["value"],["t1"]],["value"]]],[11,"icmp_imm",E,"Compare scalar integer to a constant.",17,[[["value"],["t1"],["t2"]],["value"]]],[11,"ifcmp",E,"Compare scalar integers and return flags.",17,[[["value"]],["value"]]],[11,"ifcmp_imm",E,"Compare scalar integer to a constant and return flags.",17,[[["value"],["t1"]],["value"]]],[11,"iadd",E,"Wrapping integer addition: `a := x + y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"uadd_sat",E,"Add with unsigned saturation.",17,[[["value"]],["value"]]],[11,"sadd_sat",E,"Add with signed saturation.",17,[[["value"]],["value"]]],[11,"isub",E,"Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"usub_sat",E,"Subtract with unsigned saturation.",17,[[["value"]],["value"]]],[11,"ssub_sat",E,"Subtract with signed saturation.",17,[[["value"]],["value"]]],[11,"ineg",E,"Integer negation: `a := -x \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"imul",E,"Wrapping integer multiplication: `a := x y \\pmod{2^B}`.",17,[[["value"]],["value"]]],[11,"umulhi",E,"Unsigned integer multiplication, producing the high half…",17,[[["value"]],["value"]]],[11,"smulhi",E,"Signed integer multiplication, producing the high half of…",17,[[["value"]],["value"]]],[11,"udiv",E,"Unsigned integer division: `a := \\lfloor {x \\over y}…",17,[[["value"]],["value"]]],[11,"sdiv",E,"Signed integer division rounded toward zero: `a :=…",17,[[["value"]],["value"]]],[11,"urem",E,"Unsigned integer remainder.",17,[[["value"]],["value"]]],[11,"srem",E,"Signed integer remainder. The result has the sign of the…",17,[[["value"]],["value"]]],[11,"iadd_imm",E,"Add immediate integer.",17,[[["value"],["t1"]],["value"]]],[11,"imul_imm",E,"Integer multiplication by immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"udiv_imm",E,"Unsigned integer division by an immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"sdiv_imm",E,"Signed integer division by an immediate constant.",17,[[["value"],["t1"]],["value"]]],[11,"urem_imm",E,"Unsigned integer remainder with immediate divisor.",17,[[["value"],["t1"]],["value"]]],[11,"srem_imm",E,"Signed integer remainder with immediate divisor.",17,[[["value"],["t1"]],["value"]]],[11,"irsub_imm",E,"Immediate reverse wrapping subtraction: `a := Y - x…",17,[[["value"],["t1"]],["value"]]],[11,"iadd_cin",E,R[326],17,[[["value"]],["value"]]],[11,"iadd_ifcin",E,R[326],17,[[["value"]],["value"]]],[11,"iadd_cout",E,R[327],17,[[["value"]]]],[11,"iadd_ifcout",E,R[327],17,[[["value"]]]],[11,"iadd_carry",E,R[328],17,[[["value"]]]],[11,"iadd_ifcarry",E,R[328],17,[[["value"]]]],[11,"isub_bin",E,R[329],17,[[["value"]],["value"]]],[11,"isub_ifbin",E,R[329],17,[[["value"]],["value"]]],[11,"isub_bout",E,R[330],17,[[["value"]]]],[11,"isub_ifbout",E,R[330],17,[[["value"]]]],[11,"isub_borrow",E,R[331],17,[[["value"]]]],[11,"isub_ifborrow",E,R[331],17,[[["value"]]]],[11,"band",E,"Bitwise and.",17,[[["value"]],["value"]]],[11,"bor",E,"Bitwise or.",17,[[["value"]],["value"]]],[11,"bxor",E,"Bitwise xor.",17,[[["value"]],["value"]]],[11,"bnot",E,"Bitwise not.",17,[[["value"]],["value"]]],[11,"band_not",E,"Bitwise and not.",17,[[["value"]],["value"]]],[11,"bor_not",E,"Bitwise or not.",17,[[["value"]],["value"]]],[11,"bxor_not",E,"Bitwise xor not.",17,[[["value"]],["value"]]],[11,"band_imm",E,"Bitwise and with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bor_imm",E,"Bitwise or with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bxor_imm",E,"Bitwise xor with immediate.",17,[[["value"],["t1"]],["value"]]],[11,"rotl",E,"Rotate left.",17,[[["value"]],["value"]]],[11,"rotr",E,"Rotate right.",17,[[["value"]],["value"]]],[11,"rotl_imm",E,"Rotate left by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"rotr_imm",E,"Rotate right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"ishl",E,"Integer shift left. Shift the bits in `x` towards the MSB…",17,[[["value"]],["value"]]],[11,"ushr",E,"Unsigned shift right. Shift bits in `x` towards the LSB by…",17,[[["value"]],["value"]]],[11,"sshr",E,"Signed shift right. Shift bits in `x` towards the LSB by…",17,[[["value"]],["value"]]],[11,"ishl_imm",E,"Integer shift left by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"ushr_imm",E,"Unsigned shift right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"sshr_imm",E,"Signed shift right by immediate.",17,[[["value"],["t1"]],["value"]]],[11,"bitrev",E,"Reverse the bits of a integer.",17,[[["value"]],["value"]]],[11,"clz",E,"Count leading zero bits.",17,[[["value"]],["value"]]],[11,"cls",E,"Count leading sign bits.",17,[[["value"]],["value"]]],[11,"ctz",E,"Count trailing zeros.",17,[[["value"]],["value"]]],[11,"popcnt",E,"Population count",17,[[["value"]],["value"]]],[11,"fcmp",E,"Floating point comparison.",17,[[["value"],["t1"]],["value"]]],[11,"ffcmp",E,"Floating point comparison returning flags.",17,[[["value"]],["value"]]],[11,"fadd",E,"Floating point addition.",17,[[["value"]],["value"]]],[11,"fsub",E,"Floating point subtraction.",17,[[["value"]],["value"]]],[11,"fmul",E,"Floating point multiplication.",17,[[["value"]],["value"]]],[11,"fdiv",E,"Floating point division.",17,[[["value"]],["value"]]],[11,"sqrt",E,"Floating point square root.",17,[[["value"]],["value"]]],[11,"fma",E,"Floating point fused multiply-and-add.",17,[[["value"]],["value"]]],[11,"fneg",E,"Floating point negation.",17,[[["value"]],["value"]]],[11,"fabs",E,"Floating point absolute value.",17,[[["value"]],["value"]]],[11,"fcopysign",E,"Floating point copy sign.",17,[[["value"]],["value"]]],[11,"fmin",E,"Floating point minimum, propagating NaNs.",17,[[["value"]],["value"]]],[11,"fmax",E,"Floating point maximum, propagating NaNs.",17,[[["value"]],["value"]]],[11,"ceil",E,"Round floating point round to integral, towards positive…",17,[[["value"]],["value"]]],[11,"floor",E,"Round floating point round to integral, towards negative…",17,[[["value"]],["value"]]],[11,"trunc",E,"Round floating point round to integral, towards zero.",17,[[["value"]],["value"]]],[11,"nearest",E,"Round floating point round to integral, towards nearest…",17,[[["value"]],["value"]]],[11,"is_null",E,"Reference verification.",17,[[["value"]],["value"]]],[11,"trueif",E,"Test integer CPU flags for a specific condition.",17,[[["value"],["t1"]],["value"]]],[11,"trueff",E,"Test floating point CPU flags for a specific condition.",17,[[["value"],["t1"]],["value"]]],[11,"bitcast",E,"Reinterpret the bits in `x` as a different type.",17,[[["value"],["type"]],["value"]]],[11,"raw_bitcast",E,"Cast the bits in `x` as a different type of the same bit…",17,[[["value"],["type"]],["value"]]],[11,"scalar_to_vector",E,"Scalar To Vector -- move a value out of a scalar register…",17,[[["value"],["type"]],["value"]]],[11,"breduce",E,"Convert `x` to a smaller boolean type in the…",17,[[["value"],["type"]],["value"]]],[11,"bextend",E,"Convert `x` to a larger boolean type in the…",17,[[["value"],["type"]],["value"]]],[11,"bint",E,"Convert `x` to an integer.",17,[[["value"],["type"]],["value"]]],[11,"bmask",E,"Convert `x` to an integer mask.",17,[[["value"],["type"]],["value"]]],[11,"ireduce",E,"Convert `x` to a smaller integer type by dropping high bits.",17,[[["value"],["type"]],["value"]]],[11,"uextend",E,"Convert `x` to a larger integer type by zero-extending.",17,[[["value"],["type"]],["value"]]],[11,"sextend",E,"Convert `x` to a larger integer type by sign-extending.",17,[[["value"],["type"]],["value"]]],[11,"fpromote",E,"Convert `x` to a larger floating point format.",17,[[["value"],["type"]],["value"]]],[11,"fdemote",E,"Convert `x` to a smaller floating point format.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint",E,"Convert floating point to unsigned integer.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint_sat",E,"Convert floating point to unsigned integer as fcvt_to_uint…",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint",E,"Convert floating point to signed integer.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint_sat",E,"Convert floating point to signed integer as fcvt_to_sint…",17,[[["value"],["type"]],["value"]]],[11,"fcvt_from_uint",E,"Convert unsigned integer to floating point.",17,[[["value"],["type"]],["value"]]],[11,"fcvt_from_sint",E,"Convert signed integer to floating point.",17,[[["value"],["type"]],["value"]]],[11,"isplit",E,"Split an integer into low and high parts.",17,[[["value"]]]],[11,"iconcat",E,"Concatenate low and high bits to form a larger integer type.",17,[[["value"]],["value"]]],[11,"x86_udivmodx",E,"Extended unsigned division.",17,[[["value"]]]],[11,"x86_sdivmodx",E,"Extended signed division.",17,[[["value"]]]],[11,"x86_umulx",E,"Unsigned integer multiplication, producing a double-length…",17,[[["value"]]]],[11,"x86_smulx",E,"Signed integer multiplication, producing a double-length…",17,[[["value"]]]],[11,"x86_cvtt2si",E,"Convert with truncation floating point to signed integer.",17,[[["value"],["type"]],["value"]]],[11,"x86_fmin",E,"Floating point minimum with x86 semantics.",17,[[["value"]],["value"]]],[11,"x86_fmax",E,"Floating point maximum with x86 semantics.",17,[[["value"]],["value"]]],[11,"x86_push",E,"Pushes a value onto the stack.",17,[[["value"]],["inst"]]],[11,"x86_pop",E,"Pops a value from the stack.",17,[[["type"]],["value"]]],[11,"x86_bsr",E,"Bit Scan Reverse -- returns the bit-index of the most…",17,[[["value"]]]],[11,"x86_bsf",E,"Bit Scan Forwards -- returns the bit-index of the least…",17,[[["value"]]]],[11,"x86_pshufd",E,"Packed Shuffle Doublewords -- copies data from either…",17,[[["value"],["t1"]],["value"]]],[11,"x86_pshufb",E,"Packed Shuffle Bytes -- re-orders data in an extended…",17,[[["value"]],["value"]]],[11,"x86_pextr",E,"Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",17,[[["value"],["t1"]],["value"]]],[11,"x86_pinsr",E,"Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",17,[[["value"],["t1"]],["value"]]],[11,"x86_insertps",E,"Insert a lane of `y` into `x` at using `Idx` to encode…",17,[[["value"],["t1"]],["value"]]],[11,"x86_movsd",E,"Move the low 64 bits of the float vector `y` to the low 64…",17,[[["value"]],["value"]]],[11,"x86_movlhps",E,"Move the low 64 bits of the float vector `y` to the high…",17,[[["value"]],["value"]]],[11,"x86_psll",E,"Shift Packed Data Left Logical -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_psrl",E,"Shift Packed Data Right Logical -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_psra",E,"Shift Packed Data Right Arithmetic -- This implements the…",17,[[["value"]],["value"]]],[11,"x86_ptest",E,"Logical Compare -- PTEST will set the ZF flag if all bits…",17,[[["value"]],["value"]]],[11,"x86_pmaxs",E,"Maximum of Packed Signed Integers -- Compare signed…",17,[[["value"]],["value"]]],[11,"x86_pmaxu",E,"Maximum of Packed Unsigned Integers -- Compare unsigned…",17,[[["value"]],["value"]]],[11,"x86_pmins",E,"Minimum of Packed Signed Integers -- Compare signed…",17,[[["value"]],["value"]]],[11,"x86_pminu",E,"Minimum of Packed Unsigned Integers -- Compare unsigned…",17,[[["value"]],["value"]]],[11,"Call",E,"Call(imms=(func_ref: ir::FuncRef), vals=0)",17,[[["value"],[R[332],["value"]],[R[357]],["type"],["opcode"]]]],[11,"Branch",E,"Branch(imms=(destination: ir::Ebb), vals=1)",17,[[["opcode"],["value"],[R[332],["value"]],["type"],["ebb"]]]],[11,"BranchFloat",E,"BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",17,[[["opcode"],["ebb"],["value"],[R[332],["value"]],["floatcc"],["type"]]]],[11,"Ternary",E,"Ternary(imms=(), vals=3)",17,[[["value"],["type"],["opcode"]]]],[11,"RegSpill",E,"RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",17,[[["value"],[R[164]],["u16"],["type"],["opcode"]]]],[11,"IntSelect",E,"IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",17,[[["value"],["intcc"],["type"],["opcode"]]]],[11,"IntCompare",E,"IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",17,[[["value"],["intcc"],["type"],["opcode"]]]],[11,"UnaryGlobalValue",E,"UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",17,[[[R[323]],["type"],["opcode"]]]],[11,"Jump",E,"Jump(imms=(destination: ir::Ebb), vals=0)",17,[[["opcode"],["value"],[R[332],["value"]],["type"],["ebb"]]]],[11,"CopyToSsa",E,"CopyToSsa(imms=(src: isa::RegUnit), vals=0)",17,[[["u16"],["type"],["opcode"]]]],[11,"Load",E,"Load(imms=(flags: ir::MemFlags, offset:…",17,[[["value"],[R[333]],[R[334]],["type"],["opcode"]]]],[11,"HeapAddr",E,"HeapAddr(imms=(heap: ir::Heap, imm:…",17,[[["value"],["heap"],["uimm32"],["type"],["opcode"]]]],[11,"ExtractLane",E,"ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)",17,[[["opcode"],["value"],["type"],["u8"]]]],[11,"CopySpecial",E,"CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",17,[[["u16"],["type"],["opcode"]]]],[11,"LoadComplex",E,"LoadComplex(imms=(flags: ir::MemFlags, offset:…",17,[[["value"],[R[332],["value"]],[R[333]],[R[334]],["type"],["opcode"]]]],[11,"IntCondTrap",E,"IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",17,[[["value"],["intcc"],[R[163]],["type"],["opcode"]]]],[11,"FloatCondTrap",E,"FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",17,[[["opcode"],["value"],[R[163]],["floatcc"],["type"]]]],[11,"BranchTable",E,"BranchTable(imms=(destination: ir::Ebb, table:…",17,[[["opcode"],[R[319]],["value"],["type"],["ebb"]]]],[11,"FloatCompare",E,"FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",17,[[["opcode"],["value"],["floatcc"],["type"]]]],[11,"IndirectJump",E,"IndirectJump(imms=(table: ir::JumpTable), vals=1)",17,[[["opcode"],["value"],["type"],[R[319]]]]],[11,"BranchTableEntry",E,"BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",17,[[["opcode"],[R[319]],["value"],["type"],["u8"]]]],[11,"UnaryIeee32",E,"UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",17,[[["ieee32"],["type"],["opcode"]]]],[11,"UnaryBool",E,"UnaryBool(imms=(imm: bool), vals=0)",17,[[["bool"],["type"],["opcode"]]]],[11,"NullAry",E,"NullAry(imms=(), vals=0)",17,[[["type"],["opcode"]]]],[11,"BranchInt",E,"BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",17,[[["ebb"],["intcc"],["value"],[R[332],["value"]],["type"],["opcode"]]]],[11,"Trap",E,"Trap(imms=(code: ir::TrapCode), vals=0)",17,[[[R[163]],["type"],["opcode"]]]],[11,"UnaryIeee64",E,"UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",17,[[["ieee64"],["type"],["opcode"]]]],[11,"RegMove",E,"RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",17,[[["value"],["u16"],["type"],["opcode"]]]],[11,"UnaryConst",E,"UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",17,[[["constant"],["type"],["opcode"]]]],[11,"BinaryImm",E,"BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)",17,[[["value"],["imm64"],["type"],["opcode"]]]],[11,"Unary",E,"Unary(imms=(), vals=1)",17,[[["value"],["type"],["opcode"]]]],[11,"InsertLane",E,"InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)",17,[[["opcode"],["value"],["type"],["u8"]]]],[11,"IntCond",E,"IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",17,[[["value"],["intcc"],["type"],["opcode"]]]],[11,"BranchIcmp",E,"BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",17,[[["ebb"],["intcc"],["value"],[R[332],["value"]],["type"],["opcode"]]]],[11,"FloatCond",E,"FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",17,[[["opcode"],["value"],["floatcc"],["type"]]]],[11,"Shuffle",E,"Shuffle(imms=(mask: ir::Immediate), vals=2)",17,[[["value"],["immediate"],["type"],["opcode"]]]],[11,"TableAddr",E,"TableAddr(imms=(table: ir::Table, offset:…",17,[[["opcode"],["value"],[R[333]],["table"],["type"]]]],[11,"FuncAddr",E,"FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",17,[[[R[357]],["type"],["opcode"]]]],[11,"CallIndirect",E,"CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",17,[[["value"],[R[332],["value"]],["sigref"],["type"],["opcode"]]]],[11,"Store",E,"Store(imms=(flags: ir::MemFlags, offset:…",17,[[["value"],[R[333]],[R[334]],["type"],["opcode"]]]],[11,"CondTrap",E,"CondTrap(imms=(code: ir::TrapCode), vals=1)",17,[[["value"],[R[163]],["type"],["opcode"]]]],[11,"BranchTableBase",E,"BranchTableBase(imms=(table: ir::JumpTable), vals=0)",17,[[[R[319]],["type"],["opcode"]]]],[11,"Binary",E,"Binary(imms=(), vals=2)",17,[[["value"],["type"],["opcode"]]]],[11,"MultiAry",E,"MultiAry(imms=(), vals=0)",17,[[["value"],[R[332],["value"]],["type"],["opcode"]]]],[11,"StackLoad",E,"StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",17,[[[R[164]],[R[333]],["type"],["opcode"]]]],[11,"StackStore",E,"StackStore(imms=(stack_slot: ir::StackSlot, offset:…",17,[[["value"],[R[164]],[R[333]],["type"],["opcode"]]]],[11,"StoreComplex",E,"StoreComplex(imms=(flags: ir::MemFlags, offset:…",17,[[["value"],[R[332],["value"]],[R[333]],[R[334]],["type"],["opcode"]]]],[11,"RegFill",E,"RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",17,[[["value"],[R[164]],["u16"],["type"],["opcode"]]]],[11,"IntCompareImm",E,"IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",17,[[["value"],["intcc"],["imm64"],["type"],["opcode"]]]],[11,"UnaryImm",E,"UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",17,[[["imm64"],["type"],["opcode"]]]],[3,"MemFlags",E,"Flags for memory operations like load/store.",N,N],[3,R[392],E,"Contents of a stack slot.",N,N],[12,"kind",E,"The kind of stack slot.",18,N],[12,"size",E,"Size of stack slot in bytes.",18,N],[12,"offset",E,"Offset of stack slot relative to the stack pointer in the…",18,N],[4,R[393],E,"The kind of a stack slot.",N,N],[13,"SpillSlot",E,"A spill slot. This is a stack slot created by the register…",19,N],[13,"ExplicitSlot",E,"An explicit stack slot. This is a chunk of stack memory…",19,N],[13,"IncomingArg",E,"An incoming function argument.",19,N],[13,"OutgoingArg",E,"An outgoing function argument.",19,N],[13,"StructReturnSlot",E,"Space allocated in the caller's frame for the callee's…",19,N],[13,"EmergencySlot",E,"An emergency spill slot.",19,N],[0,"binemit",R[335],E,N,N],[6,"CodeOffset",R[337],"Offset in bytes from the beginning of the function.",N,N],[3,R[398],E,"Placeholder StackmapSink that does nothing.",N,N],[8,"TrapSink",E,"A trait for receiving trap codes and offsets.",N,N],[10,"trap",E,"Add trap information for a specific offset.",20,[[["self"],["u32"],[R[166]],[R[163]]]]],[3,R[399],E,"We don't expect trampoline compilation to produce any…",N,N],[17,"VERSION",R[282],R[336],N,N],[8,"Resolver",E,"Import resolver connects imports with available exported…",N,N],[10,"resolve",E,"Resolve the given module/field combo.",21,[[["self"],["str"]],[["export"],[R[5],["export"]]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[35],E,E,22,[[[U]],[R[15]]]],[11,R[36],E,E,22,[[],[R[15]]]],[11,R[34],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[T]]],[11,R[37],E,E,22,[[["self"]],[R[39]]]],[11,R[151],E,E,22,[[["self"],["k"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[152],E,E,0,[[["self"]],["string"]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[[U]],[R[15]]]],[11,R[36],E,E,8,[[],[R[15]]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[R[39]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[35],E,E,9,[[[U]],[R[15]]]],[11,R[36],E,E,9,[[],[R[15]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[37],E,E,9,[[["self"]],[R[39]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[35],E,E,10,[[[U]],[R[15]]]],[11,R[36],E,E,10,[[],[R[15]]]],[11,R[34],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[39]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[152],E,E,23,[[["self"]],["string"]]],[11,R[35],E,E,23,[[[U]],[R[15]]]],[11,R[36],E,E,23,[[],[R[15]]]],[11,R[34],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[T]]],[11,R[37],E,E,23,[[["self"]],[R[39]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[[U]],[R[15]]]],[11,R[36],E,E,11,[[],[R[15]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[R[39]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[35],E,E,12,[[[U]],[R[15]]]],[11,R[36],E,E,12,[[],[R[15]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[R[39]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[35],E,E,24,[[[U]],[R[15]]]],[11,R[36],E,E,24,[[],[R[15]]]],[11,R[34],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[T]]],[11,R[37],E,E,24,[[["self"]],[R[39]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[152],E,E,2,[[["self"]],["string"]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[[U]],[R[15]]]],[11,R[36],E,E,3,[[],[R[15]]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[R[39]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[152],E,E,4,[[["self"]],["string"]]],[11,R[35],E,E,4,[[[U]],[R[15]]]],[11,R[36],E,E,4,[[],[R[15]]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[39]]]],[11,R[151],E,E,4,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[35],E,E,5,[[[U]],[R[15]]]],[11,R[36],E,E,5,[[],[R[15]]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[R[39]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[152],E,E,6,[[["self"]],["string"]]],[11,R[35],E,E,6,[[[U]],[R[15]]]],[11,R[36],E,E,6,[[],[R[15]]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[39]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[152],E,E,7,[[["self"]],["string"]]],[11,R[35],E,E,7,[[[U]],[R[15]]]],[11,R[36],E,E,7,[[],[R[15]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[39]]]],[11,"into",R[335],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[[U]],[R[15]]]],[11,R[36],E,E,13,[[],[R[15]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[R[39]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[35],E,E,14,[[[U]],[R[15]]]],[11,R[36],E,E,14,[[],[R[15]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[39]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[35],E,E,25,[[[U]],[R[15]]]],[11,R[36],E,E,25,[[],[R[15]]]],[11,R[34],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[T]]],[11,R[37],E,E,25,[[["self"]],[R[39]]]],[11,R[40],R[313],E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[152],E,E,15,[[["self"]],["string"]]],[11,R[35],E,E,15,[[[U]],[R[15]]]],[11,R[36],E,E,15,[[],[R[15]]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[39]]]],[11,R[151],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[152],E,E,16,[[["self"]],["string"]]],[11,R[35],E,E,16,[[[U]],[R[15]]]],[11,R[36],E,E,16,[[],[R[15]]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[39]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[152],E,E,26,[[["self"]],["string"]]],[11,R[35],E,E,26,[[[U]],[R[15]]]],[11,R[36],E,E,26,[[],[R[15]]]],[11,R[34],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"]],[T]]],[11,R[37],E,E,26,[[["self"]],[R[39]]]],[11,R[151],E,E,26,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[152],E,E,18,[[["self"]],["string"]]],[11,R[35],E,E,18,[[[U]],[R[15]]]],[11,R[36],E,E,18,[[],[R[15]]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[39]]]],[11,R[151],E,E,18,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[152],E,E,19,[[["self"]],["string"]]],[11,R[35],E,E,19,[[[U]],[R[15]]]],[11,R[36],E,E,19,[[],[R[15]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[37],E,E,19,[[["self"]],[R[39]]]],[11,R[151],E,E,19,[[["self"],["k"]],["bool"]]],[11,"into",R[337],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[35],E,E,27,[[[U]],[R[15]]]],[11,R[36],E,E,27,[[],[R[15]]]],[11,R[34],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"]],[T]]],[11,R[37],E,E,27,[[["self"]],[R[39]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[35],E,E,28,[[[U]],[R[15]]]],[11,R[36],E,E,28,[[],[R[15]]]],[11,R[34],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"]],[T]]],[11,R[37],E,E,28,[[["self"]],[R[39]]]],[11,R[158],R[313],E,18,[[["self"],["__s"]],[R[15]]]],[11,R[158],E,E,19,[[["self"],["__s"]],[R[15]]]],[11,R[160],E,E,15,[[["str"]],[[R[338]],[R[15],[R[338]]]]]],[11,R[160],E,E,19,[[["str"]],[[R[339]],[R[15],[R[339]]]]]],[11,"fmt",E,E,15,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,19,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"clone",E,E,16,[[["self"]],[R[146]]]],[11,"clone",E,E,18,[[["self"]],[R[165]]]],[11,"clone",E,E,26,[[["self"]],[R[334]]]],[11,"clone",E,E,15,[[["self"]],[R[338]]]],[11,"clone",E,E,19,[[["self"]],[R[339]]]],[11,"eq",E,E,26,[[["self"],[R[334]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[334]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[338]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[338]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[165]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[165]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[339]]],["bool"]]],[11,"fmt",E,E,19,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,R[170],E,E,19,[[["__d"]],[[R[15],[R[339]]],[R[339]]]]],[11,R[170],E,E,18,[[["__d"]],[[R[15],[R[165]]],[R[165]]]]],[11,R[43],E,E,15,[[],[R[338]]]],[11,"add_stackmap",R[337],E,27,[[["self"],["u32"],["stackmap"]]]],[11,"fmt",R[282],E,0,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"source",E,E,0,[[["self"]],[["error"],[R[5],["error"]]]]],[11,"clone",E,E,22,[[["self"]],[R[13]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[86]]],[[R[15],["error"]],["error"]]]],[11,"from",E,E,0,[[[R[286]]],[R[306]]]],[11,"drop",E,E,22,[[["self"]]]],[11,"eq",E,E,22,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[13]]],["bool"]]],[11,"resolve",E,E,12,[[["self"],["str"]],[["export"],[R[5],["export"]]]]],[11,"resolve",E,E,24,[[["self"],["str"]],[["export"],[R[5],["export"]]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"into",E,E,1,[[],["validatingparserconfig"]]],[11,R[43],E,E,1,[[],[R[16]]]],[11,"clone",E,E,4,[[["self"]],[R[340]]]],[11,"clone",E,E,5,[[["self"]],[R[99]]]],[11,"clone",E,E,1,[[["self"]],[R[16]]]],[11,"eq",E,E,4,[[["self"],[R[340]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[340]]],["bool"]]],[11,"from",E,E,2,[[[R[285]]],["self"]]],[11,"from",E,E,6,[[[R[295]]],["self"]]],[11,"from",E,E,6,[[[R[296]]],["self"]]],[11,"from",E,E,7,[[[R[150]]],["self"]]],[11,"from",E,E,7,[[[R[306]]],["self"]]],[11,"from",E,E,7,[[["error"]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[86]]],[R[15]]]],[11,"source",E,E,2,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"source",E,E,6,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"source",E,E,7,[[["self"]],[[R[5],["error"]],["error"]]]],[11,R[341],R[337],E,28,[[["self"],[R[185]],["reloc"]]]],[11,R[342],E,E,28,[[["self"],["addend"],[R[185]],[R[338]],["reloc"]]]],[11,R[343],E,E,28,[[["self"],[R[344]],[R[185]],["reloc"]]]],[11,"reloc_jt",E,E,28,[[["self"],[R[319]],[R[185]],["reloc"]]]],[11,"new",R[282],R[421],22,[[["rc",[R[302]]],[R[14]],["rc",[R[14]]],[R[116]],["box",["any"]],["rc",[R[304]]],[R[422]],[R[302],[R[355]]],["any"],[R[172]],[R[5],["rc"]],[R[214],[R[116]]],[R[303]],[R[214],[R[172],R[303]]]],[[R[306]],[R[15],[R[13],R[306]]],[R[13]]]]],[11,R[423],E,R[424],22,[[],[R[13]]]],[11,"vmctx",E,R[425],22,[[["self"]],[R[348]]]],[11,R[426],E,R[427],22,[[["self"]]]],[11,R[14],E,R[345],22,[[["self"]],[[R[14]],["rc",[R[14]]]]]],[11,R[346],E,R[347],22,[[["self"]],[R[14]]]],[11,R[428],E,R[429],22,[[["self"]],[R[348]]]],[11,R[430],E,R[431],22,[[["self"]]]],[11,"lookup",E,R[432],22,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[433],E,R[434],22,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[435],E,R[436],22,[[["self"],["export"]],["export"]]],[11,R[437],E,R[438],22,[[["self"],["export"]],["export"]]],[11,"exports",E,R[439],22,[[["self"]],[["export"],["string"],["iter",["string","export"]]]]],[11,R[440],E,R[441],22,[[["self"]],["any"]]],[11,R[126],E,R[442],22,[[["self"],[R[443]]],[R[128]]]],[11,R[444],E,R[445],22,[[["self"],[R[128]],["u32"]],[["u32"],[R[5],["u32"]]]]],[11,R[123],E,R[446],22,[[["self"],[R[447]]],[R[125]]]],[11,R[448],E,R[449],22,[[["self"],["u32"],[R[125]]],[["u32"],[R[5],["u32"]]]]],[11,R[450],E,R[451],22,[[["self"],["u32"],[R[125]]],[[R[349]],[R[5],[R[349]]]]]],[11,R[452],E,R[453],22,[[["self"],["u32"],[R[125]]],[[R[349]],[R[5],[R[349]]]]]],[11,"new",R[335],"Allocate a new compilation context.",13,[[],["context"]]],[11,"for_function",E,"Allocate a new compilation context with an existing…",13,[[[R[146]]],["context"]]],[11,"clear",E,"Clear all data structures in this context.",13,[[["self"]]]],[11,"compile_and_emit",E,"Compile the function, and emit machine code into a…",13,[[["self"],[R[178]],["vec"],[R[351]],["trapsink"],[R[352]]],[[R[15],[R[350],R[147]]],[R[350]],[R[147]]]]],[11,"compile",E,"Compile the function.",13,[[["self"],[R[178]]],[[R[15],[R[350],R[147]]],[R[350]],[R[147]]]]],[11,"emit_to_memory",E,"Emit machine code directly into raw memory.",13,[[["self"],[R[178]],[R[351]],["trapsink"],[R[352]]],[R[350]]]],[11,R[212],E,"Emit unwind information.",13,[[["self"],[R[178]],["vec"]]]],[11,"verify",E,"Run the verifier on the function.",13,[[["self"],["foi"]],[[R[353]],[R[15],[R[353]]]]]],[11,"verify_if",E,"Run the verifier only if the `enable_verifier` setting is…",13,[[["self"],["foi"]],[[R[15],[R[147]]],[R[147]]]]],[11,"verify_locations",E,"Run the locations verifier on the function.",13,[[["self"],[R[178]]],[[R[353]],[R[15],[R[353]]]]]],[11,"verify_locations_if",E,"Run the locations verifier only if the `enable_verifier`…",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"dce",E,"Perform dead-code elimination on the function.",13,[[["self"],["foi"]],[[R[15],[R[147]]],[R[147]]]]],[11,"preopt",E,"Perform pre-legalization rewrites on the function.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"canonicalize_nans",E,"Perform NaN canonicalizing rewrites on the function.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"legalize",E,"Run the legalizer for `isa` on the function.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"postopt",E,"Perform post-legalization rewrites on the function.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"compute_cfg",E,"Compute the control flow graph.",13,[[["self"]]]],[11,"compute_domtree",E,"Compute dominator tree.",13,[[["self"]]]],[11,"compute_loop_analysis",E,"Compute the loop analysis.",13,[[["self"]]]],[11,"flowgraph",E,"Compute the control flow graph and dominator tree.",13,[[["self"]]]],[11,"simple_gvn",E,"Perform simple GVN on the function.",13,[[["self"],["foi"]],[[R[15],[R[147]]],[R[147]]]]],[11,"licm",E,"Perform LICM on the function.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"eliminate_unreachable_code",E,"Perform unreachable code elimination.",13,[[["self"],["foi"]],[[R[15],[R[147]]],[R[147]]]]],[11,"regalloc",E,"Run the register allocator.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,R[210],E,"Insert prologue and epilogues after computing the stack…",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,R[354],E,"Do redundant-reload removal after allocation of both…",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"shrink_instructions",E,"Run the instruction shrinking pass.",13,[[["self"],[R[178]]],[[R[15],[R[147]]],[R[147]]]]],[11,"relax_branches",E,"Run the branch relaxation pass and return information…",13,[[["self"],[R[178]]],[[R[15],[R[350],R[147]]],[R[350]],[R[147]]]]],[11,"build_value_labels_ranges",E,"Builds ranges and location for specified value labels.",13,[[["self"],[R[178]]],[[R[15],[R[355],R[147]]],[R[355],[R[162],"vec","randomstate"]],[R[147]]]]],[11,"new",E,"Creates a new FunctionBuilder structure that will operate…",14,[[[R[360]],[R[146]]],["functionbuilder"]]],[11,"set_srcloc",E,"Set the source location that should be assigned to all new…",14,[[["self"],[R[166]]]]],[11,"create_ebb",E,"Creates a new `Ebb` and returns its reference.",14,[[["self"]],["ebb"]]],[11,"switch_to_block",E,"After the call to this function, new instructions will be…",14,[[["self"],["ebb"]]]],[11,"seal_block",E,"Declares that all the predecessors of this block are known.",14,[[["self"],["ebb"]]]],[11,"seal_all_blocks",E,"Effectively calls seal_block on all blocks in the function.",14,[[["self"]]]],[11,"declare_var",E,"In order to use a variable in a `use_var`, you need to…",14,[[["self"],[R[356]],["type"]]]],[11,"use_var",E,"Returns the Cranelift IR value corresponding to the…",14,[[["self"],[R[356]]],["value"]]],[11,"def_var",E,"Register a new definition of a user variable. The type of…",14,[[["self"],["value"],[R[356]]]]],[11,"set_val_label",E,"Set label for Value",14,[[["self"],["value"],[R[162]]]]],[11,R[361],E,R[362],14,[[["self"],[R[363]]],[R[319]]]],[11,R[364],E,R[365],14,[[["self"],[R[165]]],[R[164]]]],[11,R[366],E,R[367],14,[[["self"],[R[114]]],["sigref"]]],[11,R[368],E,R[369],14,[[["self"],[R[370]]],[R[357]]]],[11,R[371],E,R[372],14,[[["self"],[R[373]]],[R[323]]]],[11,R[374],E,R[375],14,[[["self"],["heapdata"]],["heap"]]],[11,"ins",E,"Returns an object with the `InstBuilder` trait that allows…",14,[[["self"]],["funcinstbuilder"]]],[11,"ensure_inserted_ebb",E,"Make sure that the current EBB is inserted in the layout.",14,[[["self"]]]],[11,"cursor",E,"Returns a `FuncCursor` pointed at the current position…",14,[[["self"]],["funccursor"]]],[11,"append_ebb_params_for_function_params",E,R[358],14,[[["self"],["ebb"]]]],[11,"append_ebb_params_for_function_returns",E,R[358],14,[[["self"],["ebb"]]]],[11,R[87],E,"Declare that translation of the current function is…",14,[[["self"]]]],[11,"ebb_params",E,"Retrieves all the parameters for an `Ebb` currently…",14,[[["self"],["ebb"]]]],[11,R[114],E,"Retrieves the signature with reference `sigref` previously…",14,[[["self"],["sigref"]],[[R[5],[R[114]]],[R[114]]]]],[11,"append_ebb_param",E,"Creates a parameter for a specific `Ebb` by appending it…",14,[[["self"],["type"],["ebb"]],["value"]]],[11,"inst_results",E,"Returns the result values of an instruction.",14,[[["self"],["inst"]]]],[11,"change_jump_destination",E,"Changes the destination of a jump instruction after…",14,[[["self"],["inst"],["ebb"]]]],[11,"is_unreachable",E,"Returns `true` if and only if the current `Ebb` is sealed…",14,[[["self"]],["bool"]]],[11,"is_pristine",E,"Returns `true` if and only if no instructions have been…",14,[[["self"]],["bool"]]],[11,"is_filled",E,"Returns `true` if and only if a terminator instruction has…",14,[[["self"]],["bool"]]],[11,"display",E,"Returns a displayable object for the function as it is.",14,[[["i"],["self"]],[R[376]]]],[11,"call_memcpy",E,"Calls libc.memcpy",14,[[["self"],["value"],[R[102]]]]],[11,"emit_small_memcpy",E,"Optimised memcpy for small copies.",14,[[["self"],["value"],["u8"],[R[102]],["u64"]]]],[11,"call_memset",E,R[359],14,[[["self"],["value"],[R[102]]]]],[11,"emit_small_memset",E,R[359],14,[[["self"],["value"],["u64"],[R[102]],["u8"]]]],[11,"call_memmove",E,"Calls libc.memmove",14,[[["self"],["value"],[R[102]]]]],[11,"emit_small_memmove",E,"Optimised memmove for small moves.",14,[[["self"],["value"],["u8"],[R[102]],["u64"]]]],[11,"new",E,"Creates a FunctionBuilderContext structure. The structure…",25,[[],[R[360]]]],[11,"testcase",R[313],"Creates a new external name from a sequence of bytes.…",15,[[[T]],[R[338]]]],[11,"user",E,"Create a new external name from user-provided integer…",15,[[["u32"]],[R[338]]]],[11,"with_name_signature",E,"Create a function with the given name and signature.",16,[[[R[338]],[R[114]]],[R[146]]]],[11,"clear",E,"Clear all data structures in this function.",16,[[["self"]]]],[11,"new",E,"Create a new empty, anonymous function with a Fast calling…",16,[[],[R[146]]]],[11,R[361],E,R[362],16,[[["self"],[R[363]]],[R[319]]]],[11,R[364],E,R[365],16,[[["self"],[R[165]]],[R[164]]]],[11,R[366],E,R[367],16,[[["self"],[R[114]]],["sigref"]]],[11,R[368],E,R[369],16,[[["self"],[R[370]]],[R[357]]]],[11,R[371],E,R[372],16,[[["self"],[R[373]]],[R[323]]]],[11,R[374],E,R[375],16,[[["self"],["heapdata"]],["heap"]]],[11,"create_table",E,"Declares a table accessible to the function.",16,[[["self"],["tabledata"]],["table"]]],[11,"display",E,R[377],16,[[["self"],["i"]],[R[376]]]],[11,"display_with",E,R[377],16,[[["self"],["displayfunctionannotations"]],[R[376]]]],[11,"special_param",E,"Find a presumed unique special-purpose function parameter…",16,[[["self"],[R[161]]],[["value"],[R[5],["value"]]]]],[11,"inst_offsets",E,"Get an iterator over the instructions in `ebb`, including…",16,[[["self"],["encinfo"],["ebb"]],["instoffsetiter"]]],[11,"update_encoding",E,"Wrapper around `encode` which assigns `inst` the resulting…",16,[[["self"],["inst"],[R[178]]],[R[15]]]],[11,"encode",E,"Wrapper around `TargetIsa::encode` for encoding an…",16,[[["self"],["inst"],[R[178]]],[[R[209]],[R[15],[R[209]]]]]],[11,"collect_debug_info",E,"Starts collection of debug information.",16,[[["self"]]]],[11,"change_branch_destination",E,"Changes the destination of a jump or branch instruction.…",16,[[["self"],["inst"],["ebb"]]]],[11,"is_ebb_basic",E,"Checks that the specified EBB can be encoded as a basic…",16,[[["self"],["ebb"]],[R[15]]]],[11,"is_leaf",E,"Returns true if the function is function that doesn't call…",16,[[["self"]],["bool"]]],[11,"new",E,"Create a new empty set of flags.",26,[[],[R[334]]]],[11,"trusted",E,"Create a set of flags representing an access from a…",26,[[],[R[334]]]],[11,"set_by_name",E,"Set a flag bit by name.",26,[[["self"],["str"]],["bool"]]],[11,"notrap",E,"Test if the `notrap` flag is set.",26,[[],["bool"]]],[11,"set_notrap",E,"Set the `notrap` flag.",26,[[["self"]]]],[11,"aligned",E,"Test if the `aligned` flag is set.",26,[[],["bool"]]],[11,"set_aligned",E,"Set the `aligned` flag.",26,[[["self"]]]],[11,"readonly",E,"Test if the `readonly` flag is set.",26,[[],["bool"]]],[11,R[798],E,"Set the `readonly` flag.",26,[[["self"]]]],[11,"new",E,"Create a stack slot with the specified byte size.",18,[[["u32"],[R[339]]],[R[165]]]],[11,"alignment",E,"Get the alignment in bytes of this stack slot given the…",18,[[["self"],["u32"]],["u32"]]]],"p":[[4,R[378]],[3,"Features"],[4,R[379]],[4,R[380]],[4,R[381]],[4,R[382]],[4,R[383]],[4,R[384]],[3,R[385]],[3,R[281]],[3,"Context"],[3,R[386]],[3,R[387]],[3,"Context"],[3,R[388]],[4,R[389]],[3,R[390]],[8,R[391]],[3,R[392]],[4,R[393]],[8,"TrapSink"],[8,"Resolver"],[3,R[394]],[3,R[395]],[3,R[396]],[3,R[397]],[3,"MemFlags"],[3,R[398]],[3,R[399]]]};
searchIndex["wasmtime_obj"]={"doc":"Object-file writing library using the wasmtime environment.","i":[[5,"emit_module","wasmtime_obj","Emits a module that has been emitted with the…",N,[[[R[181]],[R[14]],[R[400]],[R[401]],[R[102]]],[["string"],[R[15],["string"]]]]],[17,"VERSION",E,R[336],N,N]],"p":[]};
searchIndex["wasmtime_runtime"]={"doc":"Runtime library support for Wasmtime.","i":[[3,"Imports",R[406],"Resolved import pointers.",N,N],[12,"dependencies",E,"The set of instances that the imports depend on.",0,N],[12,R[402],E,"Resolved addresses for imported functions.",0,N],[12,"tables",E,"Resolved addresses for imported tables.",0,N],[12,"memories",E,"Resolved addresses for imported memories.",0,N],[12,"globals",E,"Resolved addresses for imported globals.",0,N],[3,R[394],E,R[403],N,N],[3,R[454],E,"An link error while instantiating a module.",N,N],[12,"0",E,E,1,N],[3,R[462],E,"Registeration for JIT image",N,N],[3,"Mmap",E,"A simple struct consisting of a page-aligned pointer to…",N,N],[3,R[463],E,"WebAssembly requires that the caller and callee signatures…",N,N],[3,R[467],E,"RAII guard for deregistering traps",N,N],[3,R[455],E,"The VM caller-checked \"anyfunc\" record, for caller-side…",N,N],[12,"func_ptr",E,"Function body.",2,N],[12,"type_index",E,"Function signature id.",2,N],[12,"vmctx",E,"Function `VMContext`.",2,N],[3,R[404],E,"The VM \"context\", which is pointed to by the `vmctx` arg…",N,N],[3,R[468],E,"A placeholder byte-sized type which is just used to…",N,N],[3,R[456],E,"An imported function.",N,N],[12,"body",E,"A pointer to the imported function body.",3,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the function.",3,N],[3,R[464],E,"The storage for a WebAssembly global defined within the…",N,N],[3,R[457],E,R[405],N,N],[12,"from",E,"A pointer to the imported global variable description.",4,N],[3,R[466],E,"The storage for a WebAssembly invocation argument",N,N],[3,R[458],E,R[405],N,N],[12,"base",E,"The start address.",5,N],[12,"current_length",E,"The current logical size of this linear memory in bytes.",5,N],[3,R[459],E,R[405],N,N],[12,"from",E,"A pointer to the imported memory description.",6,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the memory…",6,N],[3,R[465],E,"An index into the shared signature registry, usable for…",N,N],[3,R[460],E,R[405],N,N],[12,"base",E,"Pointer to the table data.",7,N],[12,"current_elements",E,"The current number of elements in the table.",7,N],[3,R[461],E,R[405],N,N],[12,"from",E,"A pointer to the imported table description.",8,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the table…",8,N],[4,"Export",E,"The value of an export passed from one instance to another.",N,N],[13,R[390],E,"A function export value.",9,N],[12,"address",R[407],"The address of the native-code function.",9,N],[12,"vmctx",E,R[408],9,N],[12,R[114],E,"The function signature declaration, used for compatibilty…",9,N],[13,"Table",R[406],"A table export value.",9,N],[12,R[409],R[407],"The address of the table descriptor.",9,N],[12,"vmctx",E,R[408],9,N],[12,"table",E,"The table declaration, used for compatibilty checking.",9,N],[13,R[1],R[406],"A memory export value.",9,N],[12,R[409],R[407],"The address of the memory descriptor.",9,N],[12,"vmctx",E,R[408],9,N],[12,R[84],E,"The memory declaration, used for compatibilty checking.",9,N],[13,R[0],R[406],"A global export value.",9,N],[12,R[409],R[407],"The address of the global storage.",9,N],[12,"vmctx",E,R[408],9,N],[12,R[8],E,"The global declaration, used for compatibilty checking.",9,N],[4,R[378],R[406],R[410],N,N],[13,"Resource",E,R[411],10,N],[13,"Link",E,R[412],10,N],[13,R[413],E,R[112],10,N],[5,"wasmtime_init_eager",E,"This function performs the low-overhead signal handler…",N,[[]]],[5,"wasmtime_init_finish",E,"Assuming `EnsureEagerProcessSignalHandlers` has already…",N,[[[R[348]]]]],[5,"get_mut_trap_registry",E,"Gets guarded writable reference to traps registry",N,[[],[[R[414]],["rwlockwriteguard",[R[414]]]]]],[5,"get_trap_registry",E,"Gets guarded readable reference to traps registry",N,[[],[[R[414]],["rwlockreadguard",[R[414]]]]]],[5,"wasmtime_call",E,"Call the wasm function pointed to by `callee`, which has…",N,[[],[["string"],[R[15],["string"]]]]],[5,"wasmtime_call_trampoline",E,"Call the wasm function pointed to by `callee`.…",N,[[],[["string"],[R[15],["string"]]]]],[11,R[146],E,"Construct a function export value.",9,[[[R[114]]],["self"]]],[11,"table",E,"Construct a table export value.",9,[[[R[415]]],["self"]]],[11,R[84],E,"Construct a memory export value.",9,[[[R[416]]],["self"]]],[11,R[8],E,"Construct a global export value.",9,[[[R[8]]],["self"]]],[11,"new",E,"Construct a new `Imports` instance.",0,[[[R[127]],[R[117],[R[129],R[418]]],["hashset",[R[13]]],[R[124]],[R[417]],[R[117],[R[122],R[417]]],[R[418]],[R[117],[R[124],R[419]]],[R[117],[R[127],R[420]]],[R[122]],[R[419]],[R[129]],[R[13]],[R[420]]],["self"]]],[11,"none",E,"Construct a new `Imports` instance with no imports.",0,[[],["self"]]],[11,"new",E,R[421],11,[[["rc",[R[302]]],[R[303]],[R[5],["rc"]],[R[116]],[R[422]],["rc",[R[304]]],[R[214],[R[116]]],["box",["any"]],[R[302],[R[355]]],[R[14]],[R[214],[R[172],R[303]]],["any"],["rc",[R[14]]],[R[172]]],[[R[306]],[R[15],[R[306]]]]]],[11,R[423],E,R[424],11,[[],["self"]]],[11,"vmctx",E,R[425],11,[[["self"]],[R[348]]]],[11,R[426],E,R[427],11,[[["self"]]]],[11,R[14],E,R[345],11,[[["self"]],[["rc",[R[14]]],[R[14]]]]],[11,R[346],E,R[347],11,[[["self"]],[R[14]]]],[11,R[428],E,R[429],11,[[["self"]],[R[348]]]],[11,R[430],E,R[431],11,[[["self"]]]],[11,"lookup",E,R[432],11,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[433],E,R[434],11,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[435],E,R[436],11,[[["self"],["export"]],["export"]]],[11,R[437],E,R[438],11,[[["self"],["export"]],["export"]]],[11,"exports",E,R[439],11,[[["self"]],[["iter",["string","export"]],["string"],["export"]]]],[11,R[440],E,R[441],11,[[["self"]],["any"]]],[11,R[126],E,R[442],11,[[["self"],[R[443]]],[R[128]]]],[11,R[444],E,R[445],11,[[["self"],[R[128]],["u32"]],[[R[5],["u32"]],["u32"]]]],[11,R[123],E,R[446],11,[[["self"],[R[447]]],[R[125]]]],[11,R[448],E,R[449],11,[[["self"],["u32"],[R[125]]],[[R[5],["u32"]],["u32"]]]],[11,R[450],E,R[451],11,[[["self"],["u32"],[R[125]]],[[R[5],[R[349]]],[R[349]]]]],[11,R[452],E,R[453],11,[[["self"],["u32"],[R[125]]],[[R[5],[R[349]]],[R[349]]]]],[11,"register",E,"Registers JIT image using __jit_debug_register_code",12,[[["vec",["u8"]],["u8"]],["self"]]],[11,"file",E,"JIT image used in registration",12,[[["self"]]]],[11,"new",E,"Construct a new empty instance of `Mmap`.",13,[[],["self"]]],[11,"with_at_least",E,"Create a new `Mmap` pointing to at least `size` bytes of…",13,[[["usize"]],[["string"],[R[15],["string"]]]]],[11,"accessible_reserved",E,"Create a new `Mmap` pointing to `accessible_size` bytes of…",13,[[["usize"]],[["string"],[R[15],["string"]]]]],[11,"make_accessible",E,"Make the memory starting at `start` and extending for…",13,[[["self"],["usize"]],[["string"],[R[15],["string"]]]]],[11,"as_slice",E,"Return the allocated memory as a slice of u8.",13,[[["self"]]]],[11,"as_mut_slice",E,"Return the allocated memory as a mutable slice of u8.",13,[[["self"]]]],[11,"as_ptr",E,"Return the allocated memory as a pointer to u8.",13,[[["self"]]]],[11,"as_mut_ptr",E,"Return the allocated memory as a mutable pointer to u8.",13,[[["self"]]]],[11,"len",E,"Return the length of the allocated memory.",13,[[["self"]],["usize"]]],[11,"new",E,"Create a new `SignatureRegistry`.",14,[[],["self"]]],[11,"register",E,"Register a signature and return its unique index.",14,[[["self"],[R[114]]],[R[303]]]],[11,"new",E,"Construct a `VMGlobalDefinition`.",15,[[],["self"]]],[11,"as_i32",E,"Return a reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_i32_mut",E,"Return a mutable reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_u32",E,"Return a reference to the value as a u32.",15,[[["self"]],["u32"]]],[11,"as_u32_mut",E,"Return a mutable reference to the value as an u32.",15,[[["self"]],["u32"]]],[11,"as_i64",E,"Return a reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_i64_mut",E,"Return a mutable reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_u64",E,"Return a reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_u64_mut",E,"Return a mutable reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_f32",E,"Return a reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_mut",E,"Return a mutable reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_bits",E,"Return a reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f32_bits_mut",E,"Return a mutable reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f64",E,"Return a reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_mut",E,"Return a mutable reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_bits",E,"Return a reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_f64_bits_mut",E,"Return a mutable reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_u128",E,"Return a reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_mut",E,"Return a mutable reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_bits",E,"Return a reference to the value as u128 bits.",15,[[["self"]]]],[11,"as_u128_bits_mut",E,"Return a mutable reference to the value as u128 bits.",15,[[["self"]]]],[11,"new",E,"Create a new `VMSharedSignatureIndex`.",16,[[["u32"]],["self"]]],[11,"new",E,"Create a new invocation argument filled with zeroes",17,[[],["self"]]],[11,R[440],E,"Return a mutable reference to the host state associated…",18,[[["self"]],["any"]]],[11,"lookup_global_export",E,"Lookup an export in the global exports namespace.",18,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[0,"libcalls",E,"Runtime library calls. Note that wasm compilers may…",N,N],[5,"wasmtime_f32_ceil","wasmtime_runtime::libcalls","Implementation of f32.ceil",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_floor",E,"Implementation of f32.floor",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_trunc",E,"Implementation of f32.trunc",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_nearest",E,"Implementation of f32.nearest",N,[[["f32"]],["f32"]]],[5,"wasmtime_f64_ceil",E,"Implementation of f64.ceil",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_floor",E,"Implementation of f64.floor",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_trunc",E,"Implementation of f64.trunc",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_nearest",E,"Implementation of f64.nearest",N,[[["f64"]],["f64"]]],[5,"wasmtime_memory32_grow",E,"Implementation of memory.grow for locally-defined 32-bit…",N,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_grow",E,"Implementation of memory.grow for imported 32-bit memories.",N,[[["u32"]],["u32"]]],[5,"wasmtime_memory32_size",E,"Implementation of memory.size for locally-defined 32-bit…",N,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_size",E,"Implementation of memory.size for imported 32-bit memories.",N,[[["u32"]],["u32"]]],[17,"VERSION",R[406],R[336],N,N],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[[U]],[R[15]]]],[11,R[36],E,E,11,[[],[R[15]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[R[39]]]],[11,R[151],E,E,11,[[["self"],["k"]],["bool"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[152],E,E,1,[[["self"]],["string"]]],[11,R[35],E,E,1,[[[U]],[R[15]]]],[11,R[36],E,E,1,[[],[R[15]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[39]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[35],E,E,12,[[[U]],[R[15]]]],[11,R[36],E,E,12,[[],[R[15]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[R[39]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[[U]],[R[15]]]],[11,R[36],E,E,13,[[],[R[15]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[R[39]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[35],E,E,14,[[[U]],[R[15]]]],[11,R[36],E,E,14,[[],[R[15]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[39]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[35],E,E,19,[[[U]],[R[15]]]],[11,R[36],E,E,19,[[],[R[15]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[37],E,E,19,[[["self"]],[R[39]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[35],E,E,2,[[[U]],[R[15]]]],[11,R[36],E,E,2,[[],[R[15]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[39]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[35],E,E,18,[[[U]],[R[15]]]],[11,R[36],E,E,18,[[],[R[15]]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[39]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[35],E,E,20,[[[U]],[R[15]]]],[11,R[36],E,E,20,[[],[R[15]]]],[11,R[34],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[T]]],[11,R[37],E,E,20,[[["self"]],[R[39]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[[U]],[R[15]]]],[11,R[36],E,E,3,[[],[R[15]]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[R[39]]]],[11,R[40],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[35],E,E,15,[[[U]],[R[15]]]],[11,R[36],E,E,15,[[],[R[15]]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[39]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[35],E,E,4,[[[U]],[R[15]]]],[11,R[36],E,E,4,[[],[R[15]]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[39]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[35],E,E,17,[[[U]],[R[15]]]],[11,R[36],E,E,17,[[],[R[15]]]],[11,R[34],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[T]]],[11,R[37],E,E,17,[[["self"]],[R[39]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[35],E,E,5,[[[U]],[R[15]]]],[11,R[36],E,E,5,[[],[R[15]]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[R[39]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[35],E,E,6,[[[U]],[R[15]]]],[11,R[36],E,E,6,[[],[R[15]]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[39]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[35],E,E,16,[[[U]],[R[15]]]],[11,R[36],E,E,16,[[],[R[15]]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[39]]]],[11,R[151],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[35],E,E,7,[[[U]],[R[15]]]],[11,R[36],E,E,7,[[],[R[15]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[39]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[[U]],[R[15]]]],[11,R[36],E,E,8,[[],[R[15]]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[R[39]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[35],E,E,9,[[[U]],[R[15]]]],[11,R[36],E,E,9,[[],[R[15]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[37],E,E,9,[[["self"]],[R[39]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[152],E,E,10,[[["self"]],["string"]]],[11,R[35],E,E,10,[[[U]],[R[15]]]],[11,R[36],E,E,10,[[],[R[15]]]],[11,R[34],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[39]]]],[11,"drop",E,E,11,[[["self"]]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,13,[[["self"]]]],[11,"drop",E,E,19,[[["self"]]]],[11,R[43],E,E,16,[[],["self"]]],[11,R[43],E,E,2,[[],["self"]]],[11,"clone",E,E,9,[[["self"]],["export"]]],[11,"clone",E,E,0,[[["self"]],[R[422]]]],[11,"clone",E,E,11,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[417]]]],[11,"clone",E,E,8,[[["self"]],[R[419]]]],[11,"clone",E,E,6,[[["self"]],[R[420]]]],[11,"clone",E,E,4,[[["self"]],[R[418]]]],[11,"clone",E,E,5,[[["self"]],[R[443]]]],[11,"clone",E,E,7,[[["self"]],[R[447]]]],[11,"clone",E,E,15,[[["self"]],["vmglobaldefinition"]]],[11,"clone",E,E,16,[[["self"]],[R[303]]]],[11,"clone",E,E,2,[[["self"]],[R[349]]]],[11,"clone",E,E,17,[[["self"]],["vminvokeargument"]]],[11,"eq",E,E,11,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[13]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[303]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[303]]],["bool"]]],[11,"from",E,E,10,[[[R[286]]],["self"]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"fmt",E,E,9,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,14,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,16,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[86]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[86]]],[R[15]]]],[11,"source",E,E,10,[[["self"]],[[R[5],["error"]],["error"]]]]],"p":[[3,"Imports"],[3,R[454]],[3,R[455]],[3,R[456]],[3,R[457]],[3,R[458]],[3,R[459]],[3,R[460]],[3,R[461]],[4,"Export"],[4,R[378]],[3,R[394]],[3,R[462]],[3,"Mmap"],[3,R[463]],[3,R[464]],[3,R[465]],[3,R[466]],[3,R[404]],[3,R[467]],[3,R[468]]]};
searchIndex["wasmtime_wasi"]={"doc":E,"i":[[5,R[470],"wasmtime_wasi",R[471],N,[[[R[4]]],[[R[12]],[R[306]],[R[15],[R[12],R[306]]]]]],[5,R[472],E,R[469],N,[[["rc",[R[302]]],[R[302],[R[355]]]],[[R[15],[R[13],R[306]]],[R[13]],[R[306]]]]],[5,R[473],E,R[469],N,[[[R[488]],[R[302],[R[355]]],["rc",[R[302]]]],[[R[15],[R[13],R[306]]],[R[13]],[R[306]]]]],[5,R[474],E,E,N,[[["str"]],["bool"]]],[0,"old",E,E,N,N],[0,R[799],"wasmtime_wasi::old",E,N,N],[5,R[470],"wasmtime_wasi::old::snapshot_0",R[471],N,[[[R[4]]],[[R[12]],[R[306]],[R[15],[R[12],R[306]]]]]],[5,R[472],E,R[469],N,[[["rc",[R[302]]],[R[302],[R[355]]]],[[R[15],[R[13],R[306]]],[R[13]],[R[306]]]]],[5,R[473],E,R[469],N,[[[R[488]],[R[302],[R[355]]],["rc",[R[302]]]],[[R[15],[R[13],R[306]]],[R[13]],[R[306]]]]],[5,R[474],E,E,N,[[["str"]],["bool"]]]],"p":[]};
searchIndex["wasmtime_wast"]={"doc":"Implementation of the WAST text format for wasmtime.","i":[[3,R[476],"wasmtime_wast","The wast test script language allows modules to be defined…",N,N],[5,"instantiate_spectest",E,"Return an instance implementing the \"spectest\" interface…",N,[[],[[R[306]],[R[13]],[R[15],[R[13],R[306]]]]]],[11,"new",E,"Construct a new instance of `WastContext`.",0,[[["box",[R[293]]],[R[293]]],["self"]]],[11,R[475],E,"Construct a new instance with the given features using the…",0,[[[R[16]]],["self"]]],[11,"register_spectest",E,"Register \"spectest\" which is used by the spec testsuite.",0,[[["self"]],[R[15]]]],[11,"run_buffer",E,"Run a wast script from a byte buffer.",0,[[["self"],["str"]],[R[15]]]],[11,"run_file",E,"Run a wast script from a file.",0,[[["self"],["path"]],[R[15]]]],[17,"VERSION",E,R[336],N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[35],E,E,0,[[[U]],[R[15]]]],[11,R[36],E,E,0,[[],[R[15]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[39]]]]],"p":[[3,R[476]]]};
searchIndex["wast"]={"doc":"CLI tool to run wast tests using the wasmtime libraries.","i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);